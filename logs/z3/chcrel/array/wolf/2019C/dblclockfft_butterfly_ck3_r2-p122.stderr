Failed to find a lemma for: (= ((_ extract 7 6) INV!slice!1_35_n)
   (bvmul #b11 ((_ extract 1 0) INV!slice!1_6_n)))
Available lemmas are: 21: (or (= INV!slice!1_51_n #b1) (= INV!slice!1_48_n #b1) (= INV!slice!1_9_n #b011))
22: (not ((_ bit2bool 2) INV!slice!1_22_n))
23: (let ((a!1 (and (= ((_ extract 3 0) INV!slice!1_54_n) #x0)
                (= ((_ extract 5 4) INV!slice!1_54_n)
                   (bvmul #b11 ((_ extract 1 0) INV!slice!1_8_n))))))
  (or (not (= INV!slice!1_48_n #b1)) (not (= INV!slice!1_65_n #b1)) a!1))
24: (let ((a!1 (and (= ((_ extract 5 0) INV!slice!1_35_n) #b000000)
                (= ((_ extract 7 6) INV!slice!1_35_n)
                   (bvmul #b11 ((_ extract 1 0) INV!slice!1_6_n))))))
  (or (= INV!slice!1_9_n #b011)
      (= ((_ extract 1 1) (bvadd #b001 INV!slice!1_9_n)) #b1)
      a!1))
25: (= ((_ extract 5 0) INV!slice!1_35_n) #b000000)
26: (= ((_ extract 9 8)
     (bvadd ((_ extract 38 6) INV!slice!1_35_n)
            (concat #b0000000000 INV!slice!1_6_n)))
   (bvmul #b11 (concat ((_ extract 0 0) INV!slice!1_25_n) #b0)))
27: (let ((a!1 (bvadd (concat #b000000 INV!slice!1_44_n)
                  ((_ extract 30 2)
                    (bvadd ((_ extract 38 8) INV!slice!1_49_n)
                           (concat #x00 INV!slice!1_20_n))))))
  (= ((_ extract 5 4) a!1) (bvmul #b11 ((_ extract 1 0) INV!slice!1_58_n))))
28: (and (= ((_ extract 5 0) INV!slice!1_35_n) #b000000)
     (= ((_ extract 7 6) INV!slice!1_35_n)
        (bvmul #b11 ((_ extract 1 0) INV!slice!1_6_n))))
29: (= ((_ extract 7 6)
     (bvadd ((_ extract 38 8) INV!slice!1_49_n) (concat #x00 INV!slice!1_20_n)))
   (bvmul #b11 ((_ extract 1 0) INV!slice!1_58_n)))
30: (let ((a!1 (= ((_ extract 9 8)
                (bvadd ((_ extract 38 6) INV!slice!1_35_n)
                       (concat #b0000000000 INV!slice!1_6_n)))
              (bvmul #b11 ((_ extract 1 0) INV!slice!1_25_n)))))
  (or (not (= INV!slice!1_51_n #b1)) a!1))
31: (let ((a!1 (and (= ((_ extract 5 0) INV!slice!1_35_n) #b000000)
                (= ((_ extract 7 6) INV!slice!1_35_n)
                   (bvmul #b11 ((_ extract 1 0) INV!slice!1_6_n))))))
  (or (not (= INV!slice!1_51_n #b1)) a!1))
32: (or (not ((_ bit2bool 36) INV!slice!1_43_n))
    ((_ bit2bool 0) INV!slice!1_64_n)
    (= ((_ extract 5 0) INV!slice!1_35_n) #b000000))
33: (or (= INV!slice!1_48_n #b1) (= ((_ extract 5 0) INV!slice!1_35_n) #b000000))
34: (let ((a!1 (and (= ((_ extract 3 0) INV!slice!1_54_n) #x0)
                (= ((_ extract 5 4) INV!slice!1_54_n)
                   (bvmul #b11 ((_ extract 1 0) INV!slice!1_8_n))))))
  (or (= INV!slice!1_51_n #b1) ((_ bit2bool 0) INV!slice!1_9_n) a!1))
Simplified goal is:
0: (or (= INV!slice!1_51_n #b1) (= INV!slice!1_48_n #b1) (= INV!slice!1_9_n #b011))
1: (not ((_ bit2bool 2) INV!slice!1_22_n))
2: (let ((a!1 (and (= ((_ extract 3 0) INV!slice!1_54_n) #x0)
                (= ((_ extract 5 4) INV!slice!1_54_n)
                   (bvmul #b11 ((_ extract 1 0) INV!slice!1_8_n))))))
  (or (not (= INV!slice!1_48_n #b1)) (not (= INV!slice!1_65_n #b1)) a!1))
3: (= ((_ extract 9 8)
     (bvadd ((_ extract 38 6) INV!slice!1_35_n)
            (concat #b0000000000 INV!slice!1_6_n)))
   (bvmul #b11 (concat ((_ extract 0 0) INV!slice!1_25_n) #b0)))
4: (let ((a!1 (bvadd (concat #b000000 INV!slice!1_44_n)
                  ((_ extract 30 2)
                    (bvadd ((_ extract 38 8) INV!slice!1_49_n)
                           (concat #x00 INV!slice!1_20_n))))))
  (= ((_ extract 5 4) a!1) (bvmul #b11 ((_ extract 1 0) INV!slice!1_58_n))))
5: (= ((_ extract 5 0) INV!slice!1_35_n) #b000000)
6: (= ((_ extract 7 6) INV!slice!1_35_n)
   (bvmul #b11 ((_ extract 1 0) INV!slice!1_6_n)))
7: (= ((_ extract 7 6)
     (bvadd ((_ extract 38 8) INV!slice!1_49_n) (concat #x00 INV!slice!1_20_n)))
   (bvmul #b11 ((_ extract 1 0) INV!slice!1_58_n)))
8: (let ((a!1 (= ((_ extract 9 8)
                (bvadd ((_ extract 38 6) INV!slice!1_35_n)
                       (concat #b0000000000 INV!slice!1_6_n)))
              (bvmul #b11 ((_ extract 1 0) INV!slice!1_25_n)))))
  (or (not (= INV!slice!1_51_n #b1)) a!1))
9: (let ((a!1 (and (= ((_ extract 3 0) INV!slice!1_54_n) #x0)
                (= ((_ extract 5 4) INV!slice!1_54_n)
                   (bvmul #b11 ((_ extract 1 0) INV!slice!1_8_n))))))
  (or (= INV!slice!1_51_n #b1) ((_ bit2bool 0) INV!slice!1_9_n) a!1))
Failed to verify: found
