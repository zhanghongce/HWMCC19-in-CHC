unsat
(forall ((A (_ BitVec 57))
         (B (_ BitVec 48))
         (C (_ BitVec 19))
         (D (_ BitVec 16))
         (E (_ BitVec 21))
         (F (_ BitVec 12))
         (G (_ BitVec 12))
         (H (_ BitVec 21))
         (I (_ BitVec 12))
         (J (_ BitVec 19))
         (K (_ BitVec 3))
         (L (_ BitVec 19))
         (M (_ BitVec 35))
         (N (_ BitVec 35))
         (O (_ BitVec 19))
         (P (_ BitVec 19))
         (Q (_ BitVec 16))
         (R (_ BitVec 16))
         (S (_ BitVec 16))
         (T (_ BitVec 19))
         (U (_ BitVec 1))
         (V (_ BitVec 16))
         (W (_ BitVec 28))
         (X (_ BitVec 19))
         (Y (_ BitVec 15))
         (Z (_ BitVec 15))
         (A1 (_ BitVec 1))
         (B1 (_ BitVec 19))
         (C1 (_ BitVec 1))
         (D1 (_ BitVec 36))
         (E1 (_ BitVec 19))
         (F1 (_ BitVec 1))
         (G1 (_ BitVec 1))
         (H1 (_ BitVec 19))
         (I1 (_ BitVec 1))
         (J1 (_ BitVec 21))
         (K1 (_ BitVec 1))
         (L1 (_ BitVec 1))
         (M1 (_ BitVec 1))
         (N1 (_ BitVec 19))
         (O1 (_ BitVec 35))
         (P1 (_ BitVec 1))
         (Q1 (_ BitVec 21))
         (R1 (_ BitVec 1))
         (S1 (_ BitVec 16))
         (T1 (_ BitVec 19))
         (U1 (_ BitVec 1))
         (V1 (_ BitVec 1))
         (W1 (_ BitVec 8))
         (X1 (_ BitVec 1))
         (Y1 (_ BitVec 36))
         (Z1 (_ BitVec 28))
         (A2 (_ BitVec 35))
         (B2 (_ BitVec 19))
         (C2 (_ BitVec 19))
         (D2 (_ BitVec 21))
         (E2 (_ BitVec 19))
         (F2 (_ BitVec 19))
         (G2 (_ BitVec 1))
         (H2 (_ BitVec 19))
         (I2 (_ BitVec 19))
         (J2 (_ BitVec 19))
         (K2 (_ BitVec 28))
         (L2 (_ BitVec 1))
         (M2 (_ BitVec 36))
         (N2 (_ BitVec 28))
         (O2 (_ BitVec 1)))
  (! (let ((a!1 (or (not (= ((_ extract 0 0) C) #b1))
                    (= ((_ extract 0 0) E1) #b1)))
           (a!2 (or ((_ bit2bool 0) N1) (not (= ((_ extract 0 0) P) #b1))))
           (a!3 (or (= K #b011)
                    ((_ bit2bool 17) B)
                    ((_ bit2bool 33) B)
                    (not ((_ bit2bool 16) B))
                    (not (= ((_ extract 14 0) B) #b000000000000100))))
           (a!4 ((_ extract 7 2)
                  (bvadd (concat #b000 ((_ extract 20 2) Q1)) (concat #b0 J1))))
           (a!7 (or ((_ bit2bool 1) E1)
                    (not (= ((_ extract 0 0) C) #b1))
                    (= ((_ extract 2 2) E1) #b1)
                    (= ((_ extract 9 0) Q1) ((_ extract 9 0) S1))
                    (= ((_ extract 0 0) J1) #b1)))
           (a!8 (concat ((_ extract 5 2)
                          (bvadd ((_ extract 34 4) N) (concat #b0000000000 H)))
                        (bvadd ((_ extract 5 4) N) ((_ extract 1 0) H))
                        ((_ extract 3 0) N)))
           (a!9 (concat ((_ extract 3 2)
                          (bvadd ((_ extract 34 6) A2) (concat #x00 D2)))
                        (bvadd ((_ extract 1 0) D2) ((_ extract 7 6) A2))
                        ((_ extract 5 0) A2)))
           (a!11 (= (concat (bvadd ((_ extract 1 0) E) ((_ extract 9 8) O1))
                            ((_ extract 7 0) O1))
                    ((_ extract 9 0) R))))
     (let ((a!5 (= (concat a!4
                           (bvadd ((_ extract 3 2) Q1) ((_ extract 1 0) J1))
                           ((_ extract 1 0) Q1))
                   ((_ extract 9 0) S1)))
           (a!10 (or ((_ bit2bool 33) B)
                     (not ((_ bit2bool 17) B))
                     (= a!8 ((_ extract 9 0) D))
                     (not (= ((_ extract 14 0) B) #b000000000000100))
                     (= ((_ extract 32 32) B) #b1))))
     (let ((a!6 (or ((_ bit2bool 2) C)
                    ((_ bit2bool 1) E1)
                    (not (= ((_ extract 0 0) C) #b1))
                    a!5)))
     (let ((a!12 (and (or (not (= C1 #b0)) (= R1 #b0))
                      (or ((_ bit2bool 0) L1)
                          (not ((_ bit2bool 0) X1))
                          (not (= K #b000)))
                      (not ((_ bit2bool 0) I))
                      (or (= K #b000) (not (= L1 #b1)) ((_ bit2bool 1) K))
                      (or (= K #b011) (not (= G1 #b1)) (not (= L1 #b1)))
                      (or (= K #b011) (not (= U1 #b1)) (not (= L1 #b1)))
                      (or (not (= G1 #b1))
                          (not (= A1 #b1))
                          (= ((_ extract 1 1) K) #b1))
                      (or (= K #b011) (not (= G1 #b1)) (not (= U1 #b1)))
                      (or (= G2 #b0) (not (= G1 #b1)) (not (= L1 #b1)))
                      (or ((_ bit2bool 34) B)
                          ((_ bit2bool 17) B)
                          ((_ bit2bool 18) B)
                          ((_ bit2bool 32) B)
                          (not ((_ bit2bool 2) B))
                          (not ((_ bit2bool 0) H2)))
                      (or ((_ bit2bool 1) B)
                          ((_ bit2bool 17) B)
                          ((_ bit2bool 32) B)
                          (not ((_ bit2bool 33) B))
                          (not ((_ bit2bool 2) B))
                          (not ((_ bit2bool 0) H2)))
                      (or ((_ bit2bool 19) B)
                          ((_ bit2bool 20) B)
                          ((_ bit2bool 35) B)
                          ((_ bit2bool 36) B)
                          (not ((_ bit2bool 4) B))
                          (not ((_ bit2bool 0) H2)))
                      (or ((_ bit2bool 0) B)
                          ((_ bit2bool 16) B)
                          (not ((_ bit2bool 32) B))
                          (not ((_ bit2bool 2) B))
                          (not ((_ bit2bool 0) H2)))
                      a!1
                      a!2
                      (or (not ((_ bit2bool 0) H2)) (= ((_ extract 0 0) L) #b1))
                      a!3
                      (or ((_ bit2bool 3) B)
                          (not ((_ bit2bool 0) H2))
                          (not ((_ bit2bool 2) B))
                          (not ((_ bit2bool 18) B))
                          (not ((_ bit2bool 19) B))
                          (not ((_ bit2bool 34) B))
                          (not ((_ bit2bool 35) B)))
                      (or ((_ bit2bool 4) B)
                          (not ((_ bit2bool 35) B))
                          (not ((_ bit2bool 36) B))
                          (not ((_ bit2bool 20) B))
                          (not ((_ bit2bool 19) B))
                          (not ((_ bit2bool 2) B))
                          (not ((_ bit2bool 0) H2)))
                      (or (= K #b011)
                          ((_ bit2bool 34) B)
                          (not ((_ bit2bool 32) B))
                          (not ((_ bit2bool 33) B))
                          (not ((_ bit2bool 18) B))
                          (not ((_ bit2bool 16) B))
                          (not ((_ bit2bool 2) B)))
                      a!6
                      a!7
                      (or ((_ bit2bool 2) H2)
                          ((_ bit2bool 1) L)
                          (not ((_ bit2bool 0) H2))
                          (= ((_ extract 9 0) D) ((_ extract 9 0) N)))
                      (not ((_ bit2bool 2) I))
                      (not ((_ bit2bool 0) G))
                      (not ((_ bit2bool 1) I))
                      (or (= ((_ extract 9 0) D) a!8)
                          (not (= H2 #b0000000000000000001)))
                      (not ((_ bit2bool 3) I))
                      (not ((_ bit2bool 1) G))
                      (or (not (= P #b0000000000000000001))
                          (= a!9 ((_ extract 9 0) S)))
                      a!10
                      (or (not (= C #b0000000000000000001)) a!5)
                      (not ((_ bit2bool 4) I))
                      (not ((_ bit2bool 2) G))
                      (not ((_ bit2bool 0) F))
                      (or (not (= O #b0000000000000000001)) a!11)
                      (not ((_ bit2bool 5) I))
                      (not ((_ bit2bool 3) G))
                      (not ((_ bit2bool 1) F))
                      (or (= ((_ extract 9 0) M) ((_ extract 9 0) Q))
                          (not (= T1 #b0000000000000000001))))))
       (= (INV!slice!1 A
                       B
                       C
                       D
                       E
                       F
                       G
                       H
                       I
                       J
                       K
                       L
                       M
                       N
                       O
                       P
                       Q
                       R
                       S
                       T
                       U
                       V
                       W
                       X
                       Y
                       Z
                       A1
                       B1
                       C1
                       D1
                       E1
                       F1
                       G1
                       H1
                       I1
                       J1
                       K1
                       L1
                       M1
                       N1
                       O1
                       P1
                       Q1
                       R1
                       S1
                       T1
                       U1
                       V1
                       W1
                       X1
                       Y1
                       Z1
                       A2
                       B2
                       C2
                       D2
                       E2
                       F2
                       G2
                       H2
                       I2
                       J2
                       K2
                       L2
                       M2
                       N2
                       O2)
          a!12)))))
     :weight 0))
