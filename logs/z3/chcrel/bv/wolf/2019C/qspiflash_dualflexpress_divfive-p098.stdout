unsat
(forall ((A (_ BitVec 1))
         (B (_ BitVec 1))
         (C (_ BitVec 1))
         (D (_ BitVec 1))
         (E (_ BitVec 1))
         (F (_ BitVec 32))
         (G (_ BitVec 22))
         (H (_ BitVec 1))
         (I (_ BitVec 1))
         (J (_ BitVec 1))
         (K (_ BitVec 22))
         (L (_ BitVec 1))
         (M (_ BitVec 2))
         (N (_ BitVec 1))
         (O (_ BitVec 1))
         (P (_ BitVec 1))
         (Q (_ BitVec 1))
         (R (_ BitVec 1))
         (S (_ BitVec 1))
         (T (_ BitVec 34))
         (U (_ BitVec 6))
         (V (_ BitVec 1))
         (W (_ BitVec 1))
         (X (_ BitVec 1))
         (Y (_ BitVec 2))
         (Z (_ BitVec 6))
         (A1 (_ BitVec 1))
         (B1 (_ BitVec 1))
         (C1 (_ BitVec 38))
         (D1 (_ BitVec 1))
         (E1 (_ BitVec 2))
         (F1 (_ BitVec 1))
         (G1 (_ BitVec 1))
         (H1 (_ BitVec 1))
         (I1 (_ BitVec 1))
         (J1 (_ BitVec 1))
         (K1 (_ BitVec 1))
         (L1 (_ BitVec 1))
         (M1 (_ BitVec 1))
         (N1 (_ BitVec 22))
         (O1 (_ BitVec 32))
         (P1 (_ BitVec 3))
         (Q1 (_ BitVec 6))
         (R1 (_ BitVec 1))
         (S1 (_ BitVec 1))
         (T1 (_ BitVec 1))
         (U1 (_ BitVec 32))
         (V1 (_ BitVec 1))
         (W1 (_ BitVec 1))
         (X1 (_ BitVec 1))
         (Y1 (_ BitVec 1))
         (Z1 (_ BitVec 32))
         (A2 (_ BitVec 1))
         (B2 (_ BitVec 2))
         (C2 (_ BitVec 1))
         (D2 (_ BitVec 22))
         (E2 (_ BitVec 1)))
  (! (let ((a!1 (or (not (= ((_ extract 1 1) Y) #b1)) (not (= L1 #b1))))
           (a!2 (or (not (= ((_ extract 5 5) Z) #b0))
                    (not (= ((_ extract 4 4) Z) #b0))
                    (not (= ((_ extract 3 3) Z) #b0))
                    (not (= ((_ extract 2 2) Z) #b0))
                    (not (= ((_ extract 1 1) Z) #b0))
                    (not (= ((_ extract 0 0) Z) #b0))))
           (a!4 (or (= H1 #b1)
                    ((_ bit2bool 10) O1)
                    (not (= ((_ extract 1 1) Y) #b1))
                    (= G1 #b0)))
           (a!5 (or (not ((_ bit2bool 1) C1))
                    (not (= ((_ extract 1 1) Y) #b1))
                    (not (= G1 #b1))
                    (not (= R #b0))))
           (a!6 (or ((_ bit2bool 0) S1)
                    (not (= G1 #b1))
                    (not (= ((_ extract 0 0) Z) #b1))))
           (a!7 (or (= (ite (= N #b1)
                            ((_ extract 31 30) T)
                            ((_ extract 33 32) T))
                       ((_ extract 21 20) G))
                    (ite (= N #b1)
                         (= ((_ extract 0 0) C1) #b0)
                         (= ((_ extract 1 1) C1) #b0)))))
     (let ((a!3 (= (ite (or (= N #b0) (not a!2)) Z (bvadd #b111111 Z)) #b000000)))
     (let ((a!8 (and (or (not ((_ bit2bool 0) C1)) (= ((_ extract 2 2) Z) #b1))
                     (not (= B1 #b1))
                     (or ((_ bit2bool 1) Y) (= Y #b00))
                     (or (not ((_ bit2bool 32) T)) (not (= M1 #b0)))
                     (or (not ((_ bit2bool 1) C1)) (not ((_ bit2bool 2) C1)))
                     (or (not (= Z #b000001))
                         (not ((_ bit2bool 0) S1))
                         (not (= M1 #b0)))
                     (or ((_ bit2bool 0) S1)
                         (not (= H #b1))
                         ((_ bit2bool 0) M1))
                     a!1
                     (or (not (= P #b1)) (not (= H #b1)))
                     (or (= W #b1)
                         (not (= G1 #b0))
                         (not ((_ bit2bool 0) S1))
                         (not (= M1 #b0))
                         ((_ bit2bool 1) Y))
                     (or (not (= L1 #b1)) (= ((_ extract 0 0) P1) #b1))
                     (or (not ((_ bit2bool 0) P1))
                         (not ((_ bit2bool 1) P1))
                         (not (= S #b0)))
                     (or ((_ bit2bool 0) D1)
                         (not ((_ bit2bool 1) P1))
                         ((_ bit2bool 0) P1)
                         (not (= V #b0)))
                     (or (not (= L1 #b1)) (= ((_ extract 2 2) P1) #b1))
                     (or (not ((_ bit2bool 0) X))
                         (not (= Z #b000000))
                         (= D1 #b1))
                     (or (not (= S1 #b1)) (not (= Z #b000000)) (not (= N #b1)))
                     (or (not (= H #b1)) (not (= I #b0)))
                     (or ((_ bit2bool 1) P1) (= S #b0))
                     (or (not (= W1 #b1)) (not ((_ bit2bool 0) W)))
                     (or ((_ bit2bool 0) S1) a!3)
                     (or ((_ bit2bool 0) S1) (= ((_ extract 5 1) Z) #b00000))
                     (or (not (= D1 #b0)) (not ((_ bit2bool 0) F1)))
                     (or (= H1 #b1)
                         (not (= S1 #b1))
                         (= Q1 U)
                         (not ((_ bit2bool 0) W)))
                     (or (= ((_ extract 5 5) Z) #b0)
                         (= Y #b10)
                         (not (= M1 #b0)))
                     (or ((_ bit2bool 0) V) (not (= H #b1)))
                     (or (not (= Y #b10))
                         (not (= G1 #b0))
                         (not (= S1 #b1))
                         ((_ bit2bool 5) Z)
                         (not (= M1 #b0)))
                     (or (= ((_ extract 5 1) Z) #b00000)
                         (= H1 #b1)
                         (not (= G1 #b0))
                         (= Q1 U)
                         ((_ bit2bool 1) Y))
                     (or (not ((_ bit2bool 0) W))
                         (= ((_ extract 5 1) Z) #b00000))
                     a!4
                     (or (not (= S1 #b1)) (not (= Z #b000000)) (not (= Y1 #b1)))
                     (or (not ((_ bit2bool 0) F1)) (not (= Z #b000000)))
                     (or (not (= G1 #b0))
                         (not ((_ bit2bool 0) C1))
                         ((_ bit2bool 1) Y))
                     (or (not ((_ bit2bool 0) C1))
                         (not (= M1 #b0))
                         (not ((_ bit2bool 0) H1)))
                     (or (= ((_ extract 1 1) Y) #b1)
                         (not (= R #b1))
                         (not ((_ bit2bool 0) C1)))
                     (or (not ((_ bit2bool 0) C1))
                         (= ((_ extract 21 20) G) ((_ extract 31 30) T)))
                     (or (= Z #b000000) ((_ bit2bool 0) S1) (not (= V #b0)))
                     (or (not ((_ bit2bool 1) C1)) (not (= Z #b000000)))
                     (or (= Z #b000000) ((_ bit2bool 0) S1) (not (= M1 #b0)))
                     (or (= P1 #b000) (not (= N #b1)))
                     (or (= Z #b000000) (not (= L1 #b1)))
                     (or (not ((_ bit2bool 1) C1)) (not (= P #b1)))
                     (or ((_ bit2bool 0) S1) (= X #b0) (= D1 #b1))
                     (or (= H #b0) (not ((_ bit2bool 0) H1)))
                     (or (not ((_ bit2bool 1) C1))
                         ((_ bit2bool 0) S1)
                         (not (= I #b0)))
                     (or (not ((_ bit2bool 1) C1))
                         ((_ bit2bool 12) O1)
                         ((_ bit2bool 1) Y))
                     (or (= ((_ extract 1 1) Y) #b1)
                         (not ((_ bit2bool 1) C1))
                         (not (= G1 #b0)))
                     a!5
                     (or ((_ bit2bool 0) D1)
                         (not ((_ bit2bool 1) P1))
                         ((_ bit2bool 0) P1)
                         (not (= H #b1)))
                     (or (= P #b1)
                         (not (= H1 #b1))
                         (not ((_ bit2bool 1) C1))
                         ((_ bit2bool 0) S1)
                         (not (= N #b1)))
                     (or (= H1 #b1) (= Y #b00) (not (= G1 #b1)) (not (= R #b0)))
                     (or ((_ bit2bool 0) M1) (not ((_ bit2bool 1) C1)))
                     (or (= Y #b00) (not (= J1 #b0)))
                     (or (= H1 #b1)
                         (not (= S1 #b1))
                         (not (= A2 #b1))
                         (not (= M1 #b0))
                         ((_ bit2bool 1) Y))
                     (or (= H #b0) (= G1 #b0))
                     a!6
                     a!7
                     (or ((_ bit2bool 0) S1)
                         (not ((_ bit2bool 0) D1))
                         ((_ bit2bool 0) F1)
                         (not (= H #b1))
                         (= ((_ extract 1 1) P1) #b1))
                     (or (not (= Z #b000001))
                         (not (= G1 #b0))
                         (= ((_ extract 0 0) Y) #b1))
                     (or ((_ bit2bool 0) S1)
                         (not (= H #b1))
                         (= ((_ extract 0 0) Y) #b1))
                     (or (= P1 #b001) (= I1 #b0))
                     (or (not ((_ bit2bool 0) F1)) (not (= N #b0)))
                     (or (= ((_ extract 1 1) C1) #b0)
                         (= ((_ extract 33 32) T) ((_ extract 21 20) G)))
                     (or (= Z #b000000) (not (= O #b0)) (not (= H #b1)))
                     (or (= H #b0) (= K N1))
                     (or ((_ bit2bool 0) L1) (not (= W #b1)) (not (= H #b1)))
                     (or (not ((_ bit2bool 0) C1)) (not ((_ bit2bool 1) C1))))))
       (= (INV!slice!1 A
                       B
                       C
                       D
                       E
                       F
                       G
                       H
                       I
                       J
                       K
                       L
                       M
                       N
                       O
                       P
                       Q
                       R
                       S
                       T
                       U
                       V
                       W
                       X
                       Y
                       Z
                       A1
                       B1
                       C1
                       D1
                       E1
                       F1
                       G1
                       H1
                       I1
                       J1
                       K1
                       L1
                       M1
                       N1
                       O1
                       P1
                       Q1
                       R1
                       S1
                       T1
                       U1
                       V1
                       W1
                       X1
                       Y1
                       Z1
                       A2
                       B2
                       C2
                       D2
                       E2)
          a!8))))
     :weight 0))
