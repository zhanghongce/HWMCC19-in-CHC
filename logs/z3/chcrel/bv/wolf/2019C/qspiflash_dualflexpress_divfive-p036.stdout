unsat
(forall ((A (_ BitVec 1))
         (B (_ BitVec 1))
         (C (_ BitVec 1))
         (D (_ BitVec 1))
         (E (_ BitVec 1))
         (F (_ BitVec 32))
         (G (_ BitVec 1))
         (H (_ BitVec 1))
         (I (_ BitVec 1))
         (J (_ BitVec 22))
         (K (_ BitVec 1))
         (L (_ BitVec 2))
         (M (_ BitVec 1))
         (N (_ BitVec 1))
         (O (_ BitVec 1))
         (P (_ BitVec 1))
         (Q (_ BitVec 1))
         (R (_ BitVec 2))
         (S (_ BitVec 1))
         (T (_ BitVec 34))
         (U (_ BitVec 6))
         (V (_ BitVec 1))
         (W (_ BitVec 1))
         (X (_ BitVec 1))
         (Y (_ BitVec 1))
         (Z (_ BitVec 6))
         (A1 (_ BitVec 1))
         (B1 (_ BitVec 1))
         (C1 (_ BitVec 2))
         (D1 (_ BitVec 1))
         (E1 (_ BitVec 1))
         (F1 (_ BitVec 1))
         (G1 (_ BitVec 1))
         (H1 (_ BitVec 1))
         (I1 (_ BitVec 1))
         (J1 (_ BitVec 1))
         (K1 (_ BitVec 1))
         (L1 (_ BitVec 1))
         (M1 (_ BitVec 22))
         (N1 (_ BitVec 32))
         (O1 (_ BitVec 3))
         (P1 (_ BitVec 6))
         (Q1 (_ BitVec 1))
         (R1 (_ BitVec 1))
         (S1 (_ BitVec 1))
         (T1 (_ BitVec 32))
         (U1 (_ BitVec 1))
         (V1 (_ BitVec 1))
         (W1 (_ BitVec 1))
         (X1 (_ BitVec 1))
         (Y1 (_ BitVec 32))
         (Z1 (_ BitVec 1))
         (A2 (_ BitVec 2))
         (B2 (_ BitVec 1))
         (C2 (_ BitVec 22))
         (D2 (_ BitVec 1)))
  (! (let ((a!1 (and (not (= V1 #b1))
                     (ite (= M #b1) (= ((_ extract 5 1) Z) #b00000) (= X #b1))))
           (a!2 (or (not (= ((_ extract 5 5) Z) #b0))
                    (not (= ((_ extract 2 2) Z) #b0))
                    (not (= ((_ extract 1 1) Z) #b0))
                    (not (= ((_ extract 0 0) Z) #b0))
                    (not (= ((_ extract 4 4) Z) #b0))
                    (not (= ((_ extract 3 3) Z) #b0))))
           (a!4 (or (= G #b0) (= G1 #b0) (not (= Z #b000010))))
           (a!6 (or (= G #b0) (= G1 #b0) (not (= Z #b000001))))
           (a!9 (or (= X #b1)
                    (not (= R1 #b0))
                    (not (= E1 #b0))
                    (not (= M1 (bvadd #b1111111111111111111111 J)))))
           (a!10 (or (not (= ((_ extract 2 2) Z) #b0))
                     (not (= ((_ extract 1 1) Z) #b0))
                     (not (= ((_ extract 0 0) Z) #b0)))))
     (let ((a!3 (= (ite (or (= M #b0) (not a!2)) Z (bvadd #b111111 Z)) #b000000))
           (a!5 (and a!4 (not (= ((_ extract 5 1) Z) #b00000))))
           (a!11 (and (not (= N #b0))
                      (not (= X #b1))
                      (or (= M #b0) (not (= Z #b000001)))
                      a!10
                      (= J M1)))
           (a!12 (ite (or (= M #b1) (= Z #b000000))
                      (or (not a!4) (= ((_ extract 5 1) Z) #b00000))
                      (not a!6))))
     (let ((a!7 (ite (or (= M #b1) (= Z #b000000)) a!5 a!6)))
     (let ((a!8 (or (not (= E1 #b0))
                    a!7
                    a!1
                    (not (= J (bvadd #b0000000000000000000001 M1))))))
     (let ((a!13 (and (or (= A #b0)
                          (= R #b11)
                          (not ((_ bit2bool 1) R))
                          (not (= I1 #b0)))
                      (not (= J1 #b1))
                      (or (= A #b0) ((_ bit2bool 0) W) (= H1 #b0))
                      (or (not (= M #b1)) (not (= H #b0)) (= A #b0))
                      (or (not (= R1 #b0)) (= A #b0))
                      (or (= A #b0) (not (= H #b0)) (not (= X1 #b1)))
                      (or (not ((_ bit2bool 33) T)) (not (= L1 #b0)))
                      (or (= A #b0) (not ((_ bit2bool 33) T)))
                      (or (= A #b0)
                          (not (= H1 #b1))
                          ((_ bit2bool 0) K1)
                          (not ((_ bit2bool 0) X)))
                      (or (= A #b0) (not (= H #b0)) (not (= Z1 #b1)))
                      (or (not ((_ bit2bool 0) K1)) (= X #b1))
                      (or (= A #b0) (= R #b11) (not ((_ bit2bool 0) R)))
                      (or (= ((_ extract 1 1) R) #b1)
                          (= K1 #b1)
                          (= A #b0)
                          (not (= H1 #b1)))
                      (or (not ((_ bit2bool 0) D1)) (not (= M #b0)))
                      (or (not (= G1 #b1)) (= O1 #b001))
                      (or (not (= M #b1)) (= O1 #b000))
                      (or (= Z #b000000) (not (= K1 #b1)))
                      (or (not (= V1 #b1)) (not (= E1 #b0)))
                      (or (= A #b0) (not (= E1 #b1)))
                      (or (= X #b1)
                          (not (= R1 #b0))
                          (not (= E1 #b0))
                          (not (= M #b0)))
                      (or (not (= M #b1)) (not (= I1 #b0)) (= A #b0))
                      (or (not (= E1 #b0)) a!1 (not a!3))
                      (or (not (= L1 #b0)) (not (= E1 #b0)) a!7 a!1)
                      a!8
                      (or (not (= H #b0)) (not (= E1 #b0)) a!7 a!1)
                      a!9
                      (or (= X #b1)
                          (not (= R1 #b0))
                          (not (= L1 #b0))
                          (not (= E1 #b0)))
                      (or (not (= O #b1)) (= G #b0))
                      (or (not (= E1 #b0)) a!1 a!11 (not a!12))
                      (or (= X #b1)
                          (not (= R1 #b0))
                          ((_ bit2bool 0) F1)
                          (not (= E1 #b0))
                          ((_ bit2bool 0) G))
                      (or (= X #b1)
                          (not (= H #b0))
                          (not (= R1 #b0))
                          (not (= E1 #b0))))))
       (= (INV!slice!1 A
                       B
                       C
                       D
                       E
                       F
                       G
                       H
                       I
                       J
                       K
                       L
                       M
                       N
                       O
                       P
                       Q
                       R
                       S
                       T
                       U
                       V
                       W
                       X
                       Y
                       Z
                       A1
                       B1
                       C1
                       D1
                       E1
                       F1
                       G1
                       H1
                       I1
                       J1
                       K1
                       L1
                       M1
                       N1
                       O1
                       P1
                       Q1
                       R1
                       S1
                       T1
                       U1
                       V1
                       W1
                       X1
                       Y1
                       Z1
                       A2
                       B2
                       C2
                       D2)
          a!13))))))
     :weight 0))
