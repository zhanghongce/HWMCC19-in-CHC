unsat
(forall ((A (_ BitVec 1))
         (B (_ BitVec 1))
         (C (_ BitVec 1))
         (D (_ BitVec 1))
         (E (_ BitVec 1))
         (F (_ BitVec 32))
         (G (_ BitVec 1))
         (H (_ BitVec 1))
         (I (_ BitVec 32))
         (J (_ BitVec 1))
         (K (_ BitVec 1))
         (L (_ BitVec 36))
         (M (_ BitVec 4))
         (N (_ BitVec 4))
         (O (_ BitVec 1))
         (P (_ BitVec 1))
         (Q (_ BitVec 1))
         (R (_ BitVec 1))
         (S (_ BitVec 1))
         (T (_ BitVec 1))
         (U (_ BitVec 1))
         (V (_ BitVec 1))
         (W (_ BitVec 32))
         (X (_ BitVec 5))
         (Y (_ BitVec 1))
         (Z (_ BitVec 2))
         (A1 (_ BitVec 2))
         (B1 (_ BitVec 1))
         (C1 (_ BitVec 1))
         (D1 (_ BitVec 3))
         (E1 (_ BitVec 4))
         (F1 (_ BitVec 1))
         (G1 (_ BitVec 1))
         (H1 (_ BitVec 2))
         (I1 (_ BitVec 1))
         (J1 (_ BitVec 1))
         (K1 (_ BitVec 22))
         (L1 (_ BitVec 4))
         (M1 (_ BitVec 1))
         (N1 (_ BitVec 1))
         (O1 (_ BitVec 1))
         (P1 (_ BitVec 1))
         (Q1 (_ BitVec 1))
         (R1 (_ BitVec 1))
         (S1 (_ BitVec 22))
         (T1 (_ BitVec 1))
         (U1 (_ BitVec 1))
         (V1 (_ BitVec 1))
         (W1 (_ BitVec 1))
         (X1 (_ BitVec 32))
         (Y1 (_ BitVec 1))
         (Z1 (_ BitVec 4))
         (A2 (_ BitVec 1))
         (B2 (_ BitVec 22))
         (C2 (_ BitVec 1)))
  (! (let ((a!1 (or (not ((_ bit2bool 0) L1))
                    (= ((_ extract 1 1) (bvadd #b11111 X)) #b1)))
           (a!2 (or (not (= ((_ extract 0 0) L1) #b1)) (= Z #b10)))
           (a!3 (or (not (= U #b1)) (not (= ((_ extract 1 1) D1) #b1))))
           (a!4 (or (not (= ((_ extract 0 0) Z) #b1))
                    (not (= J1 #b0))
                    (= ((_ extract 2 1) E1) #b00)))
           (a!5 (not (= L (concat ((_ extract 31 0) L) #x0))))
           (a!6 (or (= E1 #x0) (not (= ((_ extract 0 0) L1) #b1))))
           (a!7 (or ((_ bit2bool 0) N1) (not (= ((_ extract 0 0) L1) #b1))))
           (a!8 (and (not (= G #b0)) (not (= X #b00000)) (not (= B1 #b0))))
           (a!9 (and (= ((_ extract 4 1) X) #x0) (or (= O #b1) (= X #b00000))))
           (a!10 (or (not (= Y #b0))
                     (ite (= O #b1)
                          (= ((_ extract 1 1) L1) #b0)
                          (= ((_ extract 2 2) L1) #b0))))
           (a!11 (ite (or (= O #b0) (= B1 #b0))
                      (= B1 #b1)
                      (= ((_ extract 4 1) X) #x0)))
           (a!13 (or (not (= ((_ extract 4 4) X) #b0))
                     (not (= ((_ extract 1 1) X) #b0))
                     (not (= ((_ extract 0 0) X) #b0))
                     (not (= ((_ extract 2 2) X) #b0))
                     (not (= ((_ extract 3 3) X) #b0))))
           (a!15 (or (= V #b0)
                     (not (= ((_ extract 1 1) D1) #b1))
                     (= B1 #b1)
                     (not ((_ bit2bool 1) L1)))))
     (let ((a!12 (or (not ((_ bit2bool 0) D1))
                     (not ((_ bit2bool 1) D1))
                     a!11
                     (and (not (= Q #b0)) (not (= B1 #b1)))))
           (a!14 (ite (or (= O #b0) (not a!13))
                      (= ((_ extract 3 3) X) #b1)
                      (= ((_ extract 3 3) (bvadd #b11111 X)) #b1))))
     (let ((a!16 (and a!1
                      (or (not ((_ bit2bool 32) L)) (= M1 #b1))
                      (or (= O #b0) (= D1 #b000))
                      (not (= D1 #b111))
                      (not (= D1 #b110))
                      (or (not ((_ bit2bool 0) L1)) (not (= B1 #b0)))
                      (or (not ((_ bit2bool 0) L1)) (not (= Y #b0)))
                      (or (= ((_ extract 0 0) L1) #b0) (not (= J1 #b0)))
                      (or (not ((_ bit2bool 0) E1)) (not (= Y #b0)))
                      a!2
                      (or (not ((_ bit2bool 0) E1)) (not (= N1 #b0)))
                      (or (= E1 #x0) (not ((_ bit2bool 1) L1)))
                      (or (not (= Y #b0)) (= ((_ extract 2 1) E1) #b00))
                      a!3
                      (or (not (= M1 #b0)) (= ((_ extract 2 1) E1) #b00))
                      (or (= X #b00000) (not (= U #b1)))
                      (or (not (= T1 #b1)) (= ((_ extract 1 0) E1) #b00))
                      (not (= Z #b01))
                      (or (not (= G #b1)) (= O #b0))
                      (or (= Z #b00) (not (= U #b1)))
                      (or (not ((_ bit2bool 0) E1)) (not (= B1 #b0)))
                      (or ((_ bit2bool 0) X) (not ((_ bit2bool 0) E1)))
                      (or ((_ bit2bool 0) N1) (not ((_ bit2bool 1) L1)))
                      (or (= E1 #x0) (not ((_ bit2bool 2) L1)))
                      a!4
                      (or (not (= Y #b1)) (= M1 #b1) a!5)
                      (or ((_ bit2bool 1) X) (= ((_ extract 1 0) E1) #b00))
                      (or (= O #b0) (not (= X #b00000)) (not (= N1 #b1)))
                      (or (not ((_ bit2bool 1) L1)) (not (= Y #b0)))
                      (or (not ((_ bit2bool 1) L1)) (not (= J1 #b0)) (= Z #b00))
                      (or (not (= X #b00000)) (= ((_ extract 2 1) E1) #b00))
                      (or ((_ bit2bool 0) N1) (= ((_ extract 2 1) E1) #b00))
                      a!6
                      (or ((_ bit2bool 0) N1) (= V #b0) (= B1 #b1))
                      (or (not (= D1 #b001)) (not (= G #b0)))
                      (or (not (= U1 #b0))
                          ((_ bit2bool 0) M1)
                          (not ((_ bit2bool 1) L1)))
                      (or (not ((_ bit2bool 33) L)) (= M1 #b1))
                      (or (not (= U1 #b1))
                          (not (= C1 #b0))
                          (not ((_ bit2bool 0) L1)))
                      (or ((_ bit2bool 1) X) (not ((_ bit2bool 0) L1)))
                      a!7
                      (or (not (= D1 #b000))
                          ((_ bit2bool 0) B1)
                          (not (= O #b0))
                          (= ((_ extract 2 1) E1) #b00))
                      (or (not (= U1 #b1)) (not ((_ bit2bool 1) L1)))
                      (or (not (= Y #b1)) (not (= H #b1)))
                      (or (not (= D1 #b001))
                          (not (= C1 #b0))
                          (not ((_ bit2bool 0) O1))
                          a!8
                          a!9)
                      (or (not (= C1 #b0))
                          (not (= O #b1))
                          ((_ bit2bool 0) I1)
                          (not ((_ bit2bool 1) L1))
                          (not ((_ bit2bool 0) O1)))
                      a!10
                      (not (= ((_ extract 1 1) L) #b1))
                      (or (not (= U1 #b1))
                          (not ((_ bit2bool 5) L))
                          (not (= P #b0))
                          (not ((_ bit2bool 2) L1)))
                      a!12
                      (or (not (= D1 #b010)) a!11 a!14)
                      (or (not (= D1 #b001)) a!8 a!9 a!14)
                      (or (not (= G1 #b0))
                          (not (= C1 #b0))
                          (not (= O #b1))
                          ((_ bit2bool 3) X)
                          ((_ bit2bool 0) I1)
                          (not (= N1 #b1)))
                      (or (= Z #b00)
                          (not (= Y #b1))
                          (not (= P #b0))
                          (not (= J1 #b0)))
                      (or ((_ bit2bool 0) M1) (not ((_ bit2bool 2) L1)))
                      (or (= O #b0)
                          ((_ bit2bool 3) X)
                          ((_ bit2bool 0) I1)
                          (not ((_ bit2bool 1) L1)))
                      (or ((_ bit2bool 1) X) (not ((_ bit2bool 1) L1)))
                      (or ((_ bit2bool 0) N1) (not ((_ bit2bool 2) L1)))
                      (or ((_ bit2bool 1) X)
                          ((_ bit2bool 0) X)
                          (not ((_ bit2bool 2) L1)))
                      (or (= E1 #x0) (not ((_ bit2bool 3) L1)))
                      (or (not (= G1 #b0))
                          (not (= I1 #b1))
                          (not ((_ bit2bool 32) L))
                          ((_ bit2bool 0) N1))
                      (or (not ((_ bit2bool 2) L1)) (not (= J1 #b0)) (= Z #b00))
                      (or (not (= Q #b1)) (= ((_ extract 1 1) D1) #b1))
                      (or (not (= R1 #b1)) (not ((_ bit2bool 0) O1)))
                      a!15
                      (or (= V #b0)
                          (= ((_ extract 0 0) D1) #b1)
                          (= B1 #b1)
                          (not ((_ bit2bool 1) L1))))))
       (= (INV!slice!1 A
                       B
                       C
                       D
                       E
                       F
                       G
                       H
                       I
                       J
                       K
                       L
                       M
                       N
                       O
                       P
                       Q
                       R
                       S
                       T
                       U
                       V
                       W
                       X
                       Y
                       Z
                       A1
                       B1
                       C1
                       D1
                       E1
                       F1
                       G1
                       H1
                       I1
                       J1
                       K1
                       L1
                       M1
                       N1
                       O1
                       P1
                       Q1
                       R1
                       S1
                       T1
                       U1
                       V1
                       W1
                       X1
                       Y1
                       Z1
                       A2
                       B2
                       C2)
          a!16))))
     :weight 0))
