Failed to find a lemma for: (= ((_ extract 30 10) INV!slice!1_41_n)
   (bvmul #b111111111111111111111 (concat #b00 INV!slice!1_31_n)))
Available lemmas are: 42: (= ((_ extract 9 0) INV!slice!1_41_n) #b0000000000)
43: (and (= ((_ extract 9 0) INV!slice!1_41_n) #b0000000000)
     (= ((_ extract 30 10) INV!slice!1_41_n)
        (bvmul #b111111111111111111111 (concat #b00 INV!slice!1_31_n))))
44: (let ((a!1 (ite (= ((_ extract 2 1) INV!slice!1_49_n) #b00)
                (concat (bvadd (concat #b00 INV!slice!1_31_n)
                               ((_ extract 30 10) INV!slice!1_41_n))
                        ((_ extract 9 0) INV!slice!1_41_n))
                INV!slice!1_7_n)))
  (= a!1 #b0000000000000000000000000000000))
45: (or (= INV!slice!1_32_n #b1)
    (= INV!slice!1_26_n #b1)
    (= ((_ extract 9 0) INV!slice!1_41_n) #b0000000000))
46: (or (= INV!slice!1_26_n #b1)
    (= ((_ extract 9 0) INV!slice!1_41_n) #b0000000000)
    (= ((_ extract 0 0) INV!slice!1_49_n) #b1))
47: (or (= INV!slice!1_32_n #b1)
    (= INV!slice!1_26_n #b1)
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00))
48: (or (not (= INV!slice!1_32_n #b1))
    (= ((_ extract 9 0) INV!slice!1_41_n) #b0000000000))
49: (or (not (= INV!slice!1_35_n #b1))
    (= ((_ extract 9 0) INV!slice!1_41_n) #b0000000000))
50: (let ((a!1 (= ((_ extract 13 0) INV!slice!1_10_n)
              (bvadd (concat ((_ extract 12 12) INV!slice!1_5_n)
                             INV!slice!1_5_n)
                     (concat ((_ extract 12 12) INV!slice!1_19_n)
                             INV!slice!1_19_n)))))
  (or (= INV!slice!1_26_n #b1)
      (not ((_ bit2bool 14) INV!slice!1_10_n))
      (not ((_ bit2bool 28) INV!slice!1_10_n))
      ((_ bit2bool 29) INV!slice!1_10_n)
      (= ((_ extract 7 0) INV!slice!1_50_n) #x00)
      ((_ bit2bool 15) INV!slice!1_10_n)
      ((_ bit2bool 1) INV!slice!1_10_n)
      (not a!1)))
51: (or (not (= INV!slice!1_6_n #b1)) (= ((_ extract 7 0) INV!slice!1_50_n) #x00))
52: (or (= INV!slice!1_26_n #b1)
    (not (= INV!slice!1_49_n #b000))
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00))
53: (or (= INV!slice!1_26_n #b1)
    (not ((_ bit2bool 14) INV!slice!1_10_n))
    (not ((_ bit2bool 28) INV!slice!1_10_n))
    (not ((_ bit2bool 1) INV!slice!1_46_n))
    ((_ bit2bool 29) INV!slice!1_10_n)
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00)
    ((_ bit2bool 15) INV!slice!1_10_n)
    ((_ bit2bool 1) INV!slice!1_10_n))
54: (or (= INV!slice!1_32_n #b1)
    (= INV!slice!1_26_n #b1)
    (not ((_ bit2bool 14) INV!slice!1_10_n))
    (not ((_ bit2bool 28) INV!slice!1_10_n))
    (not ((_ bit2bool 0) INV!slice!1_46_n))
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00))
55: (or (not (= INV!slice!1_6_n #b1))
    (not (= INV!slice!1_35_n #b1))
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00))
56: (and (= ((_ extract 9 0) INV!slice!1_41_n) #b0000000000)
     (= (concat #b00 INV!slice!1_31_n)
        (bvmul #b111111111111111111111 ((_ extract 30 10) INV!slice!1_41_n))))
57: (or (= INV!slice!1_26_n #b1)
    (not (= INV!slice!1_49_n #b000))
    (= ((_ extract 5 0) INV!slice!1_40_n) #b000000))
58: (let ((a!1 (= (bvmul #b11111111111111
                     (concat ((_ extract 12 12) INV!slice!1_19_n)
                             INV!slice!1_19_n))
              (concat ((_ extract 12 12) INV!slice!1_5_n) INV!slice!1_5_n))))
  (or (= INV!slice!1_32_n #b1)
      (= INV!slice!1_26_n #b1)
      (not ((_ bit2bool 14) INV!slice!1_10_n))
      (= ((_ extract 7 0) INV!slice!1_50_n) #x00)
      (not a!1)))
59: (or (= INV!slice!1_32_n #b1)
    (not ((_ bit2bool 17) INV!slice!1_10_n))
    (not ((_ bit2bool 19) INV!slice!1_10_n))
    (not ((_ bit2bool 30) INV!slice!1_10_n))
    ((_ bit2bool 32) INV!slice!1_10_n)
    ((_ bit2bool 31) INV!slice!1_10_n)
    ((_ bit2bool 33) INV!slice!1_10_n)
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00)
    ((_ bit2bool 16) INV!slice!1_10_n))
60: (or (= INV!slice!1_32_n #b1)
    (= INV!slice!1_26_n #b1)
    (not ((_ bit2bool 14) INV!slice!1_10_n))
    (not ((_ bit2bool 28) INV!slice!1_10_n))
    (not ((_ bit2bool 1) INV!slice!1_46_n))
    ((_ bit2bool 29) INV!slice!1_10_n)
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00)
    ((_ bit2bool 15) INV!slice!1_10_n))
61: (or (= INV!slice!1_32_n #b1)
    (= INV!slice!1_26_n #b1)
    (not ((_ bit2bool 14) INV!slice!1_10_n))
    (not ((_ bit2bool 28) INV!slice!1_10_n))
    (not ((_ bit2bool 2) INV!slice!1_46_n))
    ((_ bit2bool 30) INV!slice!1_10_n)
    ((_ bit2bool 29) INV!slice!1_10_n)
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00)
    ((_ bit2bool 15) INV!slice!1_10_n)
    ((_ bit2bool 16) INV!slice!1_10_n))
62: (let ((a!1 (= (bvmul #b11111111111111111
                     (concat ((_ extract 31 31) INV!slice!1_8_n)
                             ((_ extract 31 16) INV!slice!1_8_n)))
              (concat ((_ extract 15 15) INV!slice!1_8_n)
                      ((_ extract 15 0) INV!slice!1_8_n)))))
  (or (= INV!slice!1_32_n #b1)
      (= INV!slice!1_26_n #b1)
      (not ((_ bit2bool 33) INV!slice!1_20_n))
      (= ((_ extract 7 0) INV!slice!1_50_n) #x00)
      (not a!1)))
63: (or (= INV!slice!1_26_n #b1)
    (not ((_ bit2bool 27) INV!slice!1_10_n))
    (not ((_ bit2bool 41) INV!slice!1_10_n))
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00)
    ((_ bit2bool 13) INV!slice!1_10_n))
64: (or (not (= INV!slice!1_26_n #b1))
    (not (= INV!slice!1_48_n #b0))
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00))
65: (or (not (= INV!slice!1_6_n #b1))
    (not (= INV!slice!1_35_n #b1))
    (= ((_ extract 5 0) INV!slice!1_40_n) #b000000))
66: (or (not (= INV!slice!1_6_n #b1))
    (not (= INV!slice!1_48_n #b1))
    (= ((_ extract 5 0) INV!slice!1_40_n) #b000000))
Simplified goal is:
0: (= ((_ extract 30 10) INV!slice!1_41_n)
   (bvmul #b111111111111111111111 (concat #b00 INV!slice!1_31_n)))
1: (let ((a!1 (ite (= ((_ extract 2 1) INV!slice!1_49_n) #b00)
                (concat (bvadd (concat #b00 INV!slice!1_31_n)
                               ((_ extract 30 10) INV!slice!1_41_n))
                        ((_ extract 9 0) INV!slice!1_41_n))
                INV!slice!1_7_n)))
  (= a!1 #b0000000000000000000000000000000))
2: (or (= INV!slice!1_32_n #b1)
    (= INV!slice!1_26_n #b1)
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00))
3: (let ((a!1 (= ((_ extract 13 0) INV!slice!1_10_n)
              (bvadd (concat ((_ extract 12 12) INV!slice!1_5_n)
                             INV!slice!1_5_n)
                     (concat ((_ extract 12 12) INV!slice!1_19_n)
                             INV!slice!1_19_n)))))
  (or (= INV!slice!1_26_n #b1)
      (not ((_ bit2bool 14) INV!slice!1_10_n))
      (not ((_ bit2bool 28) INV!slice!1_10_n))
      ((_ bit2bool 29) INV!slice!1_10_n)
      (= ((_ extract 7 0) INV!slice!1_50_n) #x00)
      ((_ bit2bool 15) INV!slice!1_10_n)
      ((_ bit2bool 1) INV!slice!1_10_n)
      (not a!1)))
4: (or (not (= INV!slice!1_6_n #b1)) (= ((_ extract 7 0) INV!slice!1_50_n) #x00))
5: (or (= INV!slice!1_26_n #b1)
    (not (= INV!slice!1_49_n #b000))
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00))
6: (or (= INV!slice!1_26_n #b1)
    (not ((_ bit2bool 14) INV!slice!1_10_n))
    (not ((_ bit2bool 28) INV!slice!1_10_n))
    (not ((_ bit2bool 1) INV!slice!1_46_n))
    ((_ bit2bool 29) INV!slice!1_10_n)
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00)
    ((_ bit2bool 15) INV!slice!1_10_n)
    ((_ bit2bool 1) INV!slice!1_10_n))
7: (= ((_ extract 9 0) INV!slice!1_41_n) #b0000000000)
8: (= (concat #b00 INV!slice!1_31_n)
   (bvmul #b111111111111111111111 ((_ extract 30 10) INV!slice!1_41_n)))
9: (or (= INV!slice!1_26_n #b1)
    (not (= INV!slice!1_49_n #b000))
    (= ((_ extract 5 0) INV!slice!1_40_n) #b000000))
10: (or (= INV!slice!1_32_n #b1)
    (not ((_ bit2bool 17) INV!slice!1_10_n))
    (not ((_ bit2bool 19) INV!slice!1_10_n))
    (not ((_ bit2bool 30) INV!slice!1_10_n))
    ((_ bit2bool 32) INV!slice!1_10_n)
    ((_ bit2bool 31) INV!slice!1_10_n)
    ((_ bit2bool 33) INV!slice!1_10_n)
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00)
    ((_ bit2bool 16) INV!slice!1_10_n))
11: (or (= INV!slice!1_26_n #b1)
    (not ((_ bit2bool 27) INV!slice!1_10_n))
    (not ((_ bit2bool 41) INV!slice!1_10_n))
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00)
    ((_ bit2bool 13) INV!slice!1_10_n))
12: (or (not (= INV!slice!1_26_n #b1))
    (not (= INV!slice!1_48_n #b0))
    (= ((_ extract 7 0) INV!slice!1_50_n) #x00))
13: (or (not (= INV!slice!1_6_n #b1))
    (not (= INV!slice!1_35_n #b1))
    (= ((_ extract 5 0) INV!slice!1_40_n) #b000000))
14: (or (not (= INV!slice!1_6_n #b1))
    (not (= INV!slice!1_48_n #b1))
    (= ((_ extract 5 0) INV!slice!1_40_n) #b000000))
ASSERTION VIOLATION
File: ../src/muz/spacer/spacer_context.cpp
Line: 2204
Failed to verify: found

Z3 4.8.9.0
Please file an issue with this message and more detail about how you encountered it at https://github.com/Z3Prover/z3/issues/new
