AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/goel/opensource/vis_arrays_bufferAlloc/pr_vis_arrays_bufferAlloc)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 229508)
@     0s  (started worker 1 with pid 229509)
@     0s  (started worker 2 with pid 229510)
@     0s  (started worker 3 with pid 229511)
@     0s  (started worker 4 with pid 229512)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 229626)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 104 MB)
@     2s  (started worker 6 with pid 229676)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 156 MB)
@     3s  (started worker 7 with pid 229720)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 202 MB)
@     6s  (started worker 8 with pid 229788)
@     6s  (spawned 1 workers)
@     6s  (total 9 workers using 268 MB)
@     9s  (started worker 9 with pid 229867)
@     9s  (spawned 1 workers)
@     9s  (total 10 workers using 377 MB)
@    12s  (started worker 10 with pid 229929)
@    12s  (spawned 1 workers)
@    12s  (total 11 workers using 474 MB)
@    24s  (total 11 workers using 789 MB)
@    41s  (total 11 workers using 1249 MB)
@    57s  (total 11 workers using 1685 MB)
@    71s  (total 11 workers using 1964 MB)
@    85s  (total 11 workers using 2200 MB)
@   101s  (total 11 workers using 2562 MB)
@   114s  (total 11 workers using 2871 MB)
@   128s  (total 11 workers using 3183 MB)
@   142s  (total 11 workers using 3548 MB)
@   156s  (total 11 workers using 3901 MB)
@   169s  (total 11 workers using 4165 MB)
@   184s  (total 11 workers using 4457 MB)
@   197s  (total 11 workers using 4694 MB)
@   211s  (total 11 workers using 4990 MB)
@   225s  (total 11 workers using 5278 MB)
@   239s  (total 11 workers using 5643 MB)
@   253s  (total 11 workers using 5890 MB)
@   267s  (total 11 workers using 6176 MB)
@   280s  (total 11 workers using 6509 MB)
@   295s  (total 11 workers using 6836 MB)
@   308s  (total 11 workers using 7226 MB)
@   322s  (total 11 workers using 7556 MB)
@   336s  (total 11 workers using 7764 MB)
@   350s  (total 11 workers using 8028 MB)
@   363s  (total 11 workers using 8343 MB)
@   378s  (total 11 workers using 8717 MB)
@   391s  (total 11 workers using 9082 MB)
@   405s  (total 11 workers using 9453 MB)
@   419s  (total 11 workers using 9789 MB)
@   433s  (total 11 workers using 10063 MB)
@   447s  (total 11 workers using 10362 MB)
@   461s  (total 11 workers using 10705 MB)
@   474s  (total 11 workers using 10989 MB)
@   489s  (total 11 workers using 11311 MB)
@   502s  (total 11 workers using 11630 MB)
@   516s  (total 11 workers using 11914 MB)
@   530s  (total 11 workers using 12224 MB)
@   544s  (total 11 workers using 12469 MB)
@   557s  (total 11 workers using 12763 MB)
@   571s  (total 11 workers using 13102 MB)
@   585s  (total 11 workers using 13431 MB)
@   599s  (total 11 workers using 13806 MB)
@   612s  (total 11 workers using 14103 MB)
@   627s  (total 11 workers using 14435 MB)
@   640s  (total 11 workers using 14740 MB)
@   654s  (total 11 workers using 15078 MB)
@   668s  (total 11 workers using 15331 MB)
@   682s  (total 11 workers using 15674 MB)
@   695s  (total 11 workers using 16054 MB)
@   709s  (total 11 workers using 16480 MB)
@   723s  (total 11 workers using 16878 MB)
@   737s  (total 11 workers using 17236 MB)
@   750s  (total 11 workers using 17560 MB)
@   764s  (total 11 workers using 17872 MB)
@   778s  (total 11 workers using 18184 MB)
@   792s  (total 11 workers using 18464 MB)
@   805s  (total 11 workers using 18818 MB)
@   820s  (total 11 workers using 19159 MB)
@   833s  (total 11 workers using 19528 MB)
@   847s  (total 11 workers using 19951 MB)
@   860s  (total 11 workers using 20269 MB)
@   874s  (total 11 workers using 20659 MB)
@   888s  (total 11 workers using 21000 MB)
@   902s  (total 11 workers using 21262 MB)
@   915s  (total 11 workers using 21597 MB)
@   929s  (total 11 workers using 22010 MB)
@   943s  (total 11 workers using 22347 MB)
@   957s  (total 11 workers using 22650 MB)
@   970s  (total 11 workers using 22886 MB)
@   984s  (total 11 workers using 23242 MB)
@   998s  (total 11 workers using 23584 MB)
@  1012s  (total 11 workers using 23906 MB)
@  1025s  (total 11 workers using 24211 MB)
@  1039s  (total 11 workers using 24592 MB)
@  1053s  (total 11 workers using 24944 MB)
@  1067s  (total 11 workers using 25353 MB)
@  1080s  (total 11 workers using 25707 MB)
@  1095s  (total 11 workers using 26104 MB)
@  1108s  (total 11 workers using 26478 MB)
@  1122s  (total 11 workers using 26840 MB)
@  1135s  (total 11 workers using 27106 MB)
@  1150s  (total 11 workers using 27378 MB)
@  1163s  (total 11 workers using 27615 MB)
@  1177s  (total 11 workers using 27857 MB)
@  1190s  (total 11 workers using 28100 MB)
@  1205s  (total 11 workers using 28372 MB)
@  1218s  (total 11 workers using 28645 MB)
@  1232s  (total 11 workers using 28916 MB)
@  1245s  (total 11 workers using 29195 MB)
@  1259s  (total 11 workers using 29480 MB)
@  1273s  (total 11 workers using 29765 MB)
@  1287s  (total 11 workers using 30015 MB)
@  1300s  (total 11 workers using 30301 MB)
@  1314s  (total 11 workers using 30625 MB)
@  1328s  (total 11 workers using 30975 MB)
@  1342s  (total 11 workers using 31343 MB)
@  1355s  (total 11 workers using 31733 MB)
@  1370s  (total 11 workers using 32061 MB)
@  1383s  (total 11 workers using 32394 MB)
@  1397s  (total 11 workers using 32702 MB)
@  1411s  (total 11 workers using 32959 MB)
@  1425s  (total 11 workers using 33294 MB)
@  1440s  (total 11 workers using 33574 MB)
@  1454s  (total 11 workers using 33586 MB)
@  1466s  (total 11 workers using 33578 MB)
@  1480s  (total 11 workers using 33605 MB)
@  1492s  (total 11 workers using 33591 MB)
@  1505s  (total 11 workers using 33580 MB)
@  1518s  (total 11 workers using 33581 MB)
@  1531s  (total 11 workers using 33577 MB)
@  1543s  (total 11 workers using 33604 MB)
@  1547s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  1557s  (total 10 workers using 25369 MB)
@  1569s  (total 10 workers using 25571 MB)
@  1581s  (total 10 workers using 25802 MB)
@  1592s  (total 10 workers using 26050 MB)
@  1604s  (total 10 workers using 26254 MB)
@  1615s  (total 10 workers using 26418 MB)
@  1627s  (total 10 workers using 26600 MB)
@  1638s  (total 10 workers using 26735 MB)
@  1650s  (total 10 workers using 26880 MB)
@  1662s  (total 10 workers using 27143 MB)
@  1675s  (total 10 workers using 27421 MB)
@  1687s  (total 10 workers using 27642 MB)
@  1699s  (total 10 workers using 27929 MB)
@  1711s  (total 10 workers using 28146 MB)
@  1724s  (total 10 workers using 28394 MB)
@  1736s  (total 10 workers using 28640 MB)
@  1749s  (total 10 workers using 28894 MB)
@  1761s  (total 10 workers using 29101 MB)
@  1774s  (total 10 workers using 29335 MB)
@  1786s  (total 10 workers using 29611 MB)
@  1799s  (total 10 workers using 29924 MB)
@  1811s  (total 10 workers using 30187 MB)
@  1824s  (total 10 workers using 30510 MB)
@  1836s  (total 10 workers using 30783 MB)
@  1849s  (total 10 workers using 31105 MB)
@  1861s  (total 10 workers using 31366 MB)
@  1874s  (total 10 workers using 31642 MB)
@  1886s  (total 10 workers using 31883 MB)
@  1898s  (total 10 workers using 32131 MB)
@  1911s  (total 10 workers using 32367 MB)
@  1924s  (total 10 workers using 32575 MB)
@  1936s  (total 10 workers using 32785 MB)
@  1949s  (total 10 workers using 32950 MB)
@  1961s  (total 10 workers using 33156 MB)
@  1973s  (total 10 workers using 33376 MB)
@  1985s  (total 10 workers using 33599 MB)
@  1998s  (total 10 workers using 33598 MB)
@  2009s  (total 10 workers using 33594 MB)
@  2017s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  2021s  (total 9 workers using 22841 MB)
@  2032s  (total 9 workers using 22989 MB)
@  2043s  (total 9 workers using 23136 MB)
@  2054s  (total 9 workers using 23268 MB)
@  2065s  (total 9 workers using 23352 MB)
@  2077s  (total 9 workers using 23559 MB)
@  2088s  (total 9 workers using 23681 MB)
@  2099s  (total 9 workers using 23825 MB)
@  2110s  (total 9 workers using 23997 MB)
@  2121s  (total 9 workers using 24126 MB)
@  2132s  (total 9 workers using 24300 MB)
@  2143s  (total 9 workers using 24428 MB)
@  2155s  (total 9 workers using 24541 MB)
@  2166s  (total 9 workers using 24684 MB)
@  2177s  (total 9 workers using 24763 MB)
@  2188s  (total 9 workers using 24923 MB)
@  2199s  (total 9 workers using 25080 MB)
@  2210s  (total 9 workers using 25197 MB)
@  2221s  (total 9 workers using 25327 MB)
@  2232s  (total 9 workers using 25413 MB)
@  2244s  (total 9 workers using 25447 MB)
@  2255s  (total 9 workers using 25566 MB)
@  2266s  (total 9 workers using 25725 MB)
@  2277s  (total 9 workers using 25910 MB)
@  2289s  (total 9 workers using 26096 MB)
@  2300s  (total 9 workers using 26279 MB)
@  2311s  (total 9 workers using 26485 MB)
@  2322s  (total 9 workers using 26693 MB)
@  2333s  (total 9 workers using 26900 MB)
@  2344s  (total 9 workers using 27110 MB)
@  2356s  (total 9 workers using 27390 MB)
@  2367s  (total 9 workers using 27641 MB)
@  2378s  (total 9 workers using 27862 MB)
@  2389s  (total 9 workers using 28079 MB)
@  2401s  (total 9 workers using 28333 MB)
@  2412s  (total 9 workers using 28584 MB)
@  2423s  (total 9 workers using 28807 MB)
@  2434s  (total 9 workers using 29044 MB)
@  2445s  (total 9 workers using 29277 MB)
@  2456s  (total 9 workers using 29490 MB)
@  2468s  (total 9 workers using 29647 MB)
@  2479s  (total 9 workers using 29752 MB)
@  2490s  (total 9 workers using 29908 MB)
@  2501s  (total 9 workers using 30048 MB)
@  2512s  (total 9 workers using 30155 MB)
@  2524s  (total 9 workers using 30256 MB)
@  2535s  (total 9 workers using 30398 MB)
@  2546s  (total 9 workers using 30565 MB)
@  2557s  (total 9 workers using 30750 MB)
@  2568s  (total 9 workers using 30912 MB)
@  2580s  (total 9 workers using 31056 MB)
@  2591s  (total 9 workers using 31237 MB)
@  2602s  (total 9 workers using 31397 MB)
@  2613s  (total 9 workers using 31585 MB)
@  2625s  (total 9 workers using 31775 MB)
@  2636s  (total 9 workers using 31990 MB)
@  2647s  (total 9 workers using 32170 MB)
@  2658s  (total 9 workers using 32354 MB)
@  2669s  (total 9 workers using 32553 MB)
@  2680s  (total 9 workers using 32732 MB)
@  2692s  (total 9 workers using 32928 MB)
@  2703s  (total 9 workers using 33148 MB)
@  2714s  (total 9 workers using 33397 MB)
@  2725s  (total 9 workers using 33595 MB)
@  2737s  (total 9 workers using 33595 MB)
@  2748s  (total 9 workers using 33594 MB)
@  2754s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  2759s  (total 8 workers using 19773 MB)
@  2770s  (total 8 workers using 19897 MB)
@  2781s  (total 8 workers using 20069 MB)
@  2792s  (total 8 workers using 20193 MB)
@  2803s  (total 8 workers using 20347 MB)
@  2814s  (total 8 workers using 20495 MB)
@  2825s  (total 8 workers using 20657 MB)
@  2835s  (total 8 workers using 20806 MB)
@  2846s  (total 8 workers using 20927 MB)
@  2857s  (total 8 workers using 21036 MB)
@  2868s  (total 8 workers using 21143 MB)
@  2879s  (total 8 workers using 21284 MB)
@  2890s  (total 8 workers using 21378 MB)
@  2901s  (total 8 workers using 21482 MB)
@  2912s  (total 8 workers using 21590 MB)
@  2923s  (total 8 workers using 21705 MB)
@  2934s  (total 8 workers using 21809 MB)
@  2945s  (total 8 workers using 21926 MB)
@  2956s  (total 8 workers using 22025 MB)
@  2966s  (total 8 workers using 22123 MB)
@  2977s  (total 8 workers using 22220 MB)
@  2988s  (total 8 workers using 22294 MB)
@  2999s  (total 8 workers using 22365 MB)
@  3010s  (total 8 workers using 22390 MB)
@  3021s  (total 8 workers using 22467 MB)
@  3032s  (total 8 workers using 22479 MB)
@  3043s  (total 8 workers using 22507 MB)
@  3054s  (total 8 workers using 22543 MB)
@  3065s  (total 8 workers using 22614 MB)
@  3076s  (total 8 workers using 22724 MB)
@  3087s  (total 8 workers using 22877 MB)
@  3097s  (total 8 workers using 22966 MB)
@  3109s  (total 8 workers using 23068 MB)
@  3119s  (total 8 workers using 23191 MB)
@  3130s  (total 8 workers using 23313 MB)
@  3141s  (total 8 workers using 23442 MB)
@  3152s  (total 8 workers using 23567 MB)
@  3163s  (total 8 workers using 23710 MB)
@  3174s  (total 8 workers using 23860 MB)
@  3185s  (total 8 workers using 24003 MB)
@  3196s  (total 8 workers using 24168 MB)
@  3207s  (total 8 workers using 24279 MB)
@  3218s  (total 8 workers using 24436 MB)
@  3229s  (total 8 workers using 24589 MB)
@  3240s  (total 8 workers using 24752 MB)
@  3250s  (total 8 workers using 24889 MB)
@  3261s  (total 8 workers using 25058 MB)
@  3272s  (total 8 workers using 25211 MB)
@  3283s  (total 8 workers using 25368 MB)
@  3294s  (total 8 workers using 25506 MB)
@  3305s  (total 8 workers using 25679 MB)
@  3316s  (total 8 workers using 25814 MB)
@  3327s  (total 8 workers using 25971 MB)
@  3338s  (total 8 workers using 26109 MB)
@  3349s  (total 8 workers using 26209 MB)
@  3360s  (total 8 workers using 26346 MB)
@  3371s  (total 8 workers using 26497 MB)
@  3381s  (total 8 workers using 26587 MB)
@  3392s  (total 8 workers using 26679 MB)
@  3403s  (total 8 workers using 26736 MB)
@  3414s  (total 8 workers using 26808 MB)
@  3425s  (total 8 workers using 26896 MB)
@  3436s  (total 8 workers using 27053 MB)
@  3447s  (total 8 workers using 27217 MB)
@  3458s  (total 8 workers using 27309 MB)
@  3469s  (total 8 workers using 27400 MB)
@  3480s  (total 8 workers using 27491 MB)
@  3491s  (total 8 workers using 27635 MB)
@  3502s  (total 8 workers using 27739 MB)
@  3512s  (total 8 workers using 27869 MB)
@  3523s  (total 8 workers using 27979 MB)
@  3534s  (total 8 workers using 28108 MB)
@  3545s  (total 8 workers using 28228 MB)
@  3556s  (total 8 workers using 28362 MB)
@  3567s  (total 8 workers using 28463 MB)
@  3576s  (stopping all workers)
@  3576s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3576s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3576s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3576s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3576s  (worker 2 finished with result unknown) python3 avr.py
@  3576s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3576s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3576s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3576s  (copied results from worker 0 in /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/goel/opensource/vis_arrays_bufferAlloc/pr_vis_arrays_bufferAlloc)
@  3576s  [0;30;47m(proof race finished with answer unknown in 3576.18 seconds)[m
