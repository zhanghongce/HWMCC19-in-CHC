AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/wolf/2018D/pr_VexRiscv-regch0-20-p0)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 100563)
@     0s  (started worker 1 with pid 100564)
@     0s  (started worker 2 with pid 100565)
@     0s  (started worker 3 with pid 100566)
@     0s  (started worker 4 with pid 100567)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 100681)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 284 MB)
@     2s  (started worker 6 with pid 100721)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 500 MB)
@     3s  (started worker 7 with pid 100766)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 588 MB)
@     6s  (started worker 8 with pid 100813)
@     6s  (spawned 1 workers)
@     6s  (total 9 workers using 814 MB)
@    10s  (started worker 9 with pid 100875)
@    10s  (spawned 1 workers)
@    10s  (total 10 workers using 1014 MB)
@    13s  (started worker 10 with pid 100928)
@    13s  (spawned 1 workers)
@    13s  (total 11 workers using 1196 MB)
@    26s  (total 11 workers using 1754 MB)
@    43s  (total 11 workers using 2053 MB)
@    60s  (total 11 workers using 2650 MB)
@    75s  (total 11 workers using 3056 MB)
@    90s  (total 11 workers using 3207 MB)
@   106s  (total 11 workers using 3469 MB)
@   120s  (total 11 workers using 3547 MB)
@   135s  (total 11 workers using 3702 MB)
@   148s  (total 11 workers using 3758 MB)
@   163s  (total 11 workers using 4817 MB)
@   177s  (total 11 workers using 5341 MB)
@   192s  (total 11 workers using 5747 MB)
@   206s  (total 11 workers using 6295 MB)
@   221s  (total 11 workers using 6453 MB)
@   234s  (total 11 workers using 7000 MB)
@   249s  (total 11 workers using 8159 MB)
@   263s  (total 11 workers using 8220 MB)
@   278s  (total 11 workers using 8849 MB)
@   292s  (total 11 workers using 8930 MB)
@   307s  (total 11 workers using 10237 MB)
@   321s  (total 11 workers using 10862 MB)
@   337s  (total 11 workers using 10873 MB)
@   347s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@   351s  (total 10 workers using 8991 MB)
@   366s  (total 10 workers using 9739 MB)
@   379s  (total 10 workers using 9957 MB)
@   394s  (total 10 workers using 10002 MB)
@   408s  (total 10 workers using 9881 MB)
@   422s  (total 10 workers using 10398 MB)
@   436s  (total 10 workers using 10044 MB)
@   451s  (total 10 workers using 10544 MB)
@   465s  (total 10 workers using 10548 MB)
@   480s  (total 10 workers using 10717 MB)
@   493s  (total 10 workers using 10397 MB)
@   508s  (total 10 workers using 10455 MB)
@   522s  (total 10 workers using 10500 MB)
@   538s  (total 10 workers using 11342 MB)
@   551s  (total 10 workers using 10577 MB)
@   566s  (total 10 workers using 11080 MB)
@   580s  (total 10 workers using 11024 MB)
@   595s  (total 10 workers using 11146 MB)
@   609s  (total 10 workers using 11320 MB)
@   625s  (total 10 workers using 11923 MB)
@   638s  (total 10 workers using 12120 MB)
@   653s  (total 10 workers using 12488 MB)
@   667s  (total 10 workers using 12280 MB)
@   682s  (total 10 workers using 12415 MB)
@   695s  (total 10 workers using 12106 MB)
@   711s  (total 10 workers using 12512 MB)
@   724s  (total 10 workers using 12202 MB)
@   739s  (total 10 workers using 12488 MB)
@   753s  (total 10 workers using 14467 MB)
@   768s  (total 10 workers using 14294 MB)
@   782s  (total 10 workers using 13952 MB)
@   798s  (total 10 workers using 13785 MB)
@   811s  (total 10 workers using 14921 MB)
@   827s  (total 10 workers using 14772 MB)
@   841s  (total 10 workers using 14393 MB)
@   856s  (total 10 workers using 15486 MB)
@   870s  (total 10 workers using 14785 MB)
@   885s  (total 10 workers using 15707 MB)
@   900s  (total 10 workers using 14819 MB)
@   915s  (total 10 workers using 15933 MB)
@   928s  (total 10 workers using 14863 MB)
@   943s  (total 10 workers using 15599 MB)
@   957s  (total 10 workers using 15990 MB)
@   971s  (total 10 workers using 14972 MB)
@   985s  (total 10 workers using 15822 MB)
@  1001s  (total 10 workers using 16114 MB)
@  1014s  (total 10 workers using 15943 MB)
@  1029s  (total 10 workers using 16704 MB)
@  1043s  (total 10 workers using 15531 MB)
@  1058s  (total 10 workers using 15853 MB)
@  1071s  (total 10 workers using 15930 MB)
@  1087s  (total 10 workers using 16558 MB)
@  1100s  (total 10 workers using 16220 MB)
@  1115s  (total 10 workers using 16751 MB)
@  1128s  (total 10 workers using 16401 MB)
@  1144s  (total 10 workers using 16925 MB)
@  1157s  (total 10 workers using 16568 MB)
@  1173s  (total 10 workers using 17075 MB)
@  1186s  (total 10 workers using 17588 MB)
@  1200s  (total 10 workers using 17627 MB)
@  1214s  (total 10 workers using 17479 MB)
@  1228s  (total 10 workers using 17343 MB)
@  1242s  (total 10 workers using 17784 MB)
@  1256s  (total 10 workers using 17945 MB)
@  1270s  (total 10 workers using 17496 MB)
@  1284s  (total 10 workers using 18165 MB)
@  1297s  (total 10 workers using 17087 MB)
@  1312s  (total 10 workers using 17628 MB)
@  1325s  (total 10 workers using 17099 MB)
@  1341s  (total 10 workers using 18449 MB)
@  1354s  (total 10 workers using 17462 MB)
@  1368s  (total 10 workers using 17011 MB)
@  1383s  (total 10 workers using 18674 MB)
@  1398s  (total 10 workers using 18076 MB)
@  1411s  (total 10 workers using 17314 MB)
@  1426s  (total 10 workers using 18730 MB)
@  1439s  (total 10 workers using 17678 MB)
@  1454s  (total 10 workers using 18954 MB)
@  1467s  (total 10 workers using 19185 MB)
@  1482s  (total 10 workers using 19294 MB)
@  1495s  (total 10 workers using 19329 MB)
@  1511s  (total 10 workers using 18625 MB)
@  1524s  (total 10 workers using 19599 MB)
@  1539s  (total 10 workers using 18798 MB)
@  1553s  (total 10 workers using 19025 MB)
@  1568s  (total 10 workers using 19226 MB)
@  1581s  (total 10 workers using 18275 MB)
@  1596s  (total 10 workers using 19828 MB)
@  1610s  (total 10 workers using 18782 MB)
@  1624s  (total 10 workers using 20050 MB)
@  1638s  (total 10 workers using 18739 MB)
@  1653s  (total 10 workers using 19607 MB)
@  1666s  (total 10 workers using 20456 MB)
@  1682s  (total 10 workers using 19561 MB)
@  1696s  (total 10 workers using 20710 MB)
@  1711s  (total 10 workers using 19631 MB)
@  1726s  (total 10 workers using 20602 MB)
@  1742s  (total 10 workers using 19579 MB)
@  1756s  (total 10 workers using 21045 MB)
@  1771s  (total 10 workers using 20547 MB)
@  1785s  (total 10 workers using 20842 MB)
@  1802s  (total 10 workers using 20118 MB)
@  1817s  (total 10 workers using 21115 MB)
@  1832s  (total 10 workers using 19808 MB)
@  1847s  (total 10 workers using 20187 MB)
@  1861s  (total 10 workers using 20710 MB)
@  1875s  (total 10 workers using 21225 MB)
@  1889s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  1891s  (total 9 workers using 19310 MB)
@  1906s  (total 9 workers using 20220 MB)
@  1921s  (total 9 workers using 19209 MB)
@  1936s  (total 9 workers using 20050 MB)
@  1951s  (total 9 workers using 19077 MB)
@  1964s  (total 9 workers using 19332 MB)
@  1979s  (total 9 workers using 19908 MB)
@  1993s  (total 9 workers using 19999 MB)
@  2007s  (total 9 workers using 20483 MB)
@  2020s  (total 9 workers using 21082 MB)
@  2034s  (total 9 workers using 21298 MB)
@  2047s  (total 9 workers using 20859 MB)
@  2061s  (total 9 workers using 21176 MB)
@  2075s  (total 9 workers using 20285 MB)
@  2089s  (total 9 workers using 20304 MB)
@  2102s  (total 9 workers using 20202 MB)
@  2116s  (total 9 workers using 21634 MB)
@  2130s  (total 9 workers using 21550 MB)
@  2144s  (total 9 workers using 21699 MB)
@  2158s  (total 9 workers using 21133 MB)
@  2173s  (total 9 workers using 21492 MB)
@  2186s  (total 9 workers using 21491 MB)
@  2201s  (total 9 workers using 21914 MB)
@  2215s  (total 9 workers using 20697 MB)
@  2229s  (total 9 workers using 20477 MB)
@  2242s  (total 9 workers using 20333 MB)
@  2258s  (total 9 workers using 20749 MB)
@  2271s  (total 9 workers using 20442 MB)
@  2287s  (total 9 workers using 20812 MB)
@  2301s  (total 9 workers using 20869 MB)
@  2315s  (total 9 workers using 21714 MB)
@  2329s  (total 9 workers using 22084 MB)
@  2343s  (total 9 workers using 22302 MB)
@  2357s  (total 9 workers using 22054 MB)
@  2371s  (total 9 workers using 22329 MB)
@  2384s  (total 9 workers using 22379 MB)
@  2399s  (total 9 workers using 22451 MB)
@  2413s  (total 9 workers using 22075 MB)
@  2428s  (total 9 workers using 21739 MB)
@  2441s  (total 9 workers using 21187 MB)
@  2456s  (total 9 workers using 21231 MB)
@  2468s  (total 9 workers using 22959 MB)
@  2483s  (total 9 workers using 21161 MB)
@  2498s  (total 9 workers using 23065 MB)
@  2511s  (total 9 workers using 22944 MB)
@  2524s  (total 9 workers using 21641 MB)
@  2538s  (total 9 workers using 21584 MB)
@  2551s  (total 9 workers using 22818 MB)
@  2567s  (total 9 workers using 21585 MB)
@  2581s  (total 9 workers using 23520 MB)
@  2595s  (total 9 workers using 23637 MB)
@  2608s  (total 9 workers using 21710 MB)
@  2623s  (total 9 workers using 21661 MB)
@  2636s  (total 9 workers using 23638 MB)
@  2651s  (total 9 workers using 23088 MB)
@  2663s  (total 9 workers using 23253 MB)
@  2678s  (total 9 workers using 21962 MB)
@  2691s  (total 9 workers using 22622 MB)
@  2705s  (total 9 workers using 22061 MB)
@  2719s  (total 9 workers using 24236 MB)
@  2733s  (total 9 workers using 24055 MB)
@  2746s  (total 9 workers using 23869 MB)
@  2761s  (total 9 workers using 23717 MB)
@  2774s  (total 9 workers using 22551 MB)
@  2789s  (total 9 workers using 22555 MB)
@  2803s  (total 9 workers using 23995 MB)
@  2816s  (total 9 workers using 22636 MB)
@  2830s  (total 9 workers using 24755 MB)
@  2844s  (total 9 workers using 24063 MB)
@  2857s  (total 9 workers using 23181 MB)
@  2871s  (total 9 workers using 22919 MB)
@  2885s  (total 9 workers using 24649 MB)
@  2900s  (total 9 workers using 24241 MB)
@  2913s  (total 9 workers using 25185 MB)
@  2927s  (total 9 workers using 27013 MB)
@  2940s  (total 9 workers using 27163 MB)
@  2955s  (total 9 workers using 26864 MB)
@  2968s  (total 9 workers using 27448 MB)
@  2982s  (total 9 workers using 27504 MB)
@  2995s  (total 9 workers using 25994 MB)
@  3010s  (total 9 workers using 25535 MB)
@  3022s  (total 9 workers using 27713 MB)
@  3037s  (total 9 workers using 27407 MB)
@  3049s  (total 9 workers using 26042 MB)
@  3063s  (total 9 workers using 25362 MB)
@  3076s  (total 9 workers using 27467 MB)
@  3091s  (total 9 workers using 26745 MB)
@  3104s  (total 9 workers using 25815 MB)
@  3119s  (total 9 workers using 28430 MB)
@  3132s  (total 9 workers using 27803 MB)
@  3146s  (total 9 workers using 28408 MB)
@  3158s  (total 9 workers using 27938 MB)
@  3173s  (total 9 workers using 26749 MB)
@  3185s  (total 9 workers using 28495 MB)
@  3200s  (total 9 workers using 27542 MB)
@  3214s  (total 9 workers using 26862 MB)
@  3229s  (total 9 workers using 28961 MB)
@  3243s  (total 9 workers using 27746 MB)
@  3257s  (total 9 workers using 26852 MB)
@  3271s  (total 9 workers using 28751 MB)
@  3286s  (total 9 workers using 27747 MB)
@  3299s  (total 9 workers using 26758 MB)
@  3314s  (total 9 workers using 26956 MB)
@  3328s  (total 9 workers using 28835 MB)
@  3343s  (total 9 workers using 28066 MB)
@  3356s  (total 9 workers using 27911 MB)
@  3370s  (total 9 workers using 29677 MB)
@  3382s  (total 9 workers using 27675 MB)
@  3396s  (total 9 workers using 29207 MB)
@  3409s  (total 9 workers using 27627 MB)
@  3425s  (total 9 workers using 29727 MB)
@  3437s  (total 9 workers using 27372 MB)
@  3451s  (total 9 workers using 29367 MB)
@  3464s  (total 9 workers using 27727 MB)
@  3480s  (total 9 workers using 30116 MB)
@  3493s  (total 9 workers using 28180 MB)
@  3507s  (total 9 workers using 30166 MB)
@  3520s  (total 9 workers using 28477 MB)
@  3534s  (total 9 workers using 30168 MB)
@  3547s  (total 9 workers using 28247 MB)
@  3562s  (total 9 workers using 30287 MB)
@  3572s  (stopping all workers)
@  3572s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3572s  (worker 2 finished with result unknown) python3 avr.py
@  3572s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3572s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3572s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3572s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3572s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3572s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3573s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3573s  (copied results from worker 0 in /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/wolf/2018D/pr_VexRiscv-regch0-20-p0)
@  3573s  [0;30;47m(proof race finished with answer unknown in 3572.70 seconds)[m
