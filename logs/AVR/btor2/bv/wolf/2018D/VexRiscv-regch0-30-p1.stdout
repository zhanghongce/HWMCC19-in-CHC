AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/wolf/2018D/pr_VexRiscv-regch0-30-p1)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 78888)
@     0s  (started worker 1 with pid 78889)
@     0s  (started worker 2 with pid 78890)
@     0s  (started worker 3 with pid 78891)
@     0s  (started worker 4 with pid 78892)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 79006)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 354 MB)
@     2s  (started worker 6 with pid 79054)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 524 MB)
@     3s  (started worker 7 with pid 79098)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 774 MB)
@     5s  (started worker 8 with pid 79145)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 1045 MB)
@     8s  (started worker 9 with pid 79218)
@     8s  (spawned 1 workers)
@     8s  (total 10 workers using 1192 MB)
@    11s  (started worker 10 with pid 79275)
@    11s  (spawned 1 workers)
@    11s  (total 11 workers using 1326 MB)
@    23s  (total 11 workers using 2029 MB)
@    39s  (total 11 workers using 2391 MB)
@    55s  (total 11 workers using 2692 MB)
@    69s  (total 11 workers using 2830 MB)
@    83s  (total 11 workers using 3007 MB)
@    97s  (total 11 workers using 3306 MB)
@   110s  (total 11 workers using 3475 MB)
@   125s  (total 11 workers using 3809 MB)
@   138s  (total 11 workers using 4062 MB)
@   151s  (total 11 workers using 4168 MB)
@   164s  (total 11 workers using 4324 MB)
@   178s  (total 11 workers using 4398 MB)
@   191s  (total 11 workers using 4462 MB)
@   205s  (total 11 workers using 4523 MB)
@   218s  (total 11 workers using 4613 MB)
@   232s  (total 11 workers using 4686 MB)
@   245s  (total 11 workers using 4783 MB)
@   259s  (total 11 workers using 4832 MB)
@   272s  (total 11 workers using 4922 MB)
@   286s  (total 11 workers using 5028 MB)
@   299s  (total 11 workers using 5161 MB)
@   313s  (total 11 workers using 5257 MB)
@   326s  (total 11 workers using 5278 MB)
@   340s  (total 11 workers using 5422 MB)
@   353s  (total 11 workers using 5490 MB)
@   367s  (total 11 workers using 5474 MB)
@   380s  (total 11 workers using 5542 MB)
@   394s  (total 11 workers using 5788 MB)
@   407s  (total 11 workers using 6091 MB)
@   421s  (total 11 workers using 6267 MB)
@   434s  (total 11 workers using 6417 MB)
@   448s  (total 11 workers using 6603 MB)
@   461s  (total 11 workers using 6694 MB)
@   475s  (total 11 workers using 6875 MB)
@   488s  (total 11 workers using 6945 MB)
@   502s  (total 11 workers using 7052 MB)
@   515s  (total 11 workers using 7145 MB)
@   529s  (total 11 workers using 7210 MB)
@   542s  (total 11 workers using 7323 MB)
@   556s  (total 11 workers using 7378 MB)
@   569s  (total 11 workers using 7496 MB)
@   583s  (total 11 workers using 7621 MB)
@   596s  (total 11 workers using 7803 MB)
@   610s  (total 11 workers using 7939 MB)
@   623s  (total 11 workers using 8338 MB)
@   637s  (total 11 workers using 8351 MB)
@   650s  (total 11 workers using 8429 MB)
@   663s  (total 11 workers using 8469 MB)
@   676s  (total 11 workers using 8734 MB)
@   690s  (total 11 workers using 8704 MB)
@   703s  (total 11 workers using 8843 MB)
@   717s  (total 11 workers using 9008 MB)
@   729s  (total 11 workers using 8939 MB)
@   743s  (total 11 workers using 9181 MB)
@   756s  (total 11 workers using 9108 MB)
@   770s  (total 11 workers using 9161 MB)
@   783s  (total 11 workers using 9351 MB)
@   797s  (total 11 workers using 9375 MB)
@   809s  (total 11 workers using 9425 MB)
@   823s  (total 11 workers using 9683 MB)
@   836s  (total 11 workers using 9575 MB)
@   850s  (total 11 workers using 9856 MB)
@   854s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@   863s  (total 10 workers using 8462 MB)
@   876s  (total 10 workers using 8561 MB)
@   889s  (total 10 workers using 8754 MB)
@   902s  (total 10 workers using 8640 MB)
@   915s  (total 10 workers using 8750 MB)
@   928s  (total 10 workers using 9207 MB)
@   941s  (total 10 workers using 10056 MB)
@   954s  (total 10 workers using 10381 MB)
@   967s  (total 10 workers using 11044 MB)
@   980s  (total 10 workers using 11684 MB)
@   993s  (total 10 workers using 12190 MB)
@  1006s  (total 10 workers using 12962 MB)
@  1019s  (total 10 workers using 12660 MB)
@  1032s  (total 10 workers using 12982 MB)
@  1045s  (total 10 workers using 13147 MB)
@  1058s  (total 10 workers using 13727 MB)
@  1071s  (total 10 workers using 13569 MB)
@  1084s  (total 10 workers using 15397 MB)
@  1097s  (total 10 workers using 15844 MB)
@  1111s  (total 10 workers using 14921 MB)
@  1123s  (total 10 workers using 15902 MB)
@  1137s  (total 10 workers using 15418 MB)
@  1149s  (total 10 workers using 16483 MB)
@  1163s  (total 10 workers using 16681 MB)
@  1176s  (total 10 workers using 16620 MB)
@  1189s  (total 10 workers using 16384 MB)
@  1202s  (total 10 workers using 16579 MB)
@  1215s  (total 10 workers using 17448 MB)
@  1228s  (total 10 workers using 18435 MB)
@  1241s  (total 10 workers using 18580 MB)
@  1254s  (total 10 workers using 18673 MB)
@  1267s  (total 10 workers using 19081 MB)
@  1280s  (total 10 workers using 18750 MB)
@  1293s  (total 10 workers using 19245 MB)
@  1306s  (total 10 workers using 18519 MB)
@  1319s  (total 10 workers using 19753 MB)
@  1332s  (total 10 workers using 19753 MB)
@  1345s  (total 10 workers using 20039 MB)
@  1358s  (total 10 workers using 19700 MB)
@  1371s  (total 10 workers using 19941 MB)
@  1384s  (total 10 workers using 20655 MB)
@  1397s  (total 10 workers using 19522 MB)
@  1410s  (total 10 workers using 20298 MB)
@  1423s  (total 10 workers using 21113 MB)
@  1436s  (total 10 workers using 22068 MB)
@  1449s  (total 10 workers using 22939 MB)
@  1461s  (total 10 workers using 22387 MB)
@  1475s  (total 10 workers using 22961 MB)
@  1487s  (total 10 workers using 23706 MB)
@  1501s  (total 10 workers using 23644 MB)
@  1513s  (total 10 workers using 22602 MB)
@  1527s  (total 10 workers using 24150 MB)
@  1539s  (total 10 workers using 24443 MB)
@  1553s  (total 10 workers using 24457 MB)
@  1565s  (total 10 workers using 23102 MB)
@  1579s  (total 10 workers using 24967 MB)
@  1591s  (total 10 workers using 24119 MB)
@  1605s  (total 10 workers using 23657 MB)
@  1617s  (total 10 workers using 24912 MB)
@  1631s  (total 10 workers using 23650 MB)
@  1643s  (total 10 workers using 24677 MB)
@  1657s  (total 10 workers using 26036 MB)
@  1669s  (total 10 workers using 23593 MB)
@  1682s  (total 10 workers using 26267 MB)
@  1695s  (total 10 workers using 26677 MB)
@  1708s  (total 10 workers using 24800 MB)
@  1721s  (total 10 workers using 27566 MB)
@  1735s  (total 10 workers using 27840 MB)
@  1747s  (total 10 workers using 27794 MB)
@  1761s  (total 10 workers using 27992 MB)
@  1773s  (total 10 workers using 28548 MB)
@  1787s  (total 10 workers using 28266 MB)
@  1799s  (total 10 workers using 27620 MB)
@  1813s  (total 10 workers using 26861 MB)
@  1825s  (total 10 workers using 27542 MB)
@  1838s  (total 10 workers using 29400 MB)
@  1851s  (total 10 workers using 26758 MB)
@  1855s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  1864s  (total 9 workers using 12346 MB)
@  1877s  (total 9 workers using 12678 MB)
@  1890s  (total 9 workers using 12750 MB)
@  1902s  (total 9 workers using 12362 MB)
@  1915s  (total 9 workers using 12490 MB)
@  1928s  (total 9 workers using 12687 MB)
@  1941s  (total 9 workers using 12478 MB)
@  1953s  (total 9 workers using 12556 MB)
@  1967s  (total 9 workers using 12596 MB)
@  1979s  (total 9 workers using 12817 MB)
@  1992s  (total 9 workers using 12711 MB)
@  2005s  (total 9 workers using 13064 MB)
@  2018s  (total 9 workers using 12747 MB)
@  2031s  (total 9 workers using 12899 MB)
@  2044s  (total 9 workers using 12926 MB)
@  2057s  (total 9 workers using 13253 MB)
@  2070s  (total 9 workers using 13281 MB)
@  2083s  (total 9 workers using 13604 MB)
@  2096s  (total 9 workers using 13256 MB)
@  2108s  (total 9 workers using 13451 MB)
@  2122s  (total 9 workers using 13435 MB)
@  2134s  (total 9 workers using 13319 MB)
@  2147s  (total 9 workers using 13584 MB)
@  2160s  (total 9 workers using 13641 MB)
@  2173s  (total 9 workers using 13359 MB)
@  2185s  (total 9 workers using 13401 MB)
@  2199s  (total 9 workers using 13741 MB)
@  2211s  (total 9 workers using 13641 MB)
@  2225s  (total 9 workers using 13554 MB)
@  2237s  (total 9 workers using 13659 MB)
@  2250s  (total 9 workers using 13678 MB)
@  2263s  (total 9 workers using 13521 MB)
@  2276s  (total 9 workers using 13916 MB)
@  2288s  (total 9 workers using 13816 MB)
@  2301s  (total 9 workers using 14045 MB)
@  2314s  (total 9 workers using 13860 MB)
@  2327s  (total 9 workers using 14253 MB)
@  2340s  (total 9 workers using 13892 MB)
@  2353s  (total 9 workers using 13843 MB)
@  2365s  (total 9 workers using 14167 MB)
@  2379s  (total 9 workers using 14245 MB)
@  2391s  (total 9 workers using 14307 MB)
@  2404s  (total 9 workers using 14362 MB)
@  2417s  (total 9 workers using 14083 MB)
@  2430s  (total 9 workers using 14160 MB)
@  2442s  (total 9 workers using 14462 MB)
@  2456s  (total 9 workers using 14131 MB)
@  2468s  (total 9 workers using 14150 MB)
@  2481s  (total 9 workers using 14543 MB)
@  2494s  (total 9 workers using 14183 MB)
@  2507s  (total 9 workers using 14332 MB)
@  2520s  (total 9 workers using 15525 MB)
@  2531s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  2533s  (total 8 workers using 14072 MB)
@  2544s  (total 8 workers using 14564 MB)
@  2555s  (total 8 workers using 14541 MB)
@  2566s  (total 8 workers using 14317 MB)
@  2577s  (total 8 workers using 14164 MB)
@  2586s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  2588s  (total 7 workers using 8663 MB)
@  2599s  (total 7 workers using 8641 MB)
@  2610s  (total 7 workers using 8642 MB)
@  2621s  (total 7 workers using 8670 MB)
@  2631s  (total 7 workers using 8600 MB)
@  2642s  (total 7 workers using 8674 MB)
@  2653s  (total 7 workers using 8622 MB)
@  2664s  (total 7 workers using 8638 MB)
@  2675s  (total 7 workers using 8705 MB)
@  2686s  (total 7 workers using 8704 MB)
@  2696s  (total 7 workers using 8713 MB)
@  2707s  (total 7 workers using 8674 MB)
@  2718s  (total 7 workers using 8665 MB)
@  2729s  (total 7 workers using 8687 MB)
@  2739s  (total 7 workers using 8677 MB)
@  2750s  (total 7 workers using 8821 MB)
@  2761s  (total 7 workers using 8961 MB)
@  2772s  (total 7 workers using 8995 MB)
@  2783s  (total 7 workers using 9006 MB)
@  2794s  (total 7 workers using 9058 MB)
@  2804s  (total 7 workers using 9106 MB)
@  2815s  (total 7 workers using 9154 MB)
@  2826s  (total 7 workers using 9152 MB)
@  2837s  (total 7 workers using 9192 MB)
@  2847s  (total 7 workers using 9002 MB)
@  2858s  (total 7 workers using 9047 MB)
@  2869s  (total 7 workers using 9027 MB)
@  2880s  (total 7 workers using 9058 MB)
@  2891s  (total 7 workers using 9092 MB)
@  2902s  (total 7 workers using 9168 MB)
@  2912s  (total 7 workers using 9220 MB)
@  2923s  (total 7 workers using 9170 MB)
@  2934s  (total 7 workers using 9244 MB)
@  2945s  (total 7 workers using 9301 MB)
@  2955s  (total 7 workers using 9243 MB)
@  2966s  (total 7 workers using 9298 MB)
@  2977s  (total 7 workers using 9321 MB)
@  2988s  (total 7 workers using 9310 MB)
@  2999s  (total 7 workers using 9345 MB)
@  3010s  (total 7 workers using 9317 MB)
@  3020s  (total 7 workers using 9317 MB)
@  3031s  (total 7 workers using 9349 MB)
@  3042s  (total 7 workers using 9356 MB)
@  3053s  (total 7 workers using 9333 MB)
@  3064s  (total 7 workers using 9393 MB)
@  3074s  (total 7 workers using 9372 MB)
@  3085s  (total 7 workers using 9443 MB)
@  3096s  (total 7 workers using 9433 MB)
@  3107s  (total 7 workers using 9465 MB)
@  3118s  (total 7 workers using 9465 MB)
@  3128s  (total 7 workers using 9507 MB)
@  3139s  (total 7 workers using 9495 MB)
@  3150s  (total 7 workers using 9494 MB)
@  3161s  (total 7 workers using 9500 MB)
@  3172s  (total 7 workers using 9532 MB)
@  3182s  (total 7 workers using 9562 MB)
@  3193s  (total 7 workers using 9563 MB)
@  3204s  (total 7 workers using 9534 MB)
@  3215s  (total 7 workers using 9574 MB)
@  3226s  (total 7 workers using 9556 MB)
@  3236s  (total 7 workers using 9594 MB)
@  3247s  (total 7 workers using 9642 MB)
@  3258s  (total 7 workers using 9644 MB)
@  3269s  (total 7 workers using 9615 MB)
@  3280s  (total 7 workers using 9648 MB)
@  3291s  (total 7 workers using 9620 MB)
@  3301s  (total 7 workers using 9683 MB)
@  3312s  (total 7 workers using 9727 MB)
@  3323s  (total 7 workers using 9717 MB)
@  3334s  (total 7 workers using 9751 MB)
@  3344s  (total 7 workers using 9707 MB)
@  3355s  (total 7 workers using 9768 MB)
@  3366s  (total 7 workers using 9740 MB)
@  3377s  (total 7 workers using 9783 MB)
@  3388s  (total 7 workers using 9726 MB)
@  3399s  (total 7 workers using 9756 MB)
@  3409s  (total 7 workers using 9722 MB)
@  3420s  (total 7 workers using 9722 MB)
@  3431s  (total 7 workers using 9765 MB)
@  3442s  (total 7 workers using 9766 MB)
@  3452s  (total 7 workers using 9859 MB)
@  3463s  (total 7 workers using 9877 MB)
@  3474s  (total 7 workers using 9843 MB)
@  3485s  (total 7 workers using 9861 MB)
@  3496s  (total 7 workers using 9861 MB)
@  3507s  (total 7 workers using 9828 MB)
@  3517s  (total 7 workers using 9863 MB)
@  3528s  (total 7 workers using 9898 MB)
@  3539s  (total 7 workers using 9867 MB)
@  3550s  (total 7 workers using 9903 MB)
@  3561s  (total 7 workers using 9883 MB)
@  3571s  (total 7 workers using 9912 MB)
@  3576s  (stopping all workers)
@  3576s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3576s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3576s  (worker 2 finished with result unknown) python3 avr.py
@  3576s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3576s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3576s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3576s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3576s  (copied results from worker 0 in /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/wolf/2018D/pr_VexRiscv-regch0-30-p1)
@  3576s  [0;30;47m(proof race finished with answer unknown in 3576.08 seconds)[m
