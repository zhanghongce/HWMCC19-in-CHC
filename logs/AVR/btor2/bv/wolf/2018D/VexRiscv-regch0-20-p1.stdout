AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/wolf/2018D/pr_VexRiscv-regch0-20-p1)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 65971)
@     0s  (started worker 1 with pid 65972)
@     0s  (started worker 2 with pid 65973)
@     0s  (started worker 3 with pid 65974)
@     0s  (started worker 4 with pid 65975)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 66091)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 306 MB)
@     2s  (started worker 6 with pid 66137)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 513 MB)
@     3s  (started worker 7 with pid 66185)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 616 MB)
@     5s  (started worker 8 with pid 66231)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 848 MB)
@     9s  (started worker 9 with pid 66311)
@     9s  (spawned 1 workers)
@     9s  (total 10 workers using 1012 MB)
@    11s  (started worker 10 with pid 66359)
@    11s  (spawned 1 workers)
@    11s  (total 11 workers using 1159 MB)
@    24s  (total 11 workers using 1818 MB)
@    39s  (total 11 workers using 2072 MB)
@    55s  (total 11 workers using 2330 MB)
@    69s  (total 11 workers using 2490 MB)
@    83s  (total 11 workers using 2628 MB)
@    98s  (total 11 workers using 2905 MB)
@   111s  (total 11 workers using 3011 MB)
@   125s  (total 11 workers using 3190 MB)
@   138s  (total 11 workers using 3599 MB)
@   152s  (total 11 workers using 3833 MB)
@   165s  (total 11 workers using 4042 MB)
@   179s  (total 11 workers using 4409 MB)
@   192s  (total 11 workers using 4778 MB)
@   207s  (total 11 workers using 5023 MB)
@   220s  (total 11 workers using 5289 MB)
@   234s  (total 11 workers using 5415 MB)
@   247s  (total 11 workers using 5796 MB)
@   261s  (total 11 workers using 6033 MB)
@   274s  (total 11 workers using 6103 MB)
@   288s  (total 11 workers using 7294 MB)
@   301s  (total 11 workers using 8852 MB)
@   315s  (total 11 workers using 9498 MB)
@   328s  (total 11 workers using 10190 MB)
@   342s  (total 11 workers using 10761 MB)
@   355s  (total 11 workers using 11455 MB)
@   368s  (total 11 workers using 11732 MB)
@   381s  (total 11 workers using 12130 MB)
@   395s  (total 11 workers using 12476 MB)
@   408s  (total 11 workers using 12898 MB)
@   422s  (total 11 workers using 13174 MB)
@   435s  (total 11 workers using 13737 MB)
@   449s  (total 11 workers using 14323 MB)
@   462s  (total 11 workers using 16071 MB)
@   476s  (total 11 workers using 15363 MB)
@   489s  (total 11 workers using 16523 MB)
@   503s  (total 11 workers using 16780 MB)
@   516s  (total 11 workers using 17274 MB)
@   530s  (total 11 workers using 17091 MB)
@   543s  (total 11 workers using 16985 MB)
@   557s  (total 11 workers using 16557 MB)
@   561s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@   570s  (total 10 workers using 16048 MB)
@   583s  (total 10 workers using 17723 MB)
@   596s  (total 10 workers using 18006 MB)
@   610s  (total 10 workers using 16937 MB)
@   623s  (total 10 workers using 18584 MB)
@   636s  (total 10 workers using 18924 MB)
@   649s  (total 10 workers using 18716 MB)
@   663s  (total 10 workers using 18393 MB)
@   676s  (total 10 workers using 18767 MB)
@   690s  (total 10 workers using 18986 MB)
@   702s  (total 10 workers using 19358 MB)
@   716s  (total 10 workers using 19923 MB)
@   729s  (total 10 workers using 20321 MB)
@   742s  (total 10 workers using 20661 MB)
@   755s  (total 10 workers using 20402 MB)
@   769s  (total 10 workers using 19622 MB)
@   781s  (total 10 workers using 20540 MB)
@   795s  (total 10 workers using 19997 MB)
@   808s  (total 10 workers using 21056 MB)
@   822s  (total 10 workers using 19874 MB)
@   835s  (total 10 workers using 21704 MB)
@   848s  (total 10 workers using 20793 MB)
@   861s  (total 10 workers using 20187 MB)
@   875s  (total 10 workers using 21154 MB)
@   887s  (total 10 workers using 22485 MB)
@   901s  (total 10 workers using 20859 MB)
@   914s  (total 10 workers using 23093 MB)
@   928s  (total 10 workers using 23235 MB)
@   941s  (total 10 workers using 22123 MB)
@   954s  (total 10 workers using 21305 MB)
@   967s  (total 10 workers using 23795 MB)
@   981s  (total 10 workers using 23455 MB)
@   993s  (total 10 workers using 24091 MB)
@  1007s  (total 10 workers using 25830 MB)
@  1020s  (total 10 workers using 25951 MB)
@  1033s  (total 10 workers using 26661 MB)
@  1046s  (total 10 workers using 26334 MB)
@  1060s  (total 10 workers using 27209 MB)
@  1072s  (total 10 workers using 26014 MB)
@  1086s  (total 10 workers using 26205 MB)
@  1099s  (total 10 workers using 28212 MB)
@  1112s  (total 10 workers using 28415 MB)
@  1125s  (total 10 workers using 27222 MB)
@  1138s  (total 10 workers using 26452 MB)
@  1151s  (total 10 workers using 27201 MB)
@  1165s  (total 10 workers using 29100 MB)
@  1178s  (total 10 workers using 28043 MB)
@  1192s  (total 10 workers using 26935 MB)
@  1204s  (total 10 workers using 27947 MB)
@  1218s  (total 10 workers using 29407 MB)
@  1230s  (total 10 workers using 28696 MB)
@  1245s  (total 10 workers using 29768 MB)
@  1257s  (total 10 workers using 30295 MB)
@  1271s  (total 10 workers using 28635 MB)
@  1284s  (total 10 workers using 29223 MB)
@  1298s  (total 10 workers using 30490 MB)
@  1310s  (total 10 workers using 30600 MB)
@  1324s  (total 10 workers using 29878 MB)
@  1336s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  1337s  (total 9 workers using 28319 MB)
@  1347s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  1350s  (total 8 workers using 13196 MB)
@  1362s  (total 8 workers using 13123 MB)
@  1375s  (total 8 workers using 13490 MB)
@  1388s  (total 8 workers using 13526 MB)
@  1401s  (total 8 workers using 13311 MB)
@  1413s  (total 8 workers using 13549 MB)
@  1426s  (total 8 workers using 13409 MB)
@  1438s  (total 8 workers using 13504 MB)
@  1451s  (total 8 workers using 13749 MB)
@  1463s  (total 8 workers using 13907 MB)
@  1476s  (total 8 workers using 13951 MB)
@  1488s  (total 8 workers using 14372 MB)
@  1501s  (total 8 workers using 14143 MB)
@  1513s  (total 8 workers using 14556 MB)
@  1526s  (total 8 workers using 14254 MB)
@  1539s  (total 8 workers using 14360 MB)
@  1551s  (total 8 workers using 14471 MB)
@  1564s  (total 8 workers using 14959 MB)
@  1577s  (total 8 workers using 14640 MB)
@  1589s  (total 8 workers using 14758 MB)
@  1602s  (total 8 workers using 14856 MB)
@  1614s  (total 8 workers using 15185 MB)
@  1625s  (total 8 workers using 15303 MB)
@  1636s  (total 8 workers using 15167 MB)
@  1647s  (total 8 workers using 15411 MB)
@  1658s  (total 8 workers using 15145 MB)
@  1669s  (total 8 workers using 15126 MB)
@  1680s  (total 8 workers using 15581 MB)
@  1692s  (total 8 workers using 15628 MB)
@  1702s  (total 8 workers using 15705 MB)
@  1714s  (total 8 workers using 15416 MB)
@  1725s  (total 8 workers using 15488 MB)
@  1736s  (total 8 workers using 15815 MB)
@  1747s  (total 8 workers using 15569 MB)
@  1758s  (total 8 workers using 15625 MB)
@  1769s  (total 8 workers using 15897 MB)
@  1780s  (total 8 workers using 16096 MB)
@  1791s  (total 8 workers using 15861 MB)
@  1802s  (total 8 workers using 15915 MB)
@  1813s  (total 8 workers using 15950 MB)
@  1824s  (total 8 workers using 16278 MB)
@  1835s  (total 8 workers using 16408 MB)
@  1847s  (total 8 workers using 16077 MB)
@  1857s  (total 8 workers using 16118 MB)
@  1869s  (total 8 workers using 16140 MB)
@  1880s  (total 8 workers using 16327 MB)
@  1891s  (total 8 workers using 16568 MB)
@  1902s  (total 8 workers using 16348 MB)
@  1913s  (total 8 workers using 16373 MB)
@  1924s  (total 8 workers using 16835 MB)
@  1935s  (total 8 workers using 16858 MB)
@  1946s  (total 8 workers using 16890 MB)
@  1957s  (total 8 workers using 16993 MB)
@  1968s  (total 8 workers using 17045 MB)
@  1979s  (total 8 workers using 17119 MB)
@  1990s  (total 8 workers using 17225 MB)
@  2002s  (total 8 workers using 17361 MB)
@  2013s  (total 8 workers using 17346 MB)
@  2024s  (total 8 workers using 17091 MB)
@  2035s  (total 8 workers using 17449 MB)
@  2046s  (total 8 workers using 17280 MB)
@  2057s  (total 8 workers using 17213 MB)
@  2069s  (total 8 workers using 17274 MB)
@  2080s  (total 8 workers using 17311 MB)
@  2091s  (total 8 workers using 17389 MB)
@  2102s  (total 8 workers using 17430 MB)
@  2113s  (total 8 workers using 17491 MB)
@  2124s  (total 8 workers using 17950 MB)
@  2135s  (total 8 workers using 18054 MB)
@  2146s  (total 8 workers using 18127 MB)
@  2157s  (total 8 workers using 17834 MB)
@  2168s  (total 8 workers using 18302 MB)
@  2180s  (total 8 workers using 18221 MB)
@  2190s  (total 8 workers using 17914 MB)
@  2202s  (total 8 workers using 17888 MB)
@  2213s  (total 8 workers using 18342 MB)
@  2224s  (total 8 workers using 18198 MB)
@  2235s  (total 8 workers using 18148 MB)
@  2246s  (total 8 workers using 18611 MB)
@  2257s  (total 8 workers using 18135 MB)
@  2268s  (total 8 workers using 17843 MB)
@  2270s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  2279s  (total 7 workers using 12698 MB)
@  2290s  (total 7 workers using 12759 MB)
@  2301s  (total 7 workers using 12840 MB)
@  2312s  (total 7 workers using 12870 MB)
@  2322s  (total 7 workers using 12917 MB)
@  2333s  (total 7 workers using 12930 MB)
@  2344s  (total 7 workers using 12948 MB)
@  2355s  (total 7 workers using 12988 MB)
@  2366s  (total 7 workers using 12985 MB)
@  2377s  (total 7 workers using 13040 MB)
@  2387s  (total 7 workers using 13026 MB)
@  2398s  (total 7 workers using 13039 MB)
@  2409s  (total 7 workers using 13095 MB)
@  2420s  (total 7 workers using 13138 MB)
@  2430s  (total 7 workers using 13138 MB)
@  2441s  (total 7 workers using 13223 MB)
@  2452s  (total 7 workers using 13250 MB)
@  2463s  (total 7 workers using 13339 MB)
@  2474s  (total 7 workers using 13356 MB)
@  2485s  (total 7 workers using 13386 MB)
@  2495s  (total 7 workers using 13446 MB)
@  2506s  (total 7 workers using 13464 MB)
@  2517s  (total 7 workers using 13461 MB)
@  2528s  (total 7 workers using 13501 MB)
@  2538s  (total 7 workers using 13531 MB)
@  2549s  (total 7 workers using 13598 MB)
@  2560s  (total 7 workers using 13640 MB)
@  2571s  (total 7 workers using 13655 MB)
@  2582s  (total 7 workers using 13680 MB)
@  2593s  (total 7 workers using 13690 MB)
@  2603s  (total 7 workers using 13724 MB)
@  2614s  (total 7 workers using 13764 MB)
@  2625s  (total 7 workers using 13772 MB)
@  2636s  (total 7 workers using 13778 MB)
@  2646s  (total 7 workers using 13796 MB)
@  2657s  (total 7 workers using 13844 MB)
@  2668s  (total 7 workers using 13895 MB)
@  2679s  (total 7 workers using 13907 MB)
@  2690s  (total 7 workers using 13929 MB)
@  2701s  (total 7 workers using 13981 MB)
@  2711s  (total 7 workers using 13978 MB)
@  2722s  (total 7 workers using 14074 MB)
@  2733s  (total 7 workers using 14067 MB)
@  2744s  (total 7 workers using 14100 MB)
@  2754s  (total 7 workers using 14143 MB)
@  2765s  (total 7 workers using 14177 MB)
@  2776s  (total 7 workers using 14226 MB)
@  2787s  (total 7 workers using 14288 MB)
@  2798s  (total 7 workers using 14337 MB)
@  2809s  (total 7 workers using 14416 MB)
@  2819s  (total 7 workers using 14468 MB)
@  2830s  (total 7 workers using 14488 MB)
@  2841s  (total 7 workers using 14517 MB)
@  2852s  (total 7 workers using 14559 MB)
@  2862s  (total 7 workers using 14580 MB)
@  2873s  (total 7 workers using 14578 MB)
@  2884s  (total 7 workers using 14594 MB)
@  2895s  (total 7 workers using 14645 MB)
@  2906s  (total 7 workers using 14656 MB)
@  2917s  (total 7 workers using 14666 MB)
@  2927s  (total 7 workers using 14688 MB)
@  2938s  (total 7 workers using 14716 MB)
@  2949s  (total 7 workers using 14759 MB)
@  2960s  (total 7 workers using 14793 MB)
@  2971s  (total 7 workers using 14829 MB)
@  2981s  (total 7 workers using 14858 MB)
@  2992s  (total 7 workers using 14880 MB)
@  3003s  (total 7 workers using 14879 MB)
@  3014s  (total 7 workers using 14929 MB)
@  3025s  (total 7 workers using 14941 MB)
@  3035s  (total 7 workers using 14951 MB)
@  3046s  (total 7 workers using 14992 MB)
@  3057s  (total 7 workers using 14996 MB)
@  3068s  (total 7 workers using 15015 MB)
@  3079s  (total 7 workers using 15024 MB)
@  3090s  (total 7 workers using 15055 MB)
@  3100s  (total 7 workers using 15087 MB)
@  3111s  (total 7 workers using 15130 MB)
@  3122s  (total 7 workers using 15157 MB)
@  3133s  (total 7 workers using 15190 MB)
@  3143s  (total 7 workers using 15187 MB)
@  3154s  (total 7 workers using 15234 MB)
@  3165s  (total 7 workers using 15225 MB)
@  3176s  (total 7 workers using 15292 MB)
@  3187s  (total 7 workers using 15298 MB)
@  3198s  (total 7 workers using 15335 MB)
@  3208s  (total 7 workers using 15362 MB)
@  3219s  (total 7 workers using 15368 MB)
@  3230s  (total 7 workers using 15393 MB)
@  3241s  (total 7 workers using 15417 MB)
@  3251s  (total 7 workers using 15419 MB)
@  3262s  (total 7 workers using 15455 MB)
@  3273s  (total 7 workers using 15476 MB)
@  3284s  (total 7 workers using 15486 MB)
@  3295s  (total 7 workers using 15495 MB)
@  3306s  (total 7 workers using 15493 MB)
@  3316s  (total 7 workers using 15503 MB)
@  3327s  (total 7 workers using 15513 MB)
@  3338s  (total 7 workers using 15559 MB)
@  3349s  (total 7 workers using 15549 MB)
@  3359s  (total 7 workers using 15588 MB)
@  3370s  (total 7 workers using 15600 MB)
@  3381s  (total 7 workers using 15615 MB)
@  3392s  (total 7 workers using 15629 MB)
@  3403s  (total 7 workers using 15870 MB)
@  3414s  (total 7 workers using 16005 MB)
@  3424s  (total 7 workers using 16017 MB)
@  3435s  (total 7 workers using 16033 MB)
@  3446s  (total 7 workers using 16047 MB)
@  3457s  (total 7 workers using 16064 MB)
@  3467s  (total 7 workers using 16080 MB)
@  3478s  (total 7 workers using 16097 MB)
@  3489s  (total 7 workers using 16113 MB)
@  3500s  (total 7 workers using 16159 MB)
@  3511s  (total 7 workers using 16171 MB)
@  3522s  (total 7 workers using 16166 MB)
@  3532s  (total 7 workers using 16186 MB)
@  3543s  (total 7 workers using 16225 MB)
@  3554s  (total 7 workers using 16220 MB)
@  3565s  (total 7 workers using 16300 MB)
@  3573s  (stopping all workers)
@  3573s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3573s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3573s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3573s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3573s  (worker 2 finished with result unknown) python3 avr.py
@  3573s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3573s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3574s  (copied results from worker 0 in /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/wolf/2018D/pr_VexRiscv-regch0-20-p1)
@  3574s  [0;30;47m(proof race finished with answer unknown in 3573.57 seconds)[m
