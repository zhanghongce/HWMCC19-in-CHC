AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/wolf/2019C/pr_dspfilters_fastfir_second-p09)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 71103)
@     0s  (started worker 1 with pid 71104)
@     0s  (started worker 2 with pid 71105)
@     0s  (started worker 3 with pid 71106)
@     0s  (started worker 4 with pid 71107)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 71221)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 469 MB)
@     2s  (started worker 6 with pid 71261)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 617 MB)
@     3s  (started worker 7 with pid 71305)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 766 MB)
@     5s  (started worker 8 with pid 71352)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 994 MB)
@     9s  (started worker 9 with pid 71410)
@     9s  (spawned 1 workers)
@     9s  (total 10 workers using 1176 MB)
@    12s  (started worker 10 with pid 71461)
@    12s  (spawned 1 workers)
@    12s  (total 11 workers using 1316 MB)
@    25s  (total 11 workers using 1739 MB)
@    42s  (total 11 workers using 2021 MB)
@    58s  (total 11 workers using 2262 MB)
@    73s  (total 11 workers using 2425 MB)
@    88s  (total 11 workers using 2604 MB)
@   104s  (total 11 workers using 2734 MB)
@   110s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   118s  (total 10 workers using 2598 MB)
@   131s  (total 10 workers using 2773 MB)
@   144s  (total 10 workers using 2928 MB)
@   159s  (total 10 workers using 3130 MB)
@   172s  (total 10 workers using 3308 MB)
@   186s  (total 10 workers using 3607 MB)
@   199s  (total 10 workers using 3769 MB)
@   213s  (total 10 workers using 4131 MB)
@   227s  (total 10 workers using 4309 MB)
@   241s  (total 10 workers using 4495 MB)
@   254s  (total 10 workers using 4657 MB)
@   268s  (total 10 workers using 4826 MB)
@   281s  (total 10 workers using 4952 MB)
@   296s  (total 10 workers using 5145 MB)
@   309s  (total 10 workers using 5320 MB)
@   323s  (total 10 workers using 5576 MB)
@   336s  (total 10 workers using 5801 MB)
@   350s  (total 10 workers using 5944 MB)
@   363s  (total 10 workers using 6175 MB)
@   377s  (total 10 workers using 6363 MB)
@   391s  (total 10 workers using 6412 MB)
@   405s  (total 10 workers using 6492 MB)
@   418s  (total 10 workers using 6793 MB)
@   432s  (total 10 workers using 6782 MB)
@   445s  (total 10 workers using 6975 MB)
@   459s  (total 10 workers using 7083 MB)
@   473s  (total 10 workers using 7225 MB)
@   487s  (total 10 workers using 7362 MB)
@   500s  (total 10 workers using 7498 MB)
@   514s  (total 10 workers using 7687 MB)
@   528s  (total 10 workers using 7749 MB)
@   542s  (total 10 workers using 7912 MB)
@   555s  (total 10 workers using 8010 MB)
@   569s  (total 10 workers using 8239 MB)
@   582s  (total 10 workers using 8312 MB)
@   597s  (total 10 workers using 8571 MB)
@   610s  (total 10 workers using 8568 MB)
@   625s  (total 10 workers using 8718 MB)
@   638s  (total 10 workers using 8791 MB)
@   652s  (total 10 workers using 9062 MB)
@   665s  (total 10 workers using 9262 MB)
@   679s  (total 10 workers using 9219 MB)
@   693s  (total 10 workers using 9330 MB)
@   707s  (total 10 workers using 9515 MB)
@   721s  (total 10 workers using 9497 MB)
@   735s  (total 10 workers using 9529 MB)
@   748s  (total 10 workers using 9664 MB)
@   763s  (total 10 workers using 9815 MB)
@   777s  (total 10 workers using 9827 MB)
@   792s  (total 10 workers using 10034 MB)
@   805s  (total 10 workers using 10130 MB)
@   819s  (total 10 workers using 10331 MB)
@   833s  (total 10 workers using 10423 MB)
@   847s  (total 10 workers using 10533 MB)
@   860s  (total 10 workers using 10622 MB)
@   874s  (total 10 workers using 10611 MB)
@   888s  (total 10 workers using 10710 MB)
@   903s  (total 10 workers using 10840 MB)
@   916s  (total 10 workers using 10943 MB)
@   930s  (total 10 workers using 11128 MB)
@   943s  (total 10 workers using 11131 MB)
@   958s  (total 10 workers using 11162 MB)
@   971s  (total 10 workers using 11498 MB)
@   985s  (total 10 workers using 11529 MB)
@   999s  (total 10 workers using 11634 MB)
@  1013s  (total 10 workers using 11709 MB)
@  1027s  (total 10 workers using 11816 MB)
@  1041s  (total 10 workers using 11944 MB)
@  1054s  (total 10 workers using 12041 MB)
@  1069s  (total 10 workers using 12105 MB)
@  1082s  (total 10 workers using 12193 MB)
@  1097s  (total 10 workers using 12378 MB)
@  1110s  (total 10 workers using 12113 MB)
@  1124s  (total 10 workers using 12220 MB)
@  1138s  (total 10 workers using 12294 MB)
@  1152s  (total 10 workers using 12404 MB)
@  1166s  (total 10 workers using 12447 MB)
@  1180s  (total 10 workers using 12575 MB)
@  1193s  (total 10 workers using 12682 MB)
@  1208s  (total 10 workers using 12871 MB)
@  1221s  (total 10 workers using 12813 MB)
@  1236s  (total 10 workers using 12899 MB)
@  1249s  (total 10 workers using 12996 MB)
@  1264s  (total 10 workers using 13098 MB)
@  1278s  (total 10 workers using 13213 MB)
@  1292s  (total 10 workers using 13358 MB)
@  1305s  (total 10 workers using 13291 MB)
@  1320s  (total 10 workers using 13356 MB)
@  1333s  (total 10 workers using 13459 MB)
@  1347s  (total 10 workers using 13436 MB)
@  1360s  (total 10 workers using 13577 MB)
@  1375s  (total 10 workers using 13681 MB)
@  1388s  (total 10 workers using 13719 MB)
@  1403s  (total 10 workers using 13977 MB)
@  1416s  (total 10 workers using 13935 MB)
@  1431s  (total 10 workers using 14054 MB)
@  1445s  (total 10 workers using 13999 MB)
@  1459s  (total 10 workers using 14227 MB)
@  1473s  (total 10 workers using 14314 MB)
@  1487s  (total 10 workers using 14427 MB)
@  1500s  (total 10 workers using 14466 MB)
@  1514s  (total 10 workers using 14566 MB)
@  1527s  (total 10 workers using 14653 MB)
@  1542s  (total 10 workers using 14792 MB)
@  1555s  (total 10 workers using 14802 MB)
@  1570s  (total 10 workers using 14859 MB)
@  1583s  (total 10 workers using 14900 MB)
@  1597s  (total 10 workers using 15070 MB)
@  1611s  (total 10 workers using 15124 MB)
@  1625s  (total 10 workers using 15311 MB)
@  1639s  (total 10 workers using 15304 MB)
@  1653s  (total 10 workers using 15386 MB)
@  1666s  (total 10 workers using 15479 MB)
@  1681s  (total 10 workers using 15527 MB)
@  1694s  (total 10 workers using 15761 MB)
@  1709s  (total 10 workers using 15590 MB)
@  1722s  (total 10 workers using 15740 MB)
@  1737s  (total 10 workers using 15820 MB)
@  1750s  (total 10 workers using 15993 MB)
@  1765s  (total 10 workers using 16004 MB)
@  1778s  (total 10 workers using 16059 MB)
@  1793s  (total 10 workers using 16121 MB)
@  1806s  (total 10 workers using 16104 MB)
@  1821s  (total 10 workers using 16161 MB)
@  1834s  (total 10 workers using 16247 MB)
@  1848s  (total 10 workers using 16321 MB)
@  1862s  (total 10 workers using 16286 MB)
@  1876s  (total 10 workers using 16478 MB)
@  1890s  (total 10 workers using 16512 MB)
@  1904s  (total 10 workers using 16663 MB)
@  1918s  (total 10 workers using 16659 MB)
@  1932s  (total 10 workers using 16706 MB)
@  1946s  (total 10 workers using 16664 MB)
@  1960s  (total 10 workers using 16769 MB)
@  1973s  (total 10 workers using 16864 MB)
@  1988s  (total 10 workers using 17076 MB)
@  2002s  (total 10 workers using 16925 MB)
@  2016s  (total 10 workers using 17205 MB)
@  2029s  (total 10 workers using 17324 MB)
@  2044s  (total 10 workers using 17254 MB)
@  2057s  (total 10 workers using 17294 MB)
@  2072s  (total 10 workers using 17313 MB)
@  2086s  (total 10 workers using 17468 MB)
@  2100s  (total 10 workers using 17542 MB)
@  2113s  (total 10 workers using 17579 MB)
@  2128s  (total 10 workers using 17419 MB)
@  2141s  (total 10 workers using 17493 MB)
@  2156s  (total 10 workers using 17498 MB)
@  2169s  (total 10 workers using 17576 MB)
@  2184s  (total 10 workers using 17664 MB)
@  2197s  (total 10 workers using 17754 MB)
@  2212s  (total 10 workers using 17784 MB)
@  2225s  (total 10 workers using 17859 MB)
@  2240s  (total 10 workers using 17847 MB)
@  2253s  (total 10 workers using 17846 MB)
@  2267s  (total 10 workers using 17968 MB)
@  2280s  (total 10 workers using 17911 MB)
@  2295s  (total 10 workers using 18063 MB)
@  2308s  (total 10 workers using 17978 MB)
@  2323s  (total 10 workers using 18052 MB)
@  2336s  (total 10 workers using 18063 MB)
@  2350s  (total 10 workers using 18219 MB)
@  2364s  (total 10 workers using 18347 MB)
@  2378s  (total 10 workers using 18410 MB)
@  2392s  (total 10 workers using 18337 MB)
@  2406s  (total 10 workers using 18669 MB)
@  2419s  (total 10 workers using 18512 MB)
@  2434s  (total 10 workers using 18592 MB)
@  2447s  (total 10 workers using 18670 MB)
@  2462s  (total 10 workers using 18917 MB)
@  2475s  (total 10 workers using 18734 MB)
@  2490s  (total 10 workers using 18823 MB)
@  2504s  (total 10 workers using 18879 MB)
@  2518s  (total 10 workers using 18961 MB)
@  2531s  (total 10 workers using 18973 MB)
@  2546s  (total 10 workers using 18950 MB)
@  2559s  (total 10 workers using 18927 MB)
@  2574s  (total 10 workers using 19034 MB)
@  2587s  (total 10 workers using 19210 MB)
@  2601s  (total 10 workers using 19226 MB)
@  2615s  (total 10 workers using 19332 MB)
@  2629s  (total 10 workers using 19356 MB)
@  2643s  (total 10 workers using 19387 MB)
@  2657s  (total 10 workers using 19648 MB)
@  2671s  (total 10 workers using 19484 MB)
@  2685s  (total 10 workers using 19555 MB)
@  2698s  (total 10 workers using 19667 MB)
@  2713s  (total 10 workers using 19684 MB)
@  2726s  (total 10 workers using 19759 MB)
@  2741s  (total 10 workers using 19944 MB)
@  2754s  (total 10 workers using 20018 MB)
@  2769s  (total 10 workers using 20192 MB)
@  2782s  (total 10 workers using 20084 MB)
@  2797s  (total 10 workers using 19971 MB)
@  2810s  (total 10 workers using 20185 MB)
@  2824s  (total 10 workers using 20222 MB)
@  2837s  (total 10 workers using 20285 MB)
@  2852s  (total 10 workers using 20388 MB)
@  2866s  (total 10 workers using 20479 MB)
@  2880s  (total 10 workers using 20490 MB)
@  2893s  (total 10 workers using 20568 MB)
@  2908s  (total 10 workers using 20795 MB)
@  2921s  (total 10 workers using 20878 MB)
@  2936s  (total 10 workers using 20680 MB)
@  2949s  (total 10 workers using 20685 MB)
@  2963s  (total 10 workers using 20752 MB)
@  2977s  (total 10 workers using 20869 MB)
@  2992s  (total 10 workers using 20916 MB)
@  3005s  (total 10 workers using 20986 MB)
@  3020s  (total 10 workers using 21016 MB)
@  3033s  (total 10 workers using 21071 MB)
@  3048s  (total 10 workers using 21199 MB)
@  3061s  (total 10 workers using 21246 MB)
@  3075s  (total 10 workers using 21117 MB)
@  3089s  (total 10 workers using 21232 MB)
@  3104s  (total 10 workers using 21369 MB)
@  3117s  (total 10 workers using 21476 MB)
@  3132s  (total 10 workers using 21441 MB)
@  3145s  (total 10 workers using 21429 MB)
@  3160s  (total 10 workers using 21581 MB)
@  3173s  (total 10 workers using 21584 MB)
@  3187s  (total 10 workers using 21552 MB)
@  3201s  (total 10 workers using 21572 MB)
@  3215s  (total 10 workers using 21624 MB)
@  3229s  (total 10 workers using 21896 MB)
@  3243s  (total 10 workers using 21694 MB)
@  3257s  (total 10 workers using 21729 MB)
@  3271s  (total 10 workers using 21821 MB)
@  3285s  (total 10 workers using 21845 MB)
@  3299s  (total 10 workers using 21857 MB)
@  3312s  (total 10 workers using 21919 MB)
@  3326s  (total 10 workers using 22260 MB)
@  3340s  (total 10 workers using 22082 MB)
@  3354s  (total 10 workers using 22144 MB)
@  3368s  (total 10 workers using 22139 MB)
@  3382s  (total 10 workers using 22248 MB)
@  3395s  (total 10 workers using 22527 MB)
@  3410s  (total 10 workers using 22410 MB)
@  3423s  (total 10 workers using 22284 MB)
@  3438s  (total 10 workers using 22366 MB)
@  3451s  (total 10 workers using 22426 MB)
@  3466s  (total 10 workers using 22391 MB)
@  3479s  (total 10 workers using 22637 MB)
@  3493s  (total 10 workers using 22607 MB)
@  3507s  (total 10 workers using 22707 MB)
@  3521s  (total 10 workers using 22879 MB)
@  3535s  (total 10 workers using 22763 MB)
@  3549s  (total 10 workers using 22799 MB)
@  3562s  (total 10 workers using 22683 MB)
@  3576s  (stopping all workers)
@  3576s  (total 10 workers using 0 MB)
@  3576s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3576s  (worker 2 finished with result unknown) python3 avr.py
@  3576s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3577s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3577s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3577s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3577s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3577s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3577s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3577s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3577s  (copied results from worker 0 in /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/wolf/2019C/pr_dspfilters_fastfir_second-p09)
@  3577s  [0;30;47m(proof race finished with answer unknown in 3577.04 seconds)[m
