AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/wolf/2019C/pr_dspfilters_fastfir_second-p32)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 8576)
@     0s  (started worker 1 with pid 8577)
@     0s  (started worker 2 with pid 8578)
@     0s  (started worker 3 with pid 8579)
@     0s  (started worker 4 with pid 8580)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 8698)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 474 MB)
@     2s  (started worker 6 with pid 8744)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 654 MB)
@     3s  (started worker 7 with pid 8788)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 788 MB)
@     5s  (started worker 8 with pid 8835)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 1030 MB)
@     9s  (started worker 9 with pid 8914)
@     9s  (spawned 1 workers)
@     9s  (total 10 workers using 1171 MB)
@    12s  (started worker 10 with pid 8967)
@    12s  (spawned 1 workers)
@    12s  (total 11 workers using 1307 MB)
@    23s  (total 11 workers using 1718 MB)
@    40s  (total 11 workers using 1987 MB)
@    56s  (total 11 workers using 2093 MB)
@    70s  (total 11 workers using 2264 MB)
@    84s  (total 11 workers using 2410 MB)
@    99s  (total 11 workers using 2570 MB)
@   112s  (total 11 workers using 2651 MB)
@   126s  (total 11 workers using 2782 MB)
@   139s  (total 11 workers using 2841 MB)
@   153s  (total 11 workers using 2915 MB)
@   166s  (total 11 workers using 2990 MB)
@   180s  (total 11 workers using 3071 MB)
@   193s  (total 11 workers using 3133 MB)
@   207s  (total 11 workers using 3261 MB)
@   220s  (total 11 workers using 3376 MB)
@   234s  (total 11 workers using 3592 MB)
@   247s  (total 11 workers using 3823 MB)
@   254s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   261s  (total 10 workers using 3455 MB)
@   274s  (total 10 workers using 3616 MB)
@   288s  (total 10 workers using 3923 MB)
@   300s  (total 10 workers using 4122 MB)
@   314s  (total 10 workers using 4419 MB)
@   327s  (total 10 workers using 4466 MB)
@   340s  (total 10 workers using 4579 MB)
@   353s  (total 10 workers using 4741 MB)
@   367s  (total 10 workers using 4928 MB)
@   380s  (total 10 workers using 5058 MB)
@   393s  (total 10 workers using 5403 MB)
@   406s  (total 10 workers using 5520 MB)
@   419s  (total 10 workers using 5612 MB)
@   432s  (total 10 workers using 5873 MB)
@   446s  (total 10 workers using 5972 MB)
@   458s  (total 10 workers using 6111 MB)
@   472s  (total 10 workers using 6319 MB)
@   485s  (total 10 workers using 6369 MB)
@   498s  (total 10 workers using 6411 MB)
@   511s  (total 10 workers using 6521 MB)
@   525s  (total 10 workers using 6583 MB)
@   537s  (total 10 workers using 6599 MB)
@   551s  (total 10 workers using 6710 MB)
@   564s  (total 10 workers using 6805 MB)
@   577s  (total 10 workers using 6814 MB)
@   590s  (total 10 workers using 6949 MB)
@   604s  (total 10 workers using 7005 MB)
@   617s  (total 10 workers using 7031 MB)
@   630s  (total 10 workers using 7073 MB)
@   643s  (total 10 workers using 7102 MB)
@   657s  (total 10 workers using 7206 MB)
@   669s  (total 10 workers using 7313 MB)
@   683s  (total 10 workers using 7339 MB)
@   695s  (total 10 workers using 7411 MB)
@   709s  (total 10 workers using 7397 MB)
@   722s  (total 10 workers using 7640 MB)
@   736s  (total 10 workers using 7679 MB)
@   748s  (total 10 workers using 7748 MB)
@   762s  (total 10 workers using 7790 MB)
@   775s  (total 10 workers using 7902 MB)
@   788s  (total 10 workers using 7983 MB)
@   801s  (total 10 workers using 8123 MB)
@   814s  (total 10 workers using 8284 MB)
@   827s  (total 10 workers using 8392 MB)
@   841s  (total 10 workers using 8505 MB)
@   853s  (total 10 workers using 8630 MB)
@   867s  (total 10 workers using 8773 MB)
@   880s  (total 10 workers using 8923 MB)
@   893s  (total 10 workers using 8979 MB)
@   906s  (total 10 workers using 9139 MB)
@   920s  (total 10 workers using 9263 MB)
@   933s  (total 10 workers using 9418 MB)
@   947s  (total 10 workers using 9441 MB)
@   959s  (total 10 workers using 9546 MB)
@   974s  (total 10 workers using 9601 MB)
@   986s  (total 10 workers using 9743 MB)
@  1000s  (total 10 workers using 9797 MB)
@  1013s  (total 10 workers using 9899 MB)
@  1026s  (total 10 workers using 10042 MB)
@  1039s  (total 10 workers using 10099 MB)
@  1053s  (total 10 workers using 10257 MB)
@  1065s  (total 10 workers using 10292 MB)
@  1079s  (total 10 workers using 10591 MB)
@  1092s  (total 10 workers using 10590 MB)
@  1106s  (total 10 workers using 10688 MB)
@  1118s  (total 10 workers using 10758 MB)
@  1132s  (total 10 workers using 10888 MB)
@  1145s  (total 10 workers using 11082 MB)
@  1159s  (total 10 workers using 11152 MB)
@  1172s  (total 10 workers using 11455 MB)
@  1185s  (total 10 workers using 11649 MB)
@  1198s  (total 10 workers using 11647 MB)
@  1212s  (total 10 workers using 11817 MB)
@  1224s  (total 10 workers using 11843 MB)
@  1238s  (total 10 workers using 12044 MB)
@  1250s  (total 10 workers using 12032 MB)
@  1264s  (total 10 workers using 12059 MB)
@  1277s  (total 10 workers using 12200 MB)
@  1291s  (total 10 workers using 12198 MB)
@  1303s  (total 10 workers using 12480 MB)
@  1317s  (total 10 workers using 12408 MB)
@  1329s  (total 10 workers using 12587 MB)
@  1343s  (total 10 workers using 12593 MB)
@  1356s  (total 10 workers using 12674 MB)
@  1368s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  1369s  (total 9 workers using 11493 MB)
@  1382s  (total 9 workers using 11533 MB)
@  1395s  (total 9 workers using 11839 MB)
@  1408s  (total 9 workers using 11972 MB)
@  1421s  (total 9 workers using 11983 MB)
@  1433s  (total 9 workers using 12193 MB)
@  1446s  (total 9 workers using 12348 MB)
@  1459s  (total 9 workers using 12460 MB)
@  1472s  (total 9 workers using 12510 MB)
@  1484s  (total 9 workers using 12875 MB)
@  1498s  (total 9 workers using 12707 MB)
@  1510s  (total 9 workers using 12953 MB)
@  1524s  (total 9 workers using 13293 MB)
@  1536s  (total 9 workers using 13391 MB)
@  1549s  (total 9 workers using 13571 MB)
@  1562s  (total 9 workers using 13764 MB)
@  1575s  (total 9 workers using 14006 MB)
@  1588s  (total 9 workers using 14385 MB)
@  1601s  (total 9 workers using 14605 MB)
@  1614s  (total 9 workers using 14762 MB)
@  1627s  (total 9 workers using 15074 MB)
@  1639s  (total 9 workers using 15266 MB)
@  1653s  (total 9 workers using 15222 MB)
@  1665s  (total 9 workers using 15385 MB)
@  1678s  (total 9 workers using 15352 MB)
@  1691s  (total 9 workers using 15354 MB)
@  1704s  (total 9 workers using 15645 MB)
@  1717s  (total 9 workers using 15550 MB)
@  1730s  (total 9 workers using 15559 MB)
@  1742s  (total 9 workers using 15687 MB)
@  1756s  (total 9 workers using 15794 MB)
@  1768s  (total 9 workers using 16043 MB)
@  1782s  (total 9 workers using 16112 MB)
@  1794s  (total 9 workers using 16184 MB)
@  1808s  (total 9 workers using 16282 MB)
@  1820s  (total 9 workers using 16449 MB)
@  1834s  (total 9 workers using 16541 MB)
@  1846s  (total 9 workers using 16631 MB)
@  1859s  (total 9 workers using 16724 MB)
@  1872s  (total 9 workers using 16821 MB)
@  1885s  (total 9 workers using 16854 MB)
@  1898s  (total 9 workers using 16850 MB)
@  1911s  (total 9 workers using 17111 MB)
@  1924s  (total 9 workers using 17085 MB)
@  1937s  (total 9 workers using 17185 MB)
@  1949s  (total 9 workers using 17284 MB)
@  1963s  (total 9 workers using 17367 MB)
@  1975s  (total 9 workers using 17303 MB)
@  1988s  (total 9 workers using 17450 MB)
@  2001s  (total 9 workers using 17508 MB)
@  2014s  (total 9 workers using 17617 MB)
@  2027s  (total 9 workers using 17766 MB)
@  2040s  (total 9 workers using 17689 MB)
@  2053s  (total 9 workers using 17861 MB)
@  2067s  (total 9 workers using 17856 MB)
@  2079s  (total 9 workers using 18022 MB)
@  2092s  (total 9 workers using 18103 MB)
@  2105s  (total 9 workers using 18093 MB)
@  2118s  (total 9 workers using 18381 MB)
@  2131s  (total 9 workers using 18310 MB)
@  2144s  (total 9 workers using 18262 MB)
@  2156s  (total 9 workers using 18494 MB)
@  2170s  (total 9 workers using 18609 MB)
@  2182s  (total 9 workers using 18744 MB)
@  2196s  (total 9 workers using 18886 MB)
@  2208s  (total 9 workers using 18922 MB)
@  2222s  (total 9 workers using 18997 MB)
@  2234s  (total 9 workers using 19194 MB)
@  2248s  (total 9 workers using 19110 MB)
@  2260s  (total 9 workers using 19045 MB)
@  2273s  (total 9 workers using 19292 MB)
@  2286s  (total 9 workers using 19485 MB)
@  2299s  (total 9 workers using 19677 MB)
@  2312s  (total 9 workers using 19761 MB)
@  2325s  (total 9 workers using 19829 MB)
@  2337s  (total 9 workers using 19872 MB)
@  2351s  (total 9 workers using 20180 MB)
@  2363s  (total 9 workers using 20371 MB)
@  2377s  (total 9 workers using 20610 MB)
@  2389s  (total 9 workers using 20750 MB)
@  2403s  (total 9 workers using 20454 MB)
@  2415s  (total 9 workers using 20538 MB)
@  2428s  (total 9 workers using 20755 MB)
@  2441s  (total 9 workers using 20996 MB)
@  2454s  (total 9 workers using 21183 MB)
@  2466s  (total 9 workers using 20924 MB)
@  2480s  (total 9 workers using 21174 MB)
@  2492s  (total 9 workers using 21201 MB)
@  2506s  (total 9 workers using 21180 MB)
@  2518s  (total 9 workers using 21326 MB)
@  2531s  (total 9 workers using 21398 MB)
@  2544s  (total 9 workers using 21453 MB)
@  2557s  (total 9 workers using 21595 MB)
@  2570s  (total 9 workers using 21531 MB)
@  2583s  (total 9 workers using 21772 MB)
@  2596s  (total 9 workers using 21888 MB)
@  2609s  (total 9 workers using 21881 MB)
@  2621s  (total 9 workers using 22046 MB)
@  2635s  (total 9 workers using 21939 MB)
@  2647s  (total 9 workers using 22185 MB)
@  2660s  (total 9 workers using 22253 MB)
@  2673s  (total 9 workers using 22298 MB)
@  2687s  (total 9 workers using 22466 MB)
@  2699s  (total 9 workers using 22522 MB)
@  2712s  (total 9 workers using 22544 MB)
@  2725s  (total 9 workers using 22312 MB)
@  2738s  (total 9 workers using 22553 MB)
@  2751s  (total 9 workers using 22451 MB)
@  2764s  (total 9 workers using 22567 MB)
@  2777s  (total 9 workers using 22635 MB)
@  2790s  (total 9 workers using 22777 MB)
@  2802s  (total 9 workers using 22791 MB)
@  2816s  (total 9 workers using 22795 MB)
@  2828s  (total 9 workers using 23114 MB)
@  2841s  (total 9 workers using 23160 MB)
@  2854s  (total 9 workers using 23332 MB)
@  2867s  (total 9 workers using 23355 MB)
@  2880s  (total 9 workers using 23483 MB)
@  2893s  (total 9 workers using 23479 MB)
@  2906s  (total 9 workers using 23512 MB)
@  2920s  (total 9 workers using 23564 MB)
@  2932s  (total 9 workers using 23590 MB)
@  2945s  (total 9 workers using 23704 MB)
@  2958s  (total 9 workers using 23756 MB)
@  2971s  (total 9 workers using 24000 MB)
@  2983s  (total 9 workers using 24060 MB)
@  2997s  (total 9 workers using 24179 MB)
@  3009s  (total 9 workers using 24413 MB)
@  3022s  (total 9 workers using 24260 MB)
@  3035s  (total 9 workers using 24237 MB)
@  3049s  (total 9 workers using 24422 MB)
@  3061s  (total 9 workers using 24589 MB)
@  3075s  (total 9 workers using 24605 MB)
@  3087s  (total 9 workers using 24759 MB)
@  3101s  (total 9 workers using 24739 MB)
@  3113s  (total 9 workers using 24851 MB)
@  3126s  (total 9 workers using 24955 MB)
@  3139s  (total 9 workers using 25199 MB)
@  3152s  (total 9 workers using 25011 MB)
@  3165s  (total 9 workers using 25179 MB)
@  3178s  (total 9 workers using 25286 MB)
@  3191s  (total 9 workers using 25298 MB)
@  3204s  (total 9 workers using 25665 MB)
@  3216s  (total 9 workers using 25658 MB)
@  3230s  (total 9 workers using 25435 MB)
@  3242s  (total 9 workers using 25813 MB)
@  3256s  (total 9 workers using 25700 MB)
@  3268s  (total 9 workers using 25617 MB)
@  3281s  (total 9 workers using 25827 MB)
@  3294s  (total 9 workers using 25903 MB)
@  3307s  (total 9 workers using 26076 MB)
@  3319s  (total 9 workers using 26264 MB)
@  3332s  (total 9 workers using 26189 MB)
@  3345s  (total 9 workers using 26400 MB)
@  3358s  (total 9 workers using 26485 MB)
@  3371s  (total 9 workers using 26629 MB)
@  3384s  (total 9 workers using 26649 MB)
@  3396s  (total 9 workers using 26640 MB)
@  3410s  (total 9 workers using 27022 MB)
@  3422s  (total 9 workers using 26833 MB)
@  3436s  (total 9 workers using 26855 MB)
@  3448s  (total 9 workers using 27115 MB)
@  3462s  (total 9 workers using 26969 MB)
@  3474s  (total 9 workers using 27132 MB)
@  3488s  (total 9 workers using 27249 MB)
@  3500s  (total 9 workers using 27145 MB)
@  3513s  (total 9 workers using 27254 MB)
@  3526s  (total 9 workers using 27518 MB)
@  3539s  (total 9 workers using 27520 MB)
@  3552s  (total 9 workers using 27516 MB)
@  3565s  (total 9 workers using 27502 MB)
@  3575s  (stopping all workers)
@  3575s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3575s  (worker 2 finished with result unknown) python3 avr.py
@  3575s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3575s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3575s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3575s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3575s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3575s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3575s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3575s  (copied results from worker 0 in /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/wolf/2019C/pr_dspfilters_fastfir_second-p32)
@  3575s  [0;30;47m(proof race finished with answer unknown in 3575.16 seconds)[m
