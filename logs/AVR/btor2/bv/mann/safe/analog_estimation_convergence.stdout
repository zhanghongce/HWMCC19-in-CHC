AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/safe/pr_analog_estimation_convergence)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 206211)
@     0s  (started worker 1 with pid 206212)
@     0s  (started worker 2 with pid 206213)
@     0s  (started worker 3 with pid 206214)
@     0s  (started worker 4 with pid 206215)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 206339)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 114 MB)
@     2s  (started worker 6 with pid 206384)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 175 MB)
@     3s  (started worker 7 with pid 206440)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 278 MB)
@     6s  (started worker 8 with pid 206492)
@     6s  (spawned 1 workers)
@     6s  (total 9 workers using 360 MB)
@    10s  (started worker 9 with pid 206568)
@    10s  (spawned 1 workers)
@    10s  (total 10 workers using 484 MB)
@    13s  (started worker 10 with pid 206642)
@    13s  (spawned 1 workers)
@    13s  (total 11 workers using 618 MB)
@    25s  (total 11 workers using 946 MB)
@    42s  (total 11 workers using 1266 MB)
@    54s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@    59s  (total 10 workers using 1161 MB)
@    73s  (total 10 workers using 1278 MB)
@    87s  (total 10 workers using 1467 MB)
@   103s  (total 10 workers using 1568 MB)
@   116s  (total 10 workers using 1839 MB)
@   130s  (total 10 workers using 2006 MB)
@   143s  (total 10 workers using 2132 MB)
@   158s  (total 10 workers using 2195 MB)
@   171s  (total 10 workers using 2374 MB)
@   185s  (total 10 workers using 2533 MB)
@   198s  (total 10 workers using 2722 MB)
@   212s  (total 10 workers using 2805 MB)
@   225s  (total 10 workers using 2852 MB)
@   240s  (total 10 workers using 3014 MB)
@   253s  (total 10 workers using 3069 MB)
@   267s  (total 10 workers using 3236 MB)
@   280s  (total 10 workers using 3299 MB)
@   294s  (total 10 workers using 3357 MB)
@   308s  (total 10 workers using 3394 MB)
@   322s  (total 10 workers using 3730 MB)
@   335s  (total 10 workers using 3810 MB)
@   349s  (total 10 workers using 3932 MB)
@   362s  (total 10 workers using 3975 MB)
@   377s  (total 10 workers using 4129 MB)
@   390s  (total 10 workers using 4162 MB)
@   404s  (total 10 workers using 4232 MB)
@   417s  (total 10 workers using 4293 MB)
@   431s  (total 10 workers using 4574 MB)
@   445s  (total 10 workers using 4737 MB)
@   459s  (total 10 workers using 4743 MB)
@   472s  (total 10 workers using 4825 MB)
@   486s  (total 10 workers using 4915 MB)
@   499s  (total 10 workers using 4971 MB)
@   513s  (total 10 workers using 5058 MB)
@   526s  (total 10 workers using 5218 MB)
@   541s  (total 10 workers using 5218 MB)
@   554s  (total 10 workers using 5331 MB)
@   568s  (total 10 workers using 5342 MB)
@   581s  (total 10 workers using 5383 MB)
@   595s  (total 10 workers using 5444 MB)
@   609s  (total 10 workers using 5476 MB)
@   623s  (total 10 workers using 5493 MB)
@   636s  (total 10 workers using 5608 MB)
@   651s  (total 10 workers using 5744 MB)
@   664s  (total 10 workers using 5845 MB)
@   678s  (total 10 workers using 5852 MB)
@   691s  (total 10 workers using 5887 MB)
@   706s  (total 10 workers using 5924 MB)
@   719s  (total 10 workers using 6313 MB)
@   733s  (total 10 workers using 6384 MB)
@   746s  (total 10 workers using 6500 MB)
@   761s  (total 10 workers using 6564 MB)
@   774s  (total 10 workers using 6624 MB)
@   788s  (total 10 workers using 6660 MB)
@   801s  (total 10 workers using 6688 MB)
@   816s  (total 10 workers using 6738 MB)
@   829s  (total 10 workers using 6937 MB)
@   843s  (total 10 workers using 7001 MB)
@   857s  (total 10 workers using 7113 MB)
@   871s  (total 10 workers using 7185 MB)
@   885s  (total 10 workers using 7287 MB)
@   899s  (total 10 workers using 7348 MB)
@   912s  (total 10 workers using 7402 MB)
@   926s  (total 10 workers using 7548 MB)
@   939s  (total 10 workers using 7567 MB)
@   953s  (total 10 workers using 7677 MB)
@   967s  (total 10 workers using 7724 MB)
@   981s  (total 10 workers using 7791 MB)
@   994s  (total 10 workers using 7901 MB)
@  1008s  (total 10 workers using 7961 MB)
@  1021s  (total 10 workers using 8063 MB)
@  1035s  (total 10 workers using 8125 MB)
@  1048s  (total 10 workers using 8189 MB)
@  1062s  (total 10 workers using 8216 MB)
@  1075s  (total 10 workers using 8365 MB)
@  1089s  (total 10 workers using 8442 MB)
@  1102s  (total 10 workers using 8543 MB)
@  1117s  (total 10 workers using 8628 MB)
@  1130s  (total 10 workers using 8660 MB)
@  1144s  (total 10 workers using 8712 MB)
@  1157s  (total 10 workers using 8745 MB)
@  1171s  (total 10 workers using 8916 MB)
@  1185s  (total 10 workers using 8975 MB)
@  1199s  (total 10 workers using 9008 MB)
@  1212s  (total 10 workers using 9107 MB)
@  1226s  (total 10 workers using 9123 MB)
@  1239s  (total 10 workers using 9187 MB)
@  1253s  (total 10 workers using 9227 MB)
@  1267s  (total 10 workers using 9292 MB)
@  1281s  (total 10 workers using 9321 MB)
@  1294s  (total 10 workers using 9338 MB)
@  1308s  (total 10 workers using 9878 MB)
@  1321s  (total 10 workers using 10415 MB)
@  1335s  (total 10 workers using 10375 MB)
@  1349s  (total 10 workers using 10453 MB)
@  1363s  (total 10 workers using 10475 MB)
@  1376s  (total 10 workers using 10515 MB)
@  1390s  (total 10 workers using 10521 MB)
@  1403s  (total 10 workers using 10601 MB)
@  1418s  (total 10 workers using 10687 MB)
@  1431s  (total 10 workers using 10762 MB)
@  1446s  (total 10 workers using 10763 MB)
@  1459s  (total 10 workers using 10829 MB)
@  1473s  (total 10 workers using 10871 MB)
@  1486s  (total 10 workers using 10774 MB)
@  1500s  (total 10 workers using 10940 MB)
@  1513s  (total 10 workers using 11041 MB)
@  1528s  (total 10 workers using 11118 MB)
@  1541s  (total 10 workers using 11074 MB)
@  1555s  (total 10 workers using 11141 MB)
@  1568s  (total 10 workers using 11211 MB)
@  1582s  (total 10 workers using 11281 MB)
@  1596s  (total 10 workers using 11222 MB)
@  1610s  (total 10 workers using 11273 MB)
@  1623s  (total 10 workers using 11303 MB)
@  1638s  (total 10 workers using 11361 MB)
@  1651s  (total 10 workers using 11399 MB)
@  1665s  (total 10 workers using 11410 MB)
@  1678s  (total 10 workers using 11421 MB)
@  1692s  (total 10 workers using 11437 MB)
@  1705s  (total 10 workers using 11455 MB)
@  1719s  (total 10 workers using 11497 MB)
@  1732s  (total 10 workers using 11523 MB)
@  1746s  (total 10 workers using 11572 MB)
@  1759s  (total 10 workers using 11609 MB)
@  1774s  (total 10 workers using 11669 MB)
@  1787s  (total 10 workers using 11769 MB)
@  1801s  (total 10 workers using 11761 MB)
@  1814s  (total 10 workers using 11832 MB)
@  1828s  (total 10 workers using 11836 MB)
@  1842s  (total 10 workers using 11892 MB)
@  1856s  (total 10 workers using 11910 MB)
@  1869s  (total 10 workers using 11933 MB)
@  1883s  (total 10 workers using 12016 MB)
@  1897s  (total 10 workers using 12137 MB)
@  1911s  (total 10 workers using 12169 MB)
@  1924s  (total 10 workers using 12235 MB)
@  1938s  (total 10 workers using 12243 MB)
@  1951s  (total 10 workers using 12225 MB)
@  1965s  (total 10 workers using 12281 MB)
@  1978s  (total 10 workers using 12282 MB)
@  1992s  (total 10 workers using 12418 MB)
@  2005s  (total 10 workers using 12419 MB)
@  2020s  (total 10 workers using 12457 MB)
@  2033s  (total 10 workers using 12472 MB)
@  2047s  (total 10 workers using 12511 MB)
@  2060s  (total 10 workers using 12508 MB)
@  2075s  (total 10 workers using 12578 MB)
@  2088s  (total 10 workers using 12586 MB)
@  2102s  (total 10 workers using 12569 MB)
@  2115s  (total 10 workers using 12558 MB)
@  2129s  (total 10 workers using 12572 MB)
@  2142s  (total 10 workers using 12712 MB)
@  2156s  (total 10 workers using 12707 MB)
@  2169s  (total 10 workers using 12662 MB)
@  2184s  (total 10 workers using 12792 MB)
@  2197s  (total 10 workers using 12853 MB)
@  2211s  (total 10 workers using 12865 MB)
@  2224s  (total 10 workers using 13243 MB)
@  2238s  (total 10 workers using 14006 MB)
@  2251s  (total 10 workers using 14208 MB)
@  2266s  (total 10 workers using 14297 MB)
@  2279s  (total 10 workers using 14319 MB)
@  2293s  (total 10 workers using 14287 MB)
@  2306s  (total 10 workers using 14283 MB)
@  2321s  (total 10 workers using 14288 MB)
@  2334s  (total 10 workers using 14309 MB)
@  2348s  (total 10 workers using 14410 MB)
@  2361s  (total 10 workers using 14359 MB)
@  2376s  (total 10 workers using 14381 MB)
@  2389s  (total 10 workers using 14434 MB)
@  2403s  (total 10 workers using 14521 MB)
@  2416s  (total 10 workers using 14520 MB)
@  2430s  (total 10 workers using 14570 MB)
@  2443s  (total 10 workers using 14540 MB)
@  2457s  (total 10 workers using 14836 MB)
@  2470s  (total 10 workers using 14818 MB)
@  2485s  (total 10 workers using 14821 MB)
@  2498s  (total 10 workers using 14810 MB)
@  2512s  (total 10 workers using 14931 MB)
@  2525s  (total 10 workers using 14891 MB)
@  2539s  (total 10 workers using 14898 MB)
@  2552s  (total 10 workers using 14923 MB)
@  2566s  (total 10 workers using 15002 MB)
@  2580s  (total 10 workers using 15028 MB)
@  2594s  (total 10 workers using 15091 MB)
@  2607s  (total 10 workers using 15084 MB)
@  2621s  (total 10 workers using 15083 MB)
@  2635s  (total 10 workers using 15336 MB)
@  2649s  (total 10 workers using 15384 MB)
@  2662s  (total 10 workers using 15420 MB)
@  2676s  (total 10 workers using 15389 MB)
@  2689s  (total 10 workers using 15498 MB)
@  2703s  (total 10 workers using 15536 MB)
@  2716s  (total 10 workers using 15518 MB)
@  2731s  (total 10 workers using 15611 MB)
@  2744s  (total 10 workers using 15628 MB)
@  2758s  (total 10 workers using 15670 MB)
@  2771s  (total 10 workers using 15655 MB)
@  2785s  (total 10 workers using 15696 MB)
@  2799s  (total 10 workers using 15630 MB)
@  2813s  (total 10 workers using 15562 MB)
@  2826s  (total 10 workers using 15607 MB)
@  2841s  (total 10 workers using 15625 MB)
@  2854s  (total 10 workers using 15801 MB)
@  2868s  (total 10 workers using 15813 MB)
@  2881s  (total 10 workers using 15851 MB)
@  2895s  (total 10 workers using 15926 MB)
@  2908s  (total 10 workers using 15998 MB)
@  2923s  (total 10 workers using 16008 MB)
@  2936s  (total 10 workers using 16077 MB)
@  2950s  (total 10 workers using 16128 MB)
@  2963s  (total 10 workers using 16131 MB)
@  2977s  (total 10 workers using 16178 MB)
@  2991s  (total 10 workers using 16171 MB)
@  3005s  (total 10 workers using 16263 MB)
@  3018s  (total 10 workers using 16211 MB)
@  3032s  (total 10 workers using 16287 MB)
@  3046s  (total 10 workers using 16309 MB)
@  3060s  (total 10 workers using 16295 MB)
@  3073s  (total 10 workers using 16358 MB)
@  3088s  (total 10 workers using 16418 MB)
@  3101s  (total 10 workers using 16539 MB)
@  3115s  (total 10 workers using 16560 MB)
@  3128s  (total 10 workers using 16586 MB)
@  3142s  (total 10 workers using 16570 MB)
@  3155s  (total 10 workers using 16615 MB)
@  3170s  (total 10 workers using 16656 MB)
@  3183s  (total 10 workers using 16619 MB)
@  3197s  (total 10 workers using 16657 MB)
@  3210s  (total 10 workers using 16716 MB)
@  3224s  (total 10 workers using 16704 MB)
@  3237s  (total 10 workers using 16801 MB)
@  3251s  (total 10 workers using 16826 MB)
@  3264s  (total 10 workers using 16851 MB)
@  3278s  (total 10 workers using 16859 MB)
@  3292s  (total 10 workers using 16971 MB)
@  3306s  (total 10 workers using 16986 MB)
@  3319s  (total 10 workers using 16962 MB)
@  3333s  (total 10 workers using 17015 MB)
@  3346s  (total 10 workers using 17047 MB)
@  3360s  (total 10 workers using 17078 MB)
@  3373s  (total 10 workers using 17095 MB)
@  3387s  (total 10 workers using 17207 MB)
@  3400s  (total 10 workers using 17255 MB)
@  3415s  (total 10 workers using 17314 MB)
@  3428s  (total 10 workers using 17330 MB)
@  3442s  (total 10 workers using 17431 MB)
@  3455s  (total 10 workers using 17415 MB)
@  3469s  (total 10 workers using 17633 MB)
@  3482s  (total 10 workers using 17630 MB)
@  3497s  (total 10 workers using 17631 MB)
@  3510s  (total 10 workers using 17633 MB)
@  3524s  (total 10 workers using 17634 MB)
@  3537s  (total 10 workers using 17634 MB)
@  3551s  (total 10 workers using 17635 MB)
@  3564s  (total 10 workers using 17824 MB)
@  3572s  (stopping all workers)
@  3573s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3573s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3573s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3573s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3573s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3573s  (worker 2 finished with result unknown) python3 avr.py
@  3573s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3573s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3573s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3573s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3573s  (copied results from worker 0 in /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/safe/pr_analog_estimation_convergence)
@  3573s  [0;30;47m(proof race finished with answer unknown in 3573.03 seconds)[m
