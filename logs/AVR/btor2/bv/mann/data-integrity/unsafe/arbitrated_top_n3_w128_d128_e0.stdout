AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_arbitrated_top_n3_w128_d128_e0)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 28045)
@     0s  (started worker 1 with pid 28046)
@     0s  (started worker 2 with pid 28047)
@     0s  (started worker 3 with pid 28048)
@     0s  (started worker 4 with pid 28049)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 28165)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 593 MB)
@     2s  (started worker 6 with pid 28205)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 835 MB)
@     3s  (started worker 7 with pid 28249)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 1290 MB)
@     6s  (started worker 8 with pid 28296)
@     6s  (spawned 1 workers)
@     6s  (total 9 workers using 1705 MB)
@     9s  (started worker 9 with pid 28355)
@     9s  (spawned 1 workers)
@     9s  (total 10 workers using 2191 MB)
@    13s  (started worker 10 with pid 28407)
@    13s  (spawned 1 workers)
@    13s  (total 11 workers using 2755 MB)
@    25s  (total 11 workers using 4557 MB)
@    42s  (total 11 workers using 5455 MB)
@    59s  (total 11 workers using 6186 MB)
@    74s  (total 11 workers using 6448 MB)
@    89s  (total 11 workers using 6529 MB)
@   105s  (total 11 workers using 6811 MB)
@   118s  (total 11 workers using 6939 MB)
@   133s  (total 11 workers using 6917 MB)
@   147s  (total 11 workers using 6863 MB)
@   161s  (total 11 workers using 7039 MB)
@   175s  (total 11 workers using 7033 MB)
@   189s  (total 11 workers using 7183 MB)
@   193s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@   203s  (total 10 workers using 6564 MB)
@   217s  (total 10 workers using 6625 MB)
@   230s  (total 10 workers using 6749 MB)
@   244s  (total 10 workers using 6861 MB)
@   257s  (total 10 workers using 6963 MB)
@   272s  (total 10 workers using 6921 MB)
@   285s  (total 10 workers using 6942 MB)
@   299s  (total 10 workers using 7094 MB)
@   312s  (total 10 workers using 7171 MB)
@   326s  (total 10 workers using 7226 MB)
@   339s  (total 10 workers using 7228 MB)
@   353s  (total 10 workers using 7173 MB)
@   367s  (total 10 workers using 7319 MB)
@   380s  (total 10 workers using 7339 MB)
@   393s  (total 10 workers using 7308 MB)
@   407s  (total 10 workers using 7420 MB)
@   421s  (total 10 workers using 7369 MB)
@   435s  (total 10 workers using 7656 MB)
@   449s  (total 10 workers using 7628 MB)
@   463s  (total 10 workers using 7656 MB)
@   476s  (total 10 workers using 7657 MB)
@   491s  (total 10 workers using 7498 MB)
@   504s  (total 10 workers using 7523 MB)
@   519s  (total 10 workers using 7611 MB)
@   532s  (total 10 workers using 7560 MB)
@   547s  (total 10 workers using 7578 MB)
@   560s  (total 10 workers using 7587 MB)
@   574s  (total 10 workers using 7596 MB)
@   587s  (total 10 workers using 7754 MB)
@   602s  (total 10 workers using 7826 MB)
@   615s  (total 10 workers using 7893 MB)
@   630s  (total 10 workers using 7978 MB)
@   643s  (total 10 workers using 7896 MB)
@   657s  (total 10 workers using 7952 MB)
@   670s  (total 10 workers using 7957 MB)
@   684s  (total 10 workers using 8070 MB)
@   697s  (total 10 workers using 8078 MB)
@   710s  (total 10 workers using 8082 MB)
@   723s  (total 10 workers using 8176 MB)
@   737s  (total 10 workers using 8192 MB)
@   750s  (total 10 workers using 8206 MB)
@   763s  (total 10 workers using 8201 MB)
@   776s  (total 10 workers using 8213 MB)
@   790s  (total 10 workers using 8216 MB)
@   803s  (total 10 workers using 8222 MB)
@   817s  (total 10 workers using 8238 MB)
@   829s  (total 10 workers using 8598 MB)
@   843s  (total 10 workers using 8642 MB)
@   856s  (total 10 workers using 8693 MB)
@   870s  (total 10 workers using 8709 MB)
@   883s  (total 10 workers using 8722 MB)
@   896s  (total 10 workers using 8836 MB)
@   909s  (total 10 workers using 8843 MB)
@   923s  (total 10 workers using 8850 MB)
@   936s  (total 10 workers using 8857 MB)
@   950s  (total 10 workers using 8864 MB)
@   963s  (total 10 workers using 9316 MB)
@   977s  (total 10 workers using 9458 MB)
@   990s  (total 10 workers using 9473 MB)
@  1003s  (total 10 workers using 9483 MB)
@  1016s  (total 10 workers using 9485 MB)
@  1030s  (total 10 workers using 9490 MB)
@  1043s  (total 10 workers using 9528 MB)
@  1056s  (total 10 workers using 9451 MB)
@  1069s  (total 10 workers using 9074 MB)
@  1083s  (total 10 workers using 9101 MB)
@  1095s  (total 10 workers using 9115 MB)
@  1109s  (total 10 workers using 9125 MB)
@  1122s  (total 10 workers using 9142 MB)
@  1136s  (total 10 workers using 9146 MB)
@  1148s  (total 10 workers using 9135 MB)
@  1162s  (total 10 workers using 9177 MB)
@  1175s  (total 10 workers using 9685 MB)
@  1189s  (total 10 workers using 9708 MB)
@  1202s  (total 10 workers using 9716 MB)
@  1215s  (total 10 workers using 9725 MB)
@  1228s  (total 10 workers using 9737 MB)
@  1242s  (total 10 workers using 9704 MB)
@  1255s  (total 10 workers using 9671 MB)
@  1269s  (total 10 workers using 9580 MB)
@  1281s  (total 10 workers using 9594 MB)
@  1295s  (total 10 workers using 9594 MB)
@  1308s  (total 10 workers using 9625 MB)
@  1322s  (total 10 workers using 9530 MB)
@  1335s  (total 10 workers using 9527 MB)
@  1348s  (total 10 workers using 9492 MB)
@  1361s  (total 10 workers using 9517 MB)
@  1375s  (total 10 workers using 10017 MB)
@  1387s  (total 10 workers using 10019 MB)
@  1401s  (total 10 workers using 10019 MB)
@  1414s  (total 10 workers using 10019 MB)
@  1428s  (total 10 workers using 10064 MB)
@  1441s  (total 10 workers using 10039 MB)
@  1454s  (total 10 workers using 10013 MB)
@  1467s  (total 10 workers using 9683 MB)
@  1481s  (total 10 workers using 9687 MB)
@  1494s  (total 10 workers using 9687 MB)
@  1507s  (total 10 workers using 9687 MB)
@  1520s  (total 10 workers using 9687 MB)
@  1534s  (total 10 workers using 9692 MB)
@  1547s  (total 10 workers using 9694 MB)
@  1560s  (total 10 workers using 10262 MB)
@  1573s  (total 10 workers using 10326 MB)
@  1587s  (total 10 workers using 10231 MB)
@  1599s  (total 10 workers using 9858 MB)
@  1613s  (total 10 workers using 9854 MB)
@  1626s  (total 10 workers using 9854 MB)
@  1640s  (total 10 workers using 9799 MB)
@  1653s  (total 10 workers using 9799 MB)
@  1667s  (total 10 workers using 9803 MB)
@  1679s  (total 10 workers using 9803 MB)
@  1693s  (total 10 workers using 9817 MB)
@  1706s  (total 10 workers using 10324 MB)
@  1719s  (total 10 workers using 10324 MB)
@  1732s  (total 10 workers using 10405 MB)
@  1746s  (total 10 workers using 10298 MB)
@  1758s  (total 10 workers using 10300 MB)
@  1772s  (total 10 workers using 10300 MB)
@  1785s  (total 10 workers using 10373 MB)
@  1799s  (total 10 workers using 10384 MB)
@  1811s  (total 10 workers using 10034 MB)
@  1825s  (total 10 workers using 10021 MB)
@  1838s  (total 10 workers using 10037 MB)
@  1852s  (total 10 workers using 10094 MB)
@  1865s  (total 10 workers using 10094 MB)
@  1878s  (total 10 workers using 10115 MB)
@  1891s  (total 10 workers using 10134 MB)
@  1905s  (total 10 workers using 10170 MB)
@  1918s  (total 10 workers using 10654 MB)
@  1931s  (total 10 workers using 10688 MB)
@  1944s  (total 10 workers using 11354 MB)
@  1958s  (total 10 workers using 11362 MB)
@  1970s  (total 10 workers using 11356 MB)
@  1984s  (total 10 workers using 11380 MB)
@  1997s  (total 10 workers using 11281 MB)
@  2010s  (total 10 workers using 11279 MB)
@  2023s  (total 10 workers using 11282 MB)
@  2037s  (total 10 workers using 10932 MB)
@  2050s  (total 10 workers using 10949 MB)
@  2063s  (total 10 workers using 10949 MB)
@  2076s  (total 10 workers using 10951 MB)
@  2088s  (total 10 workers using 10981 MB)
@  2099s  (total 10 workers using 11007 MB)
@  2111s  (total 10 workers using 11007 MB)
@  2122s  (total 10 workers using 11007 MB)
@  2133s  (total 10 workers using 11007 MB)
@  2145s  (total 10 workers using 11007 MB)
@  2156s  (total 10 workers using 11518 MB)
@  2167s  (total 10 workers using 11519 MB)
@  2179s  (total 10 workers using 11556 MB)
@  2190s  (total 10 workers using 11580 MB)
@  2201s  (total 10 workers using 11581 MB)
@  2212s  (total 10 workers using 11602 MB)
@  2224s  (total 10 workers using 11825 MB)
@  2235s  (total 10 workers using 11825 MB)
@  2246s  (total 10 workers using 11827 MB)
@  2257s  (total 10 workers using 11816 MB)
@  2269s  (total 10 workers using 11577 MB)
@  2280s  (total 10 workers using 11577 MB)
@  2291s  (total 10 workers using 11580 MB)
@  2302s  (total 10 workers using 11580 MB)
@  2314s  (total 10 workers using 11232 MB)
@  2325s  (total 10 workers using 11232 MB)
@  2336s  (total 10 workers using 11251 MB)
@  2347s  (total 10 workers using 11276 MB)
@  2358s  (total 10 workers using 11276 MB)
@  2369s  (total 10 workers using 11234 MB)
@  2381s  (total 10 workers using 11235 MB)
@  2391s  (total 10 workers using 11235 MB)
@  2403s  (total 10 workers using 11235 MB)
@  2414s  (total 10 workers using 11235 MB)
@  2425s  (total 10 workers using 11327 MB)
@  2436s  (total 10 workers using 11823 MB)
@  2447s  (total 10 workers using 11880 MB)
@  2458s  (total 10 workers using 12115 MB)
@  2470s  (total 10 workers using 12084 MB)
@  2481s  (total 10 workers using 12095 MB)
@  2492s  (total 10 workers using 12062 MB)
@  2503s  (total 10 workers using 12061 MB)
@  2514s  (total 10 workers using 12068 MB)
@  2525s  (total 10 workers using 12100 MB)
@  2536s  (total 10 workers using 12201 MB)
@  2547s  (total 10 workers using 12082 MB)
@  2559s  (total 10 workers using 12102 MB)
@  2570s  (total 10 workers using 12105 MB)
@  2581s  (total 10 workers using 12106 MB)
@  2592s  (total 10 workers using 12128 MB)
@  2603s  (total 10 workers using 12123 MB)
@  2614s  (total 10 workers using 12129 MB)
@  2625s  (total 10 workers using 11718 MB)
@  2636s  (total 10 workers using 11780 MB)
@  2648s  (total 10 workers using 11791 MB)
@  2659s  (total 10 workers using 11791 MB)
@  2670s  (total 10 workers using 11791 MB)
@  2681s  (total 10 workers using 11791 MB)
@  2692s  (total 10 workers using 11819 MB)
@  2703s  (total 10 workers using 11863 MB)
@  2714s  (total 10 workers using 11836 MB)
@  2725s  (total 10 workers using 12343 MB)
@  2737s  (total 10 workers using 12331 MB)
@  2748s  (total 10 workers using 12347 MB)
@  2759s  (total 10 workers using 12346 MB)
@  2770s  (total 10 workers using 12378 MB)
@  2781s  (total 10 workers using 12359 MB)
@  2792s  (total 10 workers using 12363 MB)
@  2803s  (total 10 workers using 12385 MB)
@  2814s  (total 10 workers using 12364 MB)
@  2826s  (total 10 workers using 12106 MB)
@  2837s  (total 10 workers using 12174 MB)
@  2848s  (total 10 workers using 12099 MB)
@  2859s  (total 10 workers using 12099 MB)
@  2870s  (total 10 workers using 12150 MB)
@  2881s  (total 10 workers using 12164 MB)
@  2892s  (total 10 workers using 12166 MB)
@  2903s  (total 10 workers using 12151 MB)
@  2915s  (total 10 workers using 12151 MB)
@  2926s  (total 10 workers using 12151 MB)
@  2937s  (total 10 workers using 12151 MB)
@  2948s  (total 10 workers using 12151 MB)
@  2959s  (total 10 workers using 12671 MB)
@  2970s  (total 10 workers using 12671 MB)
@  2981s  (total 10 workers using 12671 MB)
@  2992s  (total 10 workers using 12680 MB)
@  3004s  (total 10 workers using 12636 MB)
@  3015s  (total 10 workers using 12632 MB)
@  3026s  (total 10 workers using 12635 MB)
@  3037s  (total 10 workers using 12632 MB)
@  3048s  (total 10 workers using 12633 MB)
@  3059s  (total 10 workers using 12596 MB)
@  3070s  (total 10 workers using 12779 MB)
@  3081s  (total 10 workers using 12772 MB)
@  3093s  (total 10 workers using 12772 MB)
@  3104s  (total 10 workers using 12772 MB)
@  3115s  (total 10 workers using 12600 MB)
@  3126s  (total 10 workers using 12643 MB)
@  3137s  (total 10 workers using 12332 MB)
@  3148s  (total 10 workers using 12332 MB)
@  3159s  (total 10 workers using 12332 MB)
@  3170s  (total 10 workers using 12376 MB)
@  3182s  (total 10 workers using 12315 MB)
@  3193s  (total 10 workers using 12305 MB)
@  3204s  (total 10 workers using 12311 MB)
@  3215s  (total 10 workers using 12311 MB)
@  3226s  (total 10 workers using 12311 MB)
@  3237s  (total 10 workers using 12311 MB)
@  3248s  (total 10 workers using 12311 MB)
@  3259s  (total 10 workers using 12311 MB)
@  3270s  (total 10 workers using 12817 MB)
@  3281s  (total 10 workers using 12819 MB)
@  3293s  (total 10 workers using 12819 MB)
@  3304s  (total 10 workers using 12819 MB)
@  3315s  (total 10 workers using 12828 MB)
@  3326s  (total 10 workers using 12838 MB)
@  3337s  (total 10 workers using 12793 MB)
@  3348s  (total 10 workers using 12789 MB)
@  3360s  (total 10 workers using 12790 MB)
@  3370s  (total 10 workers using 12793 MB)
@  3382s  (total 10 workers using 12790 MB)
@  3393s  (total 10 workers using 12876 MB)
@  3404s  (total 10 workers using 12806 MB)
@  3415s  (total 10 workers using 12806 MB)
@  3426s  (total 10 workers using 12803 MB)
@  3437s  (total 10 workers using 12808 MB)
@  3449s  (total 10 workers using 12808 MB)
@  3460s  (total 10 workers using 12808 MB)
@  3471s  (total 10 workers using 12803 MB)
@  3482s  (total 10 workers using 12804 MB)
@  3493s  (total 10 workers using 12315 MB)
@  3504s  (total 10 workers using 12479 MB)
@  3515s  (total 10 workers using 12479 MB)
@  3526s  (total 10 workers using 12479 MB)
@  3538s  (total 10 workers using 12479 MB)
@  3549s  (total 10 workers using 12479 MB)
@  3560s  (total 10 workers using 12479 MB)
@  3571s  (total 10 workers using 12479 MB)
@  3573s  (stopping all workers)
@  3573s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3573s  (worker 2 finished with result unknown) python3 avr.py
@  3573s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3573s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3573s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3573s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3573s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3573s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3573s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3574s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3574s  (copied results from worker 0 in /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_arbitrated_top_n3_w128_d128_e0)
@  3574s  [0;30;47m(proof race finished with answer unknown in 3573.66 seconds)[m
