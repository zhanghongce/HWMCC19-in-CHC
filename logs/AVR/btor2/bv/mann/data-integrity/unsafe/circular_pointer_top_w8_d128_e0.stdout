AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_circular_pointer_top_w8_d128_e0)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 155459)
@     0s  (started worker 1 with pid 155460)
@     0s  (started worker 2 with pid 155461)
@     0s  (started worker 3 with pid 155462)
@     0s  (started worker 4 with pid 155463)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 155577)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 204 MB)
@     2s  (started worker 6 with pid 155627)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 266 MB)
@     3s  (started worker 7 with pid 155672)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 328 MB)
@     5s  (started worker 8 with pid 155750)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 432 MB)
@     9s  (started worker 9 with pid 155830)
@     9s  (spawned 1 workers)
@     9s  (total 10 workers using 542 MB)
@    13s  (started worker 10 with pid 155888)
@    13s  (spawned 1 workers)
@    13s  (total 11 workers using 688 MB)
@    25s  (total 11 workers using 1005 MB)
@    41s  (total 11 workers using 1202 MB)
@    58s  (total 11 workers using 1411 MB)
@    72s  (total 11 workers using 1645 MB)
@    86s  (total 11 workers using 1822 MB)
@   102s  (total 11 workers using 1961 MB)
@   115s  (total 11 workers using 2059 MB)
@   130s  (total 11 workers using 2254 MB)
@   143s  (total 11 workers using 2495 MB)
@   158s  (total 11 workers using 2661 MB)
@   171s  (total 11 workers using 2797 MB)
@   185s  (total 11 workers using 2838 MB)
@   199s  (total 11 workers using 2910 MB)
@   213s  (total 11 workers using 3091 MB)
@   226s  (total 11 workers using 3189 MB)
@   240s  (total 11 workers using 3358 MB)
@   254s  (total 11 workers using 3474 MB)
@   268s  (total 11 workers using 3528 MB)
@   281s  (total 11 workers using 3637 MB)
@   296s  (total 11 workers using 3700 MB)
@   309s  (total 11 workers using 3779 MB)
@   323s  (total 11 workers using 3888 MB)
@   337s  (total 11 workers using 3915 MB)
@   351s  (total 11 workers using 3979 MB)
@   364s  (total 11 workers using 4017 MB)
@   379s  (total 11 workers using 4070 MB)
@   392s  (total 11 workers using 4124 MB)
@   406s  (total 11 workers using 4262 MB)
@   419s  (total 11 workers using 4326 MB)
@   433s  (total 11 workers using 4532 MB)
@   447s  (total 11 workers using 4574 MB)
@   461s  (total 11 workers using 4754 MB)
@   474s  (total 11 workers using 4771 MB)
@   489s  (total 11 workers using 4804 MB)
@   502s  (total 11 workers using 4831 MB)
@   516s  (total 11 workers using 4868 MB)
@   529s  (total 11 workers using 4960 MB)
@   543s  (total 11 workers using 5031 MB)
@   557s  (total 11 workers using 5107 MB)
@   571s  (total 11 workers using 5165 MB)
@   584s  (total 11 workers using 5273 MB)
@   598s  (total 11 workers using 5308 MB)
@   611s  (total 11 workers using 5294 MB)
@   625s  (total 11 workers using 5482 MB)
@   638s  (total 11 workers using 5511 MB)
@   652s  (total 11 workers using 5535 MB)
@   665s  (total 11 workers using 5582 MB)
@   679s  (total 11 workers using 5645 MB)
@   693s  (total 11 workers using 5701 MB)
@   707s  (total 11 workers using 5817 MB)
@   720s  (total 11 workers using 5891 MB)
@   734s  (total 11 workers using 5935 MB)
@   748s  (total 11 workers using 5964 MB)
@   762s  (total 11 workers using 6063 MB)
@   775s  (total 11 workers using 6195 MB)
@   789s  (total 11 workers using 6211 MB)
@   802s  (total 11 workers using 6227 MB)
@   817s  (total 11 workers using 6244 MB)
@   830s  (total 11 workers using 6306 MB)
@   844s  (total 11 workers using 6339 MB)
@   858s  (total 11 workers using 6479 MB)
@   872s  (total 11 workers using 6617 MB)
@   885s  (total 11 workers using 6759 MB)
@   900s  (total 11 workers using 6862 MB)
@   913s  (total 11 workers using 6815 MB)
@   927s  (total 11 workers using 6862 MB)
@   940s  (total 11 workers using 6899 MB)
@   955s  (total 11 workers using 7028 MB)
@   968s  (total 11 workers using 7032 MB)
@   982s  (total 11 workers using 7045 MB)
@   995s  (total 11 workers using 7066 MB)
@  1009s  (total 11 workers using 7106 MB)
@  1023s  (total 11 workers using 7122 MB)
@  1037s  (total 11 workers using 7131 MB)
@  1050s  (total 11 workers using 7146 MB)
@  1064s  (total 11 workers using 7226 MB)
@  1077s  (total 11 workers using 7361 MB)
@  1091s  (total 11 workers using 7381 MB)
@  1105s  (total 11 workers using 7412 MB)
@  1119s  (total 11 workers using 7465 MB)
@  1132s  (total 11 workers using 7533 MB)
@  1146s  (total 11 workers using 7477 MB)
@  1159s  (total 11 workers using 7468 MB)
@  1171s  (total 11 workers using 7507 MB)
@  1182s  (total 11 workers using 7509 MB)
@  1194s  (total 11 workers using 7574 MB)
@  1205s  (total 11 workers using 7807 MB)
@  1217s  (total 11 workers using 7897 MB)
@  1228s  (total 11 workers using 7861 MB)
@  1240s  (total 11 workers using 7882 MB)
@  1251s  (total 11 workers using 7904 MB)
@  1263s  (total 11 workers using 7925 MB)
@  1274s  (total 11 workers using 8062 MB)
@  1286s  (total 11 workers using 8011 MB)
@  1297s  (total 11 workers using 8085 MB)
@  1309s  (total 11 workers using 8125 MB)
@  1320s  (total 11 workers using 8138 MB)
@  1332s  (total 11 workers using 8178 MB)
@  1337s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  1343s  (total 10 workers using 6825 MB)
@  1354s  (total 10 workers using 6834 MB)
@  1365s  (total 10 workers using 6837 MB)
@  1377s  (total 10 workers using 6806 MB)
@  1388s  (total 10 workers using 6827 MB)
@  1400s  (total 10 workers using 6834 MB)
@  1411s  (total 10 workers using 6851 MB)
@  1422s  (total 10 workers using 6874 MB)
@  1433s  (total 10 workers using 6896 MB)
@  1445s  (total 10 workers using 6902 MB)
@  1456s  (total 10 workers using 6941 MB)
@  1467s  (total 10 workers using 7027 MB)
@  1479s  (total 10 workers using 6988 MB)
@  1490s  (total 10 workers using 7015 MB)
@  1501s  (total 10 workers using 7041 MB)
@  1513s  (total 10 workers using 7117 MB)
@  1524s  (total 10 workers using 7152 MB)
@  1535s  (total 10 workers using 7152 MB)
@  1546s  (total 10 workers using 7131 MB)
@  1558s  (total 10 workers using 7138 MB)
@  1569s  (total 10 workers using 7146 MB)
@  1580s  (total 10 workers using 7170 MB)
@  1592s  (total 10 workers using 7062 MB)
@  1603s  (total 10 workers using 7079 MB)
@  1614s  (total 10 workers using 7131 MB)
@  1626s  (total 10 workers using 7163 MB)
@  1637s  (total 10 workers using 7156 MB)
@  1648s  (total 10 workers using 7155 MB)
@  1659s  (total 10 workers using 7167 MB)
@  1671s  (total 10 workers using 7178 MB)
@  1682s  (total 10 workers using 7178 MB)
@  1693s  (total 10 workers using 7183 MB)
@  1705s  (total 10 workers using 7233 MB)
@  1716s  (total 10 workers using 7169 MB)
@  1727s  (total 10 workers using 7249 MB)
@  1739s  (total 10 workers using 7264 MB)
@  1750s  (total 10 workers using 7278 MB)
@  1761s  (total 10 workers using 7305 MB)
@  1772s  (total 10 workers using 7378 MB)
@  1784s  (total 10 workers using 7360 MB)
@  1795s  (total 10 workers using 7389 MB)
@  1807s  (total 10 workers using 7466 MB)
@  1818s  (total 10 workers using 7527 MB)
@  1829s  (total 10 workers using 7543 MB)
@  1840s  (total 10 workers using 7567 MB)
@  1852s  (total 10 workers using 7524 MB)
@  1863s  (total 10 workers using 7599 MB)
@  1874s  (total 10 workers using 7532 MB)
@  1885s  (total 10 workers using 7560 MB)
@  1897s  (total 10 workers using 7543 MB)
@  1908s  (total 10 workers using 7609 MB)
@  1920s  (total 10 workers using 7611 MB)
@  1931s  (total 10 workers using 7663 MB)
@  1942s  (total 10 workers using 7725 MB)
@  1953s  (total 10 workers using 7635 MB)
@  1965s  (total 10 workers using 7635 MB)
@  1976s  (total 10 workers using 7589 MB)
@  1987s  (total 10 workers using 7585 MB)
@  1998s  (total 10 workers using 7590 MB)
@  2010s  (total 10 workers using 7612 MB)
@  2021s  (total 10 workers using 7634 MB)
@  2033s  (total 10 workers using 7634 MB)
@  2044s  (total 10 workers using 7634 MB)
@  2055s  (total 10 workers using 7634 MB)
@  2066s  (total 10 workers using 7597 MB)
@  2078s  (total 10 workers using 7623 MB)
@  2089s  (total 10 workers using 7631 MB)
@  2100s  (total 10 workers using 7636 MB)
@  2111s  (total 10 workers using 7636 MB)
@  2123s  (total 10 workers using 7658 MB)
@  2134s  (total 10 workers using 7658 MB)
@  2146s  (total 10 workers using 7658 MB)
@  2157s  (total 10 workers using 7659 MB)
@  2168s  (total 10 workers using 7659 MB)
@  2179s  (total 10 workers using 7586 MB)
@  2191s  (total 10 workers using 7590 MB)
@  2202s  (total 10 workers using 7595 MB)
@  2213s  (total 10 workers using 7615 MB)
@  2224s  (total 10 workers using 7619 MB)
@  2236s  (total 10 workers using 7620 MB)
@  2247s  (total 10 workers using 7641 MB)
@  2259s  (total 10 workers using 7642 MB)
@  2270s  (total 10 workers using 7648 MB)
@  2281s  (total 10 workers using 7673 MB)
@  2292s  (total 10 workers using 7679 MB)
@  2304s  (total 10 workers using 7679 MB)
@  2315s  (total 10 workers using 7679 MB)
@  2326s  (total 10 workers using 7679 MB)
@  2337s  (total 10 workers using 7679 MB)
@  2349s  (total 10 workers using 7681 MB)
@  2360s  (total 10 workers using 7681 MB)
@  2372s  (total 10 workers using 7681 MB)
@  2383s  (total 10 workers using 7681 MB)
@  2394s  (total 10 workers using 7687 MB)
@  2405s  (total 10 workers using 7697 MB)
@  2417s  (total 10 workers using 7698 MB)
@  2428s  (total 10 workers using 7698 MB)
@  2439s  (total 10 workers using 7707 MB)
@  2450s  (total 10 workers using 7704 MB)
@  2462s  (total 10 workers using 7706 MB)
@  2473s  (total 10 workers using 7707 MB)
@  2484s  (total 10 workers using 7707 MB)
@  2496s  (total 10 workers using 7707 MB)
@  2507s  (total 10 workers using 7707 MB)
@  2518s  (total 10 workers using 7706 MB)
@  2530s  (total 10 workers using 7706 MB)
@  2541s  (total 10 workers using 7670 MB)
@  2552s  (total 10 workers using 7670 MB)
@  2563s  (total 10 workers using 7670 MB)
@  2575s  (total 10 workers using 7701 MB)
@  2586s  (total 10 workers using 7702 MB)
@  2598s  (total 10 workers using 7701 MB)
@  2609s  (total 10 workers using 7721 MB)
@  2620s  (total 10 workers using 7702 MB)
@  2631s  (total 10 workers using 7702 MB)
@  2643s  (total 10 workers using 7703 MB)
@  2654s  (total 10 workers using 7703 MB)
@  2665s  (total 10 workers using 7708 MB)
@  2676s  (total 10 workers using 7709 MB)
@  2688s  (total 10 workers using 7705 MB)
@  2699s  (total 10 workers using 7705 MB)
@  2711s  (total 10 workers using 7712 MB)
@  2722s  (total 10 workers using 7745 MB)
@  2733s  (total 10 workers using 7746 MB)
@  2744s  (total 10 workers using 7746 MB)
@  2756s  (total 10 workers using 7705 MB)
@  2767s  (total 10 workers using 7713 MB)
@  2778s  (total 10 workers using 7748 MB)
@  2789s  (total 10 workers using 7748 MB)
@  2801s  (total 10 workers using 7745 MB)
@  2812s  (total 10 workers using 7710 MB)
@  2824s  (total 10 workers using 7718 MB)
@  2835s  (total 10 workers using 7710 MB)
@  2846s  (total 10 workers using 7718 MB)
@  2857s  (total 10 workers using 7718 MB)
@  2869s  (total 10 workers using 7713 MB)
@  2880s  (total 10 workers using 7721 MB)
@  2891s  (total 10 workers using 7722 MB)
@  2902s  (total 10 workers using 7712 MB)
@  2914s  (total 10 workers using 7721 MB)
@  2925s  (total 10 workers using 7721 MB)
@  2936s  (total 10 workers using 7721 MB)
@  2948s  (total 10 workers using 7713 MB)
@  2959s  (total 10 workers using 7722 MB)
@  2970s  (total 10 workers using 7713 MB)
@  2982s  (total 10 workers using 7713 MB)
@  2993s  (total 10 workers using 7722 MB)
@  3004s  (total 10 workers using 7713 MB)
@  3015s  (total 10 workers using 7722 MB)
@  3027s  (total 10 workers using 7722 MB)
@  3038s  (total 10 workers using 7722 MB)
@  3049s  (total 10 workers using 7712 MB)
@  3061s  (total 10 workers using 7711 MB)
@  3072s  (total 10 workers using 7714 MB)
@  3083s  (total 10 workers using 7714 MB)
@  3095s  (total 10 workers using 7741 MB)
@  3106s  (total 10 workers using 7708 MB)
@  3117s  (total 10 workers using 7708 MB)
@  3128s  (total 10 workers using 7703 MB)
@  3140s  (total 10 workers using 7703 MB)
@  3151s  (total 10 workers using 7703 MB)
@  3163s  (total 10 workers using 7703 MB)
@  3174s  (total 10 workers using 7718 MB)
@  3185s  (total 10 workers using 7718 MB)
@  3196s  (total 10 workers using 7757 MB)
@  3208s  (total 10 workers using 7757 MB)
@  3219s  (total 10 workers using 7757 MB)
@  3230s  (total 10 workers using 7718 MB)
@  3241s  (total 10 workers using 7718 MB)
@  3253s  (total 10 workers using 7719 MB)
@  3264s  (total 10 workers using 7762 MB)
@  3276s  (total 10 workers using 7762 MB)
@  3287s  (total 10 workers using 7762 MB)
@  3298s  (total 10 workers using 7762 MB)
@  3309s  (total 10 workers using 7722 MB)
@  3321s  (total 10 workers using 7722 MB)
@  3332s  (total 10 workers using 7722 MB)
@  3343s  (total 10 workers using 7722 MB)
@  3355s  (total 10 workers using 7767 MB)
@  3366s  (total 10 workers using 7767 MB)
@  3377s  (total 10 workers using 7767 MB)
@  3389s  (total 10 workers using 7724 MB)
@  3400s  (total 10 workers using 7724 MB)
@  3411s  (total 10 workers using 7763 MB)
@  3422s  (total 10 workers using 7724 MB)
@  3434s  (total 10 workers using 7724 MB)
@  3445s  (total 10 workers using 7731 MB)
@  3456s  (total 10 workers using 7732 MB)
@  3468s  (total 10 workers using 7732 MB)
@  3479s  (total 10 workers using 7759 MB)
@  3490s  (total 10 workers using 7759 MB)
@  3502s  (total 10 workers using 7759 MB)
@  3513s  (total 10 workers using 7759 MB)
@  3524s  (total 10 workers using 7712 MB)
@  3535s  (total 10 workers using 7712 MB)
@  3547s  (total 10 workers using 7716 MB)
@  3558s  (total 10 workers using 7719 MB)
@  3569s  (total 10 workers using 7691 MB)
@  3574s  (stopping all workers)
@  3574s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3574s  (worker 2 finished with result unknown) python3 avr.py
@  3574s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3574s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3574s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@  3574s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3574s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3574s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3574s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3574s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3574s  (copied results from worker 0 in /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_circular_pointer_top_w8_d128_e0)
@  3574s  [0;30;47m(proof race finished with answer unknown in 3574.30 seconds)[m
