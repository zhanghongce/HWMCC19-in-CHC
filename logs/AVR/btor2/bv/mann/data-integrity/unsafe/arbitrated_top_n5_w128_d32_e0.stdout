	(output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_arbitrated_top_n5_w128_d32_e0/work_w1)
	(frontend: btor2)
	(property: all (1 assertions))
	(1 / 20738 flops initialized)
	(abstraction: sa+uf)
	(bmc: safe till step 0)
	(bmc: safe till step 10)
	(bmc: safe till step 20)
	(bmc: safe till step 30)
	(bmc: found cex at step 34)
   0	: 0	: 0 s: 0    844s                  

AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_arbitrated_top_n5_w128_d32_e0)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 25955)
@     0s  (started worker 1 with pid 25956)
@     0s  (started worker 2 with pid 25957)
@     0s  (started worker 3 with pid 25958)
@     0s  (started worker 4 with pid 25959)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 26085)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 388 MB)
@     2s  (started worker 6 with pid 26125)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 598 MB)
@     3s  (started worker 7 with pid 26169)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 712 MB)
@     5s  (started worker 8 with pid 26237)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 1042 MB)
@     9s  (started worker 9 with pid 26296)
@     9s  (spawned 1 workers)
@     9s  (total 10 workers using 1481 MB)
@    12s  (started worker 10 with pid 26360)
@    12s  (spawned 1 workers)
@    12s  (total 11 workers using 1584 MB)
@    24s  (total 11 workers using 2892 MB)
@    40s  (total 11 workers using 3313 MB)
@    56s  (total 11 workers using 3444 MB)
@    70s  (total 11 workers using 3577 MB)
@    84s  (total 11 workers using 3611 MB)
@    99s  (total 11 workers using 3733 MB)
@   112s  (total 11 workers using 3779 MB)
@   127s  (total 11 workers using 3910 MB)
@   140s  (total 11 workers using 3890 MB)
@   154s  (total 11 workers using 4029 MB)
@   167s  (total 11 workers using 4251 MB)
@   182s  (total 11 workers using 4289 MB)
@   195s  (total 11 workers using 4246 MB)
@   210s  (total 11 workers using 4295 MB)
@   223s  (total 11 workers using 4461 MB)
@   237s  (total 11 workers using 4476 MB)
@   251s  (total 11 workers using 4481 MB)
@   265s  (total 11 workers using 4515 MB)
@   278s  (total 11 workers using 4617 MB)
@   293s  (total 11 workers using 4752 MB)
@   306s  (total 11 workers using 4812 MB)
@   320s  (total 11 workers using 4838 MB)
@   334s  (total 11 workers using 4861 MB)
@   348s  (total 11 workers using 4885 MB)
@   361s  (total 11 workers using 4981 MB)
@   376s  (total 11 workers using 5080 MB)
@   389s  (total 11 workers using 5229 MB)
@   403s  (total 11 workers using 5503 MB)
@   416s  (total 11 workers using 5530 MB)
@   430s  (total 11 workers using 5657 MB)
@   444s  (total 11 workers using 5754 MB)
@   458s  (total 11 workers using 5798 MB)
@   471s  (total 11 workers using 5858 MB)
@   485s  (total 11 workers using 5861 MB)
@   498s  (total 11 workers using 5907 MB)
@   512s  (total 11 workers using 5979 MB)
@   526s  (total 11 workers using 6064 MB)
@   540s  (total 11 workers using 6088 MB)
@   553s  (total 11 workers using 6047 MB)
@   567s  (total 11 workers using 6139 MB)
@   580s  (total 11 workers using 6207 MB)
@   594s  (total 11 workers using 6202 MB)
@   608s  (total 11 workers using 6370 MB)
@   622s  (total 11 workers using 6495 MB)
@   635s  (total 11 workers using 6680 MB)
@   649s  (total 11 workers using 6774 MB)
@   662s  (total 11 workers using 6770 MB)
@   677s  (total 11 workers using 6771 MB)
@   690s  (total 11 workers using 6819 MB)
@   704s  (total 11 workers using 6844 MB)
@   717s  (total 11 workers using 6936 MB)
@   732s  (total 11 workers using 7016 MB)
@   745s  (total 11 workers using 7063 MB)
@   759s  (total 11 workers using 7197 MB)
@   772s  (total 11 workers using 7207 MB)
@   787s  (total 11 workers using 7224 MB)
@   800s  (total 11 workers using 7494 MB)
@   814s  (total 11 workers using 7434 MB)
@   827s  (total 11 workers using 7470 MB)
@   842s  (total 11 workers using 7423 MB)
@   855s  (total 11 workers using 7437 MB)
@   869s  (total 11 workers using 7400 MB)
@   882s  (total 11 workers using 7459 MB)
@   897s  (total 11 workers using 7528 MB)
@   910s  (total 11 workers using 7582 MB)
@   924s  (total 11 workers using 7582 MB)
@   937s  (total 11 workers using 7594 MB)
@   951s  (total 11 workers using 7752 MB)
@   964s  (total 11 workers using 7770 MB)
@   979s  (total 11 workers using 7711 MB)
@   992s  (total 11 workers using 7722 MB)
@  1006s  (total 11 workers using 7902 MB)
@  1019s  (total 11 workers using 8000 MB)
@  1033s  (total 11 workers using 7952 MB)
@  1047s  (total 11 workers using 8027 MB)
@  1061s  (total 11 workers using 8075 MB)
@  1074s  (total 11 workers using 8117 MB)
@  1088s  (total 11 workers using 8134 MB)
@  1102s  (total 11 workers using 8201 MB)
@  1116s  (total 11 workers using 8258 MB)
@  1129s  (total 11 workers using 8269 MB)
@  1143s  (total 11 workers using 8339 MB)
@  1155s  (worker 1 finished with result unsafe) python3 avr.py -b bin_bt_cadical -s --bmc
@  1155s  (worker 1 output)
@  1155s  (stopping all workers)
@  1155s  (copied results from worker 1 in /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_arbitrated_top_n5_w128_d32_e0)
@  1155s  [0;30;47m(proof race finished with answer unsafe in 1155.33 seconds)[m
