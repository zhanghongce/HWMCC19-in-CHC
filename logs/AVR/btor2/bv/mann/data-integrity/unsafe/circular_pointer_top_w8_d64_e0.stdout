AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_circular_pointer_top_w8_d64_e0)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 132404)
@     0s  (started worker 1 with pid 132405)
@     0s  (started worker 2 with pid 132406)
@     0s  (started worker 3 with pid 132407)
@     0s  (started worker 4 with pid 132408)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 132534)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 144 MB)
@     2s  (started worker 6 with pid 132574)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 190 MB)
@     3s  (started worker 7 with pid 132621)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 251 MB)
@     5s  (started worker 8 with pid 132676)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 336 MB)
@     9s  (started worker 9 with pid 132743)
@     9s  (spawned 1 workers)
@     9s  (total 10 workers using 425 MB)
@    12s  (started worker 10 with pid 132797)
@    12s  (spawned 1 workers)
@    12s  (total 11 workers using 507 MB)
@    24s  (total 11 workers using 904 MB)
@    40s  (total 11 workers using 1183 MB)
@    42s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@    55s  (total 10 workers using 1320 MB)
@    69s  (total 10 workers using 1567 MB)
@    83s  (total 10 workers using 1721 MB)
@    97s  (total 10 workers using 1942 MB)
@   110s  (total 10 workers using 2070 MB)
@   124s  (total 10 workers using 2151 MB)
@   136s  (total 10 workers using 2279 MB)
@   150s  (total 10 workers using 2428 MB)
@   163s  (total 10 workers using 2520 MB)
@   176s  (total 10 workers using 2571 MB)
@   189s  (total 10 workers using 2755 MB)
@   203s  (total 10 workers using 2819 MB)
@   216s  (total 10 workers using 2975 MB)
@   230s  (total 10 workers using 3097 MB)
@   242s  (total 10 workers using 3159 MB)
@   256s  (total 10 workers using 3369 MB)
@   269s  (total 10 workers using 3369 MB)
@   282s  (total 10 workers using 3358 MB)
@   295s  (total 10 workers using 3416 MB)
@   308s  (total 10 workers using 3602 MB)
@   321s  (total 10 workers using 3671 MB)
@   335s  (total 10 workers using 3745 MB)
@   348s  (total 10 workers using 3841 MB)
@   361s  (total 10 workers using 3937 MB)
@   374s  (total 10 workers using 4031 MB)
@   388s  (total 10 workers using 4181 MB)
@   400s  (total 10 workers using 4182 MB)
@   414s  (total 10 workers using 4311 MB)
@   426s  (total 10 workers using 4371 MB)
@   440s  (total 10 workers using 4429 MB)
@   452s  (total 10 workers using 4605 MB)
@   466s  (total 10 workers using 4780 MB)
@   479s  (total 10 workers using 4860 MB)
@   492s  (total 10 workers using 4929 MB)
@   505s  (total 10 workers using 5048 MB)
@   519s  (total 10 workers using 5012 MB)
@   531s  (total 10 workers using 5045 MB)
@   545s  (total 10 workers using 5093 MB)
@   558s  (total 10 workers using 5173 MB)
@   571s  (total 10 workers using 5279 MB)
@   584s  (total 10 workers using 5384 MB)
@   597s  (total 10 workers using 5430 MB)
@   610s  (total 10 workers using 5570 MB)
@   623s  (total 10 workers using 5591 MB)
@   636s  (total 10 workers using 5736 MB)
@   650s  (total 10 workers using 5836 MB)
@   663s  (total 10 workers using 5900 MB)
@   676s  (total 10 workers using 5860 MB)
@   689s  (total 10 workers using 6090 MB)
@   702s  (total 10 workers using 6047 MB)
@   715s  (total 10 workers using 6125 MB)
@   729s  (total 10 workers using 6164 MB)
@   741s  (total 10 workers using 6204 MB)
@   755s  (total 10 workers using 6566 MB)
@   768s  (total 10 workers using 6613 MB)
@   781s  (total 10 workers using 6712 MB)
@   794s  (total 10 workers using 6857 MB)
@   807s  (total 10 workers using 6885 MB)
@   820s  (total 10 workers using 6848 MB)
@   833s  (total 10 workers using 7046 MB)
@   844s  (total 10 workers using 7126 MB)
@   856s  (total 10 workers using 7172 MB)
@   867s  (total 10 workers using 7210 MB)
@   878s  (total 10 workers using 7255 MB)
@   889s  (total 10 workers using 7236 MB)
@   901s  (total 10 workers using 7261 MB)
@   912s  (total 10 workers using 7304 MB)
@   923s  (total 10 workers using 7447 MB)
@   934s  (total 10 workers using 7431 MB)
@   945s  (total 10 workers using 7569 MB)
@   956s  (total 10 workers using 7494 MB)
@   967s  (total 10 workers using 7616 MB)
@   978s  (total 10 workers using 7917 MB)
@   990s  (total 10 workers using 7936 MB)
@  1001s  (total 10 workers using 8099 MB)
@  1012s  (total 10 workers using 8228 MB)
@  1023s  (total 10 workers using 8250 MB)
@  1034s  (total 10 workers using 8176 MB)
@  1045s  (total 10 workers using 8179 MB)
@  1056s  (total 10 workers using 8200 MB)
@  1067s  (total 10 workers using 8333 MB)
@  1079s  (total 10 workers using 8344 MB)
@  1090s  (total 10 workers using 8256 MB)
@  1101s  (total 10 workers using 8395 MB)
@  1112s  (total 10 workers using 8548 MB)
@  1123s  (total 10 workers using 8584 MB)
@  1134s  (total 10 workers using 8605 MB)
@  1146s  (total 10 workers using 8638 MB)
@  1157s  (total 10 workers using 8653 MB)
@  1168s  (total 10 workers using 8670 MB)
@  1179s  (total 10 workers using 8698 MB)
@  1190s  (total 10 workers using 8729 MB)
@  1201s  (total 10 workers using 8712 MB)
@  1212s  (total 10 workers using 8767 MB)
@  1223s  (total 10 workers using 8927 MB)
@  1235s  (total 10 workers using 8970 MB)
@  1246s  (total 10 workers using 8993 MB)
@  1257s  (total 10 workers using 8983 MB)
@  1268s  (total 10 workers using 9033 MB)
@  1279s  (total 10 workers using 9108 MB)
@  1290s  (total 10 workers using 9138 MB)
@  1302s  (total 10 workers using 9117 MB)
@  1313s  (total 10 workers using 9148 MB)
@  1324s  (total 10 workers using 9190 MB)
@  1335s  (total 10 workers using 9192 MB)
@  1346s  (total 10 workers using 9198 MB)
@  1357s  (total 10 workers using 9197 MB)
@  1368s  (total 10 workers using 9205 MB)
@  1379s  (total 10 workers using 9198 MB)
@  1391s  (total 10 workers using 9162 MB)
@  1402s  (total 10 workers using 9216 MB)
@  1413s  (total 10 workers using 9352 MB)
@  1424s  (total 10 workers using 9353 MB)
@  1435s  (total 10 workers using 9348 MB)
@  1446s  (total 10 workers using 9383 MB)
@  1458s  (total 10 workers using 9392 MB)
@  1469s  (total 10 workers using 9486 MB)
@  1480s  (total 10 workers using 9532 MB)
@  1491s  (total 10 workers using 9530 MB)
@  1502s  (total 10 workers using 9547 MB)
@  1513s  (total 10 workers using 9554 MB)
@  1524s  (total 10 workers using 9554 MB)
@  1535s  (total 10 workers using 9637 MB)
@  1547s  (total 10 workers using 9637 MB)
@  1558s  (total 10 workers using 9637 MB)
@  1569s  (total 10 workers using 9637 MB)
@  1580s  (total 10 workers using 9651 MB)
@  1591s  (total 10 workers using 9651 MB)
@  1602s  (total 10 workers using 9649 MB)
@  1614s  (total 10 workers using 9672 MB)
@  1624s  (total 10 workers using 9675 MB)
@  1636s  (total 10 workers using 9743 MB)
@  1647s  (total 10 workers using 9764 MB)
@  1658s  (total 10 workers using 9803 MB)
@  1669s  (total 10 workers using 9779 MB)
@  1680s  (total 10 workers using 9779 MB)
@  1691s  (total 10 workers using 9782 MB)
@  1703s  (total 10 workers using 9747 MB)
@  1714s  (total 10 workers using 9760 MB)
@  1725s  (total 10 workers using 9772 MB)
@  1736s  (total 10 workers using 9774 MB)
@  1747s  (total 10 workers using 9774 MB)
@  1758s  (total 10 workers using 9774 MB)
@  1769s  (total 10 workers using 9775 MB)
@  1780s  (total 10 workers using 9776 MB)
@  1792s  (total 10 workers using 9780 MB)
@  1803s  (total 10 workers using 9827 MB)
@  1814s  (total 10 workers using 9830 MB)
@  1825s  (total 10 workers using 9857 MB)
@  1836s  (total 10 workers using 9863 MB)
@  1847s  (total 10 workers using 9863 MB)
@  1859s  (total 10 workers using 9864 MB)
@  1869s  (total 10 workers using 9864 MB)
@  1881s  (total 10 workers using 9820 MB)
@  1892s  (total 10 workers using 9821 MB)
@  1903s  (total 10 workers using 9823 MB)
@  1914s  (total 10 workers using 9823 MB)
@  1925s  (total 10 workers using 9820 MB)
@  1936s  (total 10 workers using 9820 MB)
@  1948s  (total 10 workers using 9852 MB)
@  1959s  (total 10 workers using 9855 MB)
@  1970s  (total 10 workers using 9858 MB)
@  1981s  (total 10 workers using 9858 MB)
@  1992s  (total 10 workers using 9858 MB)
@  2003s  (total 10 workers using 9858 MB)
@  2014s  (total 10 workers using 9854 MB)
@  2025s  (total 10 workers using 9873 MB)
@  2037s  (total 10 workers using 9879 MB)
@  2048s  (total 10 workers using 9879 MB)
@  2059s  (total 10 workers using 9879 MB)
@  2070s  (total 10 workers using 9825 MB)
@  2081s  (total 10 workers using 9847 MB)
@  2092s  (total 10 workers using 9847 MB)
@  2103s  (total 10 workers using 9833 MB)
@  2114s  (total 10 workers using 9832 MB)
@  2126s  (total 10 workers using 9835 MB)
@  2137s  (total 10 workers using 9835 MB)
@  2148s  (total 10 workers using 9837 MB)
@  2159s  (total 10 workers using 9838 MB)
@  2170s  (total 10 workers using 9851 MB)
@  2181s  (total 10 workers using 9851 MB)
@  2192s  (total 10 workers using 9851 MB)
@  2203s  (total 10 workers using 9851 MB)
@  2215s  (total 10 workers using 9851 MB)
@  2226s  (total 10 workers using 9884 MB)
@  2237s  (total 10 workers using 9884 MB)
@  2248s  (total 10 workers using 9851 MB)
@  2259s  (total 10 workers using 9851 MB)
@  2270s  (total 10 workers using 9851 MB)
@  2282s  (total 10 workers using 9802 MB)
@  2292s  (total 10 workers using 9821 MB)
@  2304s  (total 10 workers using 9829 MB)
@  2315s  (total 10 workers using 9855 MB)
@  2326s  (total 10 workers using 9855 MB)
@  2337s  (total 10 workers using 9855 MB)
@  2348s  (total 10 workers using 9856 MB)
@  2359s  (total 10 workers using 9856 MB)
@  2371s  (total 10 workers using 9856 MB)
@  2382s  (total 10 workers using 9856 MB)
@  2393s  (total 10 workers using 9858 MB)
@  2404s  (total 10 workers using 9861 MB)
@  2415s  (total 10 workers using 9861 MB)
@  2426s  (total 10 workers using 9861 MB)
@  2437s  (total 10 workers using 9859 MB)
@  2448s  (total 10 workers using 9865 MB)
@  2460s  (total 10 workers using 9865 MB)
@  2471s  (total 10 workers using 9880 MB)
@  2482s  (total 10 workers using 9881 MB)
@  2493s  (total 10 workers using 9886 MB)
@  2504s  (total 10 workers using 9879 MB)
@  2515s  (total 10 workers using 9875 MB)
@  2526s  (total 10 workers using 9889 MB)
@  2537s  (total 10 workers using 9889 MB)
@  2549s  (total 10 workers using 9896 MB)
@  2560s  (total 10 workers using 9896 MB)
@  2571s  (total 10 workers using 9895 MB)
@  2582s  (total 10 workers using 9923 MB)
@  2593s  (total 10 workers using 9932 MB)
@  2604s  (total 10 workers using 9932 MB)
@  2616s  (total 10 workers using 9868 MB)
@  2627s  (total 10 workers using 9868 MB)
@  2638s  (total 10 workers using 9901 MB)
@  2649s  (total 10 workers using 9901 MB)
@  2660s  (total 10 workers using 9892 MB)
@  2671s  (total 10 workers using 9903 MB)
@  2682s  (total 10 workers using 9903 MB)
@  2693s  (total 10 workers using 9841 MB)
@  2705s  (total 10 workers using 9848 MB)
@  2716s  (total 10 workers using 9848 MB)
@  2727s  (total 10 workers using 9869 MB)
@  2738s  (total 10 workers using 9869 MB)
@  2749s  (total 10 workers using 9869 MB)
@  2760s  (total 10 workers using 9869 MB)
@  2771s  (total 10 workers using 9874 MB)
@  2782s  (total 10 workers using 9835 MB)
@  2794s  (total 10 workers using 9858 MB)
@  2805s  (total 10 workers using 9861 MB)
@  2816s  (total 10 workers using 9866 MB)
@  2827s  (total 10 workers using 9866 MB)
@  2838s  (total 10 workers using 9874 MB)
@  2849s  (total 10 workers using 9876 MB)
@  2860s  (total 10 workers using 9877 MB)
@  2871s  (total 10 workers using 9877 MB)
@  2883s  (total 10 workers using 9877 MB)
@  2894s  (total 10 workers using 9879 MB)
@  2905s  (total 10 workers using 9879 MB)
@  2916s  (total 10 workers using 9890 MB)
@  2927s  (total 10 workers using 9890 MB)
@  2938s  (total 10 workers using 9888 MB)
@  2950s  (total 10 workers using 9888 MB)
@  2961s  (total 10 workers using 9889 MB)
@  2972s  (total 10 workers using 9889 MB)
@  2983s  (total 10 workers using 9889 MB)
@  2995s  (total 10 workers using 9889 MB)
@  3006s  (total 10 workers using 9889 MB)
@  3017s  (total 10 workers using 9889 MB)
@  3028s  (total 10 workers using 9858 MB)
@  3040s  (total 10 workers using 9858 MB)
@  3051s  (total 10 workers using 9858 MB)
@  3062s  (total 10 workers using 9861 MB)
@  3073s  (total 10 workers using 9861 MB)
@  3085s  (total 10 workers using 9864 MB)
@  3096s  (total 10 workers using 9864 MB)
@  3107s  (total 10 workers using 9866 MB)
@  3118s  (total 10 workers using 9866 MB)
@  3130s  (total 10 workers using 9867 MB)
@  3141s  (total 10 workers using 9880 MB)
@  3152s  (total 10 workers using 9880 MB)
@  3163s  (total 10 workers using 9880 MB)
@  3175s  (total 10 workers using 9900 MB)
@  3186s  (total 10 workers using 9900 MB)
@  3197s  (total 10 workers using 9890 MB)
@  3208s  (total 10 workers using 9902 MB)
@  3220s  (total 10 workers using 9902 MB)
@  3231s  (total 10 workers using 9845 MB)
@  3242s  (total 10 workers using 9849 MB)
@  3253s  (total 10 workers using 9849 MB)
@  3265s  (total 10 workers using 9849 MB)
@  3276s  (total 10 workers using 9867 MB)
@  3287s  (total 10 workers using 9865 MB)
@  3298s  (total 10 workers using 9868 MB)
@  3310s  (total 10 workers using 9862 MB)
@  3321s  (total 10 workers using 9845 MB)
@  3332s  (total 10 workers using 9901 MB)
@  3343s  (total 10 workers using 9901 MB)
@  3355s  (total 10 workers using 9904 MB)
@  3366s  (total 10 workers using 9904 MB)
@  3377s  (total 10 workers using 9906 MB)
@  3388s  (total 10 workers using 9906 MB)
@  3400s  (total 10 workers using 9906 MB)
@  3411s  (total 10 workers using 9940 MB)
@  3422s  (total 10 workers using 9941 MB)
@  3433s  (total 10 workers using 9906 MB)
@  3445s  (total 10 workers using 9945 MB)
@  3456s  (total 10 workers using 9945 MB)
@  3467s  (total 10 workers using 9931 MB)
@  3478s  (total 10 workers using 9865 MB)
@  3490s  (total 10 workers using 9865 MB)
@  3501s  (total 10 workers using 9865 MB)
@  3512s  (total 10 workers using 9865 MB)
@  3523s  (total 10 workers using 9893 MB)
@  3535s  (total 10 workers using 9893 MB)
@  3546s  (total 10 workers using 9893 MB)
@  3557s  (total 10 workers using 9933 MB)
@  3568s  (total 10 workers using 9936 MB)
@  3575s  (stopping all workers)
@  3575s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3575s  (worker 2 finished with result unknown) python3 avr.py
@  3575s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3575s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3575s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3575s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3575s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3575s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3575s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3575s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3576s  (copied results from worker 0 in /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_circular_pointer_top_w8_d64_e0)
@  3576s  [0;30;47m(proof race finished with answer unknown in 3575.56 seconds)[m
