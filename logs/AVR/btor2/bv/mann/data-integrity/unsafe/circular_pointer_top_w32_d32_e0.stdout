	(output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_circular_pointer_top_w32_d32_e0/work_w1)
	(frontend: btor2)
	(property: all (1 assertions))
	(1 / 1119 flops initialized)
	(abstraction: sa+uf)
	(bmc: safe till step 0)
	(bmc: safe till step 10)
	(bmc: safe till step 20)
	(bmc: safe till step 30)
	(bmc: found cex at step 35)
   0	: 0	: 0 s: 0    996s                  

AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_circular_pointer_top_w32_d32_e0)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 198536)
@     0s  (started worker 1 with pid 198537)
@     0s  (started worker 2 with pid 198538)
@     0s  (started worker 3 with pid 198539)
@     0s  (started worker 4 with pid 198540)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 198657)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 142 MB)
@     2s  (started worker 6 with pid 198706)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 188 MB)
@     3s  (started worker 7 with pid 198761)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 237 MB)
@     5s  (started worker 8 with pid 198814)
@     5s  (spawned 1 workers)
@     5s  (total 9 workers using 328 MB)
@     9s  (started worker 9 with pid 198909)
@     9s  (spawned 1 workers)
@     9s  (total 10 workers using 438 MB)
@    12s  (started worker 10 with pid 198977)
@    12s  (spawned 1 workers)
@    12s  (total 11 workers using 485 MB)
@    13s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@    24s  (total 10 workers using 760 MB)
@    36s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@    40s  (total 9 workers using 958 MB)
@    55s  (total 9 workers using 1131 MB)
@    68s  (total 9 workers using 1284 MB)
@    82s  (total 9 workers using 1432 MB)
@    96s  (total 9 workers using 1542 MB)
@   109s  (total 9 workers using 1690 MB)
@   122s  (total 9 workers using 1847 MB)
@   135s  (total 9 workers using 1991 MB)
@   149s  (total 9 workers using 2087 MB)
@   161s  (total 9 workers using 2201 MB)
@   175s  (total 9 workers using 2254 MB)
@   188s  (total 9 workers using 2319 MB)
@   201s  (total 9 workers using 2409 MB)
@   214s  (total 9 workers using 2447 MB)
@   227s  (total 9 workers using 2494 MB)
@   240s  (total 9 workers using 2539 MB)
@   253s  (total 9 workers using 2625 MB)
@   266s  (total 9 workers using 2665 MB)
@   280s  (total 9 workers using 2742 MB)
@   292s  (total 9 workers using 2816 MB)
@   306s  (total 9 workers using 2924 MB)
@   318s  (total 9 workers using 2944 MB)
@   332s  (total 9 workers using 3019 MB)
@   344s  (total 9 workers using 3143 MB)
@   358s  (total 9 workers using 3133 MB)
@   371s  (total 9 workers using 3244 MB)
@   384s  (total 9 workers using 3319 MB)
@   397s  (total 9 workers using 3354 MB)
@   410s  (total 9 workers using 3396 MB)
@   423s  (total 9 workers using 3352 MB)
@   436s  (total 9 workers using 3488 MB)
@   449s  (total 9 workers using 3530 MB)
@   462s  (total 9 workers using 3602 MB)
@   475s  (total 9 workers using 3660 MB)
@   488s  (total 9 workers using 3709 MB)
@   501s  (total 9 workers using 3734 MB)
@   515s  (total 9 workers using 3785 MB)
@   527s  (total 9 workers using 3821 MB)
@   541s  (total 9 workers using 3916 MB)
@   554s  (total 9 workers using 3981 MB)
@   567s  (total 9 workers using 3959 MB)
@   580s  (total 9 workers using 3991 MB)
@   593s  (total 9 workers using 4028 MB)
@   605s  (total 9 workers using 4015 MB)
@   616s  (total 9 workers using 4078 MB)
@   627s  (total 9 workers using 4155 MB)
@   639s  (total 9 workers using 4142 MB)
@   650s  (total 9 workers using 4228 MB)
@   661s  (total 9 workers using 4260 MB)
@   673s  (total 9 workers using 4262 MB)
@   684s  (total 9 workers using 4383 MB)
@   696s  (total 9 workers using 4389 MB)
@   707s  (total 9 workers using 4415 MB)
@   718s  (total 9 workers using 4369 MB)
@   730s  (total 9 workers using 4431 MB)
@   740s  (total 9 workers using 4424 MB)
@   752s  (total 9 workers using 4424 MB)
@   763s  (total 9 workers using 4469 MB)
@   774s  (total 9 workers using 4463 MB)
@   785s  (total 9 workers using 4545 MB)
@   796s  (total 9 workers using 4562 MB)
@   807s  (total 9 workers using 4577 MB)
@   819s  (total 9 workers using 4608 MB)
@   830s  (total 9 workers using 4636 MB)
@   841s  (total 9 workers using 4679 MB)
@   852s  (total 9 workers using 4644 MB)
@   863s  (total 9 workers using 4681 MB)
@   874s  (total 9 workers using 4730 MB)
@   885s  (total 9 workers using 4769 MB)
@   896s  (total 9 workers using 4768 MB)
@   908s  (total 9 workers using 4782 MB)
@   919s  (total 9 workers using 4814 MB)
@   930s  (total 9 workers using 4815 MB)
@   941s  (total 9 workers using 4898 MB)
@   952s  (total 9 workers using 4898 MB)
@   963s  (total 9 workers using 4899 MB)
@   974s  (total 9 workers using 4915 MB)
@   985s  (total 9 workers using 4936 MB)
@   997s  (total 9 workers using 4964 MB)
@  1007s  (total 9 workers using 4968 MB)
@  1011s  (worker 1 finished with result unsafe) python3 avr.py -b bin_bt_cadical -s --bmc
@  1011s  (worker 1 output)
@  1011s  (stopping all workers)
@  1011s  (copied results from worker 1 in /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_circular_pointer_top_w32_d32_e0)
@  1011s  [0;30;47m(proof race finished with answer unsafe in 1010.91 seconds)[m
