AVR -- Proof Race 
copyright (c) 2019  Aman Goel and Karem Sakallah, University of Michigan
@     0s  (starting avr proof race)
@     0s  (output dir: /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_circular_pointer_top_w64_d64_e0)
@     0s  (max 11 workers)
@     0s  (started worker 0 with pid 240536)
@     0s  (started worker 1 with pid 240537)
@     0s  (started worker 2 with pid 240538)
@     0s  (started worker 3 with pid 240539)
@     0s  (started worker 4 with pid 240540)
@     0s  (spawned 5 workers)
@     0s  (total 5 workers using 0 MB)
@     1s  (started worker 5 with pid 240658)
@     1s  (spawned 1 workers)
@     1s  (total 6 workers using 204 MB)
@     2s  (started worker 6 with pid 240705)
@     2s  (spawned 1 workers)
@     2s  (total 7 workers using 308 MB)
@     3s  (started worker 7 with pid 240749)
@     3s  (spawned 1 workers)
@     3s  (total 8 workers using 385 MB)
@     6s  (started worker 8 with pid 240818)
@     6s  (spawned 1 workers)
@     6s  (total 9 workers using 530 MB)
@     9s  (started worker 9 with pid 240888)
@     9s  (spawned 1 workers)
@     9s  (total 10 workers using 695 MB)
@    13s  (started worker 10 with pid 240961)
@    13s  (spawned 1 workers)
@    13s  (total 11 workers using 869 MB)
@    25s  (total 11 workers using 1265 MB)
@    43s  (total 11 workers using 1554 MB)
@    60s  (total 11 workers using 1799 MB)
@    74s  (total 11 workers using 2002 MB)
@    89s  (total 11 workers using 2232 MB)
@   102s  (worker 9 finished with result unknown) python3 avr.py -b bin_y2 -s -a sa4 --interpol 1 -f 1
@   105s  (total 10 workers using 2158 MB)
@   118s  (total 10 workers using 2297 MB)
@   132s  (total 10 workers using 2518 MB)
@   145s  (total 10 workers using 2643 MB)
@   159s  (total 10 workers using 2844 MB)
@   173s  (total 10 workers using 2895 MB)
@   187s  (total 10 workers using 2996 MB)
@   200s  (total 10 workers using 3095 MB)
@   214s  (total 10 workers using 3360 MB)
@   227s  (total 10 workers using 3418 MB)
@   241s  (total 10 workers using 3454 MB)
@   255s  (total 10 workers using 3536 MB)
@   269s  (total 10 workers using 3695 MB)
@   282s  (total 10 workers using 3757 MB)
@   297s  (total 10 workers using 3842 MB)
@   310s  (total 10 workers using 3832 MB)
@   324s  (total 10 workers using 3904 MB)
@   337s  (total 10 workers using 3981 MB)
@   351s  (total 10 workers using 4153 MB)
@   365s  (total 10 workers using 4164 MB)
@   379s  (total 10 workers using 4237 MB)
@   392s  (total 10 workers using 4298 MB)
@   406s  (total 10 workers using 4373 MB)
@   419s  (total 10 workers using 4445 MB)
@   433s  (total 10 workers using 4472 MB)
@   446s  (total 10 workers using 4539 MB)
@   461s  (total 10 workers using 4645 MB)
@   474s  (total 10 workers using 4782 MB)
@   488s  (total 10 workers using 4819 MB)
@   501s  (total 10 workers using 4871 MB)
@   515s  (total 10 workers using 4962 MB)
@   528s  (total 10 workers using 5295 MB)
@   543s  (total 10 workers using 5438 MB)
@   556s  (total 10 workers using 5476 MB)
@   570s  (total 10 workers using 5578 MB)
@   583s  (total 10 workers using 5638 MB)
@   597s  (total 10 workers using 5689 MB)
@   610s  (total 10 workers using 5796 MB)
@   624s  (total 10 workers using 5878 MB)
@   637s  (total 10 workers using 6039 MB)
@   651s  (total 10 workers using 6073 MB)
@   665s  (total 10 workers using 6010 MB)
@   679s  (total 10 workers using 6063 MB)
@   692s  (total 10 workers using 6188 MB)
@   706s  (total 10 workers using 6267 MB)
@   719s  (total 10 workers using 6293 MB)
@   734s  (total 10 workers using 6436 MB)
@   747s  (total 10 workers using 6542 MB)
@   761s  (total 10 workers using 6595 MB)
@   774s  (total 10 workers using 6706 MB)
@   788s  (total 10 workers using 6770 MB)
@   801s  (total 10 workers using 6806 MB)
@   815s  (total 10 workers using 6902 MB)
@   829s  (total 10 workers using 7073 MB)
@   843s  (total 10 workers using 7051 MB)
@   857s  (total 10 workers using 7078 MB)
@   871s  (total 10 workers using 7138 MB)
@   884s  (total 10 workers using 7185 MB)
@   898s  (total 10 workers using 7214 MB)
@   911s  (total 10 workers using 7263 MB)
@   925s  (total 10 workers using 7418 MB)
@   938s  (total 10 workers using 7449 MB)
@   952s  (total 10 workers using 7485 MB)
@   966s  (total 10 workers using 7537 MB)
@   980s  (total 10 workers using 7536 MB)
@   993s  (total 10 workers using 7548 MB)
@  1007s  (total 10 workers using 7660 MB)
@  1021s  (total 10 workers using 7684 MB)
@  1035s  (total 10 workers using 7645 MB)
@  1048s  (total 10 workers using 7672 MB)
@  1062s  (total 10 workers using 7684 MB)
@  1075s  (total 10 workers using 7838 MB)
@  1090s  (total 10 workers using 7925 MB)
@  1103s  (total 10 workers using 8094 MB)
@  1117s  (total 10 workers using 8228 MB)
@  1130s  (total 10 workers using 8306 MB)
@  1145s  (total 10 workers using 8535 MB)
@  1158s  (total 10 workers using 8540 MB)
@  1173s  (total 10 workers using 8581 MB)
@  1186s  (total 10 workers using 8647 MB)
@  1200s  (total 10 workers using 8851 MB)
@  1213s  (total 10 workers using 8879 MB)
@  1228s  (total 10 workers using 8835 MB)
@  1241s  (total 10 workers using 8872 MB)
@  1255s  (total 10 workers using 8904 MB)
@  1268s  (total 10 workers using 8904 MB)
@  1280s  (total 10 workers using 8928 MB)
@  1292s  (total 10 workers using 9000 MB)
@  1304s  (total 10 workers using 9020 MB)
@  1315s  (total 10 workers using 9062 MB)
@  1327s  (total 10 workers using 9058 MB)
@  1339s  (total 10 workers using 9112 MB)
@  1350s  (total 10 workers using 9104 MB)
@  1362s  (total 10 workers using 9112 MB)
@  1374s  (total 10 workers using 9105 MB)
@  1385s  (total 10 workers using 9199 MB)
@  1397s  (total 10 workers using 9201 MB)
@  1408s  (total 10 workers using 9250 MB)
@  1420s  (total 10 workers using 9281 MB)
@  1431s  (total 10 workers using 9344 MB)
@  1443s  (total 10 workers using 9328 MB)
@  1455s  (total 10 workers using 9483 MB)
@  1466s  (total 10 workers using 9581 MB)
@  1478s  (total 10 workers using 9516 MB)
@  1489s  (total 10 workers using 9547 MB)
@  1501s  (total 10 workers using 9826 MB)
@  1513s  (total 10 workers using 9876 MB)
@  1524s  (total 10 workers using 9868 MB)
@  1536s  (total 10 workers using 9902 MB)
@  1547s  (total 10 workers using 10185 MB)
@  1559s  (total 10 workers using 10266 MB)
@  1570s  (total 10 workers using 10292 MB)
@  1582s  (total 10 workers using 10416 MB)
@  1594s  (total 10 workers using 10423 MB)
@  1605s  (total 10 workers using 10537 MB)
@  1617s  (total 10 workers using 10691 MB)
@  1628s  (total 10 workers using 10781 MB)
@  1639s  (total 10 workers using 10804 MB)
@  1651s  (total 10 workers using 10972 MB)
@  1662s  (total 10 workers using 10996 MB)
@  1674s  (total 10 workers using 11034 MB)
@  1685s  (total 10 workers using 11107 MB)
@  1697s  (total 10 workers using 11178 MB)
@  1708s  (total 10 workers using 11216 MB)
@  1719s  (total 10 workers using 11248 MB)
@  1730s  (total 10 workers using 11156 MB)
@  1742s  (total 10 workers using 11176 MB)
@  1753s  (total 10 workers using 11205 MB)
@  1764s  (total 10 workers using 11205 MB)
@  1775s  (total 10 workers using 11217 MB)
@  1787s  (total 10 workers using 11221 MB)
@  1798s  (total 10 workers using 11240 MB)
@  1809s  (total 10 workers using 11240 MB)
@  1820s  (total 10 workers using 11242 MB)
@  1832s  (total 10 workers using 11249 MB)
@  1843s  (total 10 workers using 11279 MB)
@  1854s  (total 10 workers using 11279 MB)
@  1865s  (total 10 workers using 11279 MB)
@  1877s  (total 10 workers using 11301 MB)
@  1888s  (total 10 workers using 11398 MB)
@  1899s  (total 10 workers using 11402 MB)
@  1910s  (total 10 workers using 11339 MB)
@  1922s  (total 10 workers using 11395 MB)
@  1933s  (total 10 workers using 11514 MB)
@  1944s  (total 10 workers using 11524 MB)
@  1955s  (total 10 workers using 11558 MB)
@  1966s  (total 10 workers using 11558 MB)
@  1977s  (total 10 workers using 11556 MB)
@  1989s  (total 10 workers using 11531 MB)
@  2000s  (total 10 workers using 11530 MB)
@  2011s  (total 10 workers using 11530 MB)
@  2022s  (total 10 workers using 11530 MB)
@  2034s  (total 10 workers using 11516 MB)
@  2045s  (total 10 workers using 11558 MB)
@  2056s  (total 10 workers using 11558 MB)
@  2067s  (total 10 workers using 11571 MB)
@  2079s  (total 10 workers using 11573 MB)
@  2090s  (total 10 workers using 11581 MB)
@  2101s  (total 10 workers using 11625 MB)
@  2112s  (total 10 workers using 11631 MB)
@  2123s  (total 10 workers using 11645 MB)
@  2134s  (total 10 workers using 11645 MB)
@  2146s  (total 10 workers using 11588 MB)
@  2157s  (total 10 workers using 11593 MB)
@  2168s  (total 10 workers using 11595 MB)
@  2179s  (total 10 workers using 11701 MB)
@  2190s  (total 10 workers using 11707 MB)
@  2201s  (total 10 workers using 11707 MB)
@  2212s  (total 10 workers using 11807 MB)
@  2223s  (total 10 workers using 11816 MB)
@  2234s  (total 10 workers using 11816 MB)
@  2245s  (total 10 workers using 11816 MB)
@  2257s  (total 10 workers using 11870 MB)
@  2267s  (total 10 workers using 11871 MB)
@  2279s  (total 10 workers using 11873 MB)
@  2290s  (total 10 workers using 11872 MB)
@  2301s  (total 10 workers using 11867 MB)
@  2312s  (total 10 workers using 11867 MB)
@  2323s  (total 10 workers using 11867 MB)
@  2334s  (total 10 workers using 11867 MB)
@  2345s  (total 10 workers using 11867 MB)
@  2356s  (total 10 workers using 11944 MB)
@  2367s  (total 10 workers using 11948 MB)
@  2378s  (total 10 workers using 11902 MB)
@  2390s  (total 10 workers using 11903 MB)
@  2400s  (total 10 workers using 11899 MB)
@  2412s  (total 10 workers using 11908 MB)
@  2423s  (total 10 workers using 11940 MB)
@  2434s  (total 10 workers using 11932 MB)
@  2445s  (total 10 workers using 11932 MB)
@  2456s  (total 10 workers using 11936 MB)
@  2467s  (total 10 workers using 11936 MB)
@  2478s  (total 10 workers using 11936 MB)
@  2489s  (total 10 workers using 11949 MB)
@  2500s  (total 10 workers using 11970 MB)
@  2511s  (total 10 workers using 12064 MB)
@  2522s  (total 10 workers using 12039 MB)
@  2533s  (total 10 workers using 12078 MB)
@  2545s  (total 10 workers using 12078 MB)
@  2556s  (total 10 workers using 12117 MB)
@  2567s  (total 10 workers using 12117 MB)
@  2578s  (total 10 workers using 12125 MB)
@  2589s  (total 10 workers using 12164 MB)
@  2600s  (total 10 workers using 12164 MB)
@  2611s  (total 10 workers using 12180 MB)
@  2622s  (total 10 workers using 12146 MB)
@  2633s  (total 10 workers using 12178 MB)
@  2644s  (total 10 workers using 12126 MB)
@  2655s  (total 10 workers using 12127 MB)
@  2666s  (total 10 workers using 12128 MB)
@  2677s  (total 10 workers using 12135 MB)
@  2688s  (total 10 workers using 12167 MB)
@  2700s  (total 10 workers using 12168 MB)
@  2711s  (total 10 workers using 12167 MB)
@  2722s  (total 10 workers using 12167 MB)
@  2733s  (total 10 workers using 12172 MB)
@  2744s  (total 10 workers using 12173 MB)
@  2755s  (total 10 workers using 12173 MB)
@  2766s  (total 10 workers using 12203 MB)
@  2777s  (total 10 workers using 12326 MB)
@  2788s  (total 10 workers using 12364 MB)
@  2799s  (total 10 workers using 12372 MB)
@  2810s  (total 10 workers using 12409 MB)
@  2821s  (total 10 workers using 12389 MB)
@  2832s  (total 10 workers using 12416 MB)
@  2843s  (total 10 workers using 12416 MB)
@  2855s  (total 10 workers using 12416 MB)
@  2866s  (total 10 workers using 12447 MB)
@  2877s  (total 10 workers using 12447 MB)
@  2888s  (total 10 workers using 12447 MB)
@  2899s  (total 10 workers using 12447 MB)
@  2910s  (total 10 workers using 12447 MB)
@  2921s  (total 10 workers using 12447 MB)
@  2932s  (total 10 workers using 12447 MB)
@  2943s  (total 10 workers using 12448 MB)
@  2954s  (total 10 workers using 12449 MB)
@  2965s  (total 10 workers using 12448 MB)
@  2976s  (total 10 workers using 12448 MB)
@  2988s  (total 10 workers using 12393 MB)
@  2999s  (total 10 workers using 12431 MB)
@  3010s  (total 10 workers using 12431 MB)
@  3021s  (total 10 workers using 12393 MB)
@  3032s  (total 10 workers using 12423 MB)
@  3043s  (total 10 workers using 12423 MB)
@  3054s  (total 10 workers using 12442 MB)
@  3065s  (total 10 workers using 12441 MB)
@  3076s  (total 10 workers using 12442 MB)
@  3087s  (total 10 workers using 12441 MB)
@  3098s  (total 10 workers using 12441 MB)
@  3109s  (total 10 workers using 12485 MB)
@  3121s  (total 10 workers using 12485 MB)
@  3132s  (total 10 workers using 12485 MB)
@  3143s  (total 10 workers using 12489 MB)
@  3154s  (total 10 workers using 12549 MB)
@  3165s  (total 10 workers using 12549 MB)
@  3176s  (total 10 workers using 12549 MB)
@  3187s  (total 10 workers using 12549 MB)
@  3198s  (total 10 workers using 12549 MB)
@  3209s  (total 10 workers using 12549 MB)
@  3220s  (total 10 workers using 12549 MB)
@  3231s  (total 10 workers using 12582 MB)
@  3242s  (total 10 workers using 12559 MB)
@  3253s  (total 10 workers using 12575 MB)
@  3264s  (total 10 workers using 12572 MB)
@  3276s  (total 10 workers using 12601 MB)
@  3287s  (total 10 workers using 12588 MB)
@  3298s  (total 10 workers using 12583 MB)
@  3309s  (total 10 workers using 12630 MB)
@  3320s  (total 10 workers using 12630 MB)
@  3331s  (total 10 workers using 12672 MB)
@  3342s  (total 10 workers using 12636 MB)
@  3353s  (total 10 workers using 12636 MB)
@  3364s  (total 10 workers using 12640 MB)
@  3375s  (total 10 workers using 12740 MB)
@  3386s  (total 10 workers using 12740 MB)
@  3397s  (total 10 workers using 12740 MB)
@  3408s  (total 10 workers using 12740 MB)
@  3419s  (total 10 workers using 12740 MB)
@  3431s  (total 10 workers using 12740 MB)
@  3442s  (total 10 workers using 12740 MB)
@  3453s  (total 10 workers using 12740 MB)
@  3464s  (total 10 workers using 12740 MB)
@  3475s  (total 10 workers using 12753 MB)
@  3486s  (total 10 workers using 12754 MB)
@  3497s  (total 10 workers using 12754 MB)
@  3508s  (total 10 workers using 12754 MB)
@  3519s  (total 10 workers using 12754 MB)
@  3530s  (total 10 workers using 12722 MB)
@  3541s  (total 10 workers using 12766 MB)
@  3552s  (total 10 workers using 12766 MB)
@  3564s  (total 10 workers using 12721 MB)
@  3572s  (stopping all workers)
@  3572s  (worker 0 finished with result unknown) python3 avr.py -a sa
@  3572s  (worker 2 finished with result unknown) python3 avr.py
@  3572s  (worker 4 finished with result unknown) python3 avr.py -b bin_y2 --bmc
@  3572s  (worker 6 finished with result unknown) python3 avr.py -a sa --interpol 1 -f 1
@  3572s  (worker 8 finished with result unknown) python3 avr.py -l 5 -g 3 -a sa8 --interpol 1 -f 1
@  3572s  (worker 1 finished with result unknown) python3 avr.py -b bin_bt_cadical -s --bmc
@  3572s  (worker 5 finished with result unknown) python3 avr.py -b bin_bt_cadical -g 3 -l 0 -a sa32
@  3572s  (worker 10 finished with result unknown) python3 avr.py --bmc
@  3573s  (worker 3 finished with result unknown) python3 avr.py -b bin_y2 -s
@  3573s  (worker 7 finished with result unknown) python3 avr.py -s -l 0
@  3573s  (copied results from worker 0 in /scratch/network/hongcez/hwmcc/avr-log/btor2/bv/mann/data-integrity/unsafe/pr_circular_pointer_top_w64_d64_e0)
@  3573s  [0;30;47m(proof race finished with answer unknown in 3572.71 seconds)[m
