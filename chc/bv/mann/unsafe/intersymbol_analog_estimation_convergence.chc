

(set-logic HORN)
(declare-fun INV ((_ BitVec 1) (_ BitVec 32) (_ BitVec 1) (_ BitVec 4) (_ BitVec 1) (_ BitVec 4) (_ BitVec 1) (_ BitVec 32) (_ BitVec 16) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1)) Bool)

(assert (forall ((state259 (_ BitVec 1)) (state147 (_ BitVec 32)) (state72 (_ BitVec 1)) (state143 (_ BitVec 4)) (state105 (_ BitVec 1)) (state140 (_ BitVec 4)) (state5 (_ BitVec 1)) (state103 (_ BitVec 32)) (state120 (_ BitVec 16)) (witness_0 (_ BitVec 1)) (input4 (_ BitVec 1)) (input2 (_ BitVec 1)) (input3 (_ BitVec 1)) (state259.next (_ BitVec 1)) (state147.next (_ BitVec 32)) (state72.next (_ BitVec 1)) (state143.next (_ BitVec 4)) (state105.next (_ BitVec 1)) (state140.next (_ BitVec 4)) (state5.next (_ BitVec 1)) (state103.next (_ BitVec 32)) (state120.next (_ BitVec 16)) (witness_0.next (_ BitVec 1)) (input4.next (_ BitVec 1)) (input2.next (_ BitVec 1)) (input3.next (_ BitVec 1))) (=> (and (and (and (= state120 (_ bv0 16)) (= witness_0 (_ bv1 1))) (= state5 (_ bv1 1))) (= input4 (ite (not (bvult (_ bv1 16) state120)) (_ bv1 1) (_ bv0 1)))) (INV state259 state147 state72 state143 state105 state140 state5 state103 state120 witness_0 input4 input2 input3))))

(assert (forall ((state259 (_ BitVec 1)) (state147 (_ BitVec 32)) (state72 (_ BitVec 1)) (state143 (_ BitVec 4)) (state105 (_ BitVec 1)) (state140 (_ BitVec 4)) (state5 (_ BitVec 1)) (state103 (_ BitVec 32)) (state120 (_ BitVec 16)) (witness_0 (_ BitVec 1)) (input4 (_ BitVec 1)) (input2 (_ BitVec 1)) (input3 (_ BitVec 1)) (state259.next (_ BitVec 1)) (state147.next (_ BitVec 32)) (state72.next (_ BitVec 1)) (state143.next (_ BitVec 4)) (state105.next (_ BitVec 1)) (state140.next (_ BitVec 4)) (state5.next (_ BitVec 1)) (state103.next (_ BitVec 32)) (state120.next (_ BitVec 16)) (witness_0.next (_ BitVec 1)) (input4.next (_ BitVec 1)) (input2.next (_ BitVec 1)) (input3.next (_ BitVec 1))) (=> (and (INV state259 state147 state72 state143 state105 state140 state5 state103 state120 witness_0 input4 input2 input3) (let ((.def_20 (bvnot input3))) (let ((.def_53 (bvnot state72))) (let ((.def_88 (= state105 (_ bv1 1)))) (let ((.def_90 (bvadd (bvadd (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat input3 (concat input3 (concat input3 (concat input3 (concat input3 (concat .def_20 (_ bv4 3)))))))))))))))))))))))))))))) (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat state72 (concat state72 (concat .def_53 (concat .def_53 (_ bv8 4)))))))))))))))))))))))))))))) (ite .def_88 (bvneg state103) state103)))) (let ((.def_98 (ite (not (bvult ((_ zero_extend 1) ((_ extract 30 0) .def_90)) (concat ((_ extract 31 31) .def_90) (_ bv0 31)))) (_ bv1 1) (_ bv0 1)))) (let ((.def_161 (= .def_98 (_ bv1 1)))) (let ((.def_174 ((_ extract 33 33) ((_ sign_extend 2) (ite .def_88 (bvadd (bvadd (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat input3 (concat input3 (concat input3 (concat input3 (concat input3 (concat .def_20 (_ bv4 3)))))))))))))))))))))))))))))) (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat state72 (concat state72 (concat .def_53 (concat .def_53 (_ bv8 4)))))))))))))))))))))))))))))) (ite .def_161 (bvneg state147) state147)) (bvneg (bvadd (bvadd (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat input3 (concat input3 (concat input3 (concat input3 (concat input3 (concat .def_20 (_ bv4 3)))))))))))))))))))))))))))))) (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat state72 (concat state72 (concat .def_53 (concat .def_53 (_ bv8 4)))))))))))))))))))))))))))))) (ite .def_161 (bvneg state147) state147)))))))) (let ((.def_246 ((_ extract 33 33) ((_ sign_extend 2) (ite .def_161 .def_90 (bvneg .def_90)))))) (let ((.def_298 (= (bvcomp state143 (_ bv9 4)) (_ bv1 1)))) (let ((.def_301 (= input4 (_ bv1 1)))) (and (and (and (and (and (and (and (and (and (and (and (and (= witness_0.next (bvnot (ite (= (ite (bvult (_ bv5 16) state120) (bvnot (bvxor input3 .def_98)) (_ bv1 1)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)))) (= state5 (_ bv1 1))) (= state5.next (_ bv1 1))) (= input4 (ite (not (bvult (_ bv1 16) state120)) (_ bv1 1) (_ bv0 1)))) (= input4.next (ite (not (bvult (_ bv1 16) state120.next)) (_ bv1 1) (_ bv0 1)))) (= state5.next (ite .def_301 (_ bv1 1) (ite .def_298 (ite (and (not (bvult state140 (_ bv4 4))) (not (bvult (_ bv6 4) state140))) (_ bv1 1) (_ bv0 1)) (_ bv1 1))))) (= state72.next (ite .def_301 (_ bv0 1) input3))) (= state103.next (ite .def_301 (_ bv1 32) ((_ extract 38 7) (bvadd (_ bv64 39) (bvadd (concat .def_174 (concat .def_174 (concat .def_174 (concat .def_174 (concat .def_174 ((_ sign_extend 2) (ite .def_88 (bvadd (bvadd (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat input3 (concat input3 (concat input3 (concat input3 (concat input3 (concat .def_20 (_ bv4 3)))))))))))))))))))))))))))))) (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat state72 (concat state72 (concat .def_53 (concat .def_53 (_ bv8 4)))))))))))))))))))))))))))))) (ite .def_161 (bvneg state147) state147)) (bvneg (bvadd (bvadd (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat .def_20 (concat input3 (concat input3 (concat input3 (concat input3 (concat input3 (concat .def_20 (_ bv4 3)))))))))))))))))))))))))))))) (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat .def_53 (concat state72 (concat state72 (concat .def_53 (concat .def_53 (_ bv8 4)))))))))))))))))))))))))))))) (ite .def_161 (bvneg state147) state147)))))))))) (bvmul (_ bv127 39) ((_ sign_extend 7) state103)))))))) (= state105.next (ite .def_301 (_ bv0 1) .def_98))) (= state120.next (bvadd (_ bv1 16) state120))) (= state140.next (ite .def_301 (_ bv0 4) (ite .def_298 (concat (_ bv0 3) input3) (bvadd state140 ((_ zero_extend 3) input3)))))) (= state143.next (ite .def_301 (_ bv0 4) (ite .def_298 (_ bv0 4) (bvadd (_ bv1 4) state143))))) (= state147.next (ite .def_301 (_ bv1 32) ((_ extract 38 7) (bvadd (_ bv64 39) (bvadd (concat .def_246 (concat .def_246 (concat .def_246 (concat .def_246 (concat .def_246 ((_ sign_extend 2) (ite .def_161 .def_90 (bvneg .def_90)))))))) (concat (bvmul (_ bv127 38) ((_ sign_extend 6) state147)) (_ bv0 1))))))))))))))))))) (INV state259.next state147.next state72.next state143.next state105.next state140.next state5.next state103.next state120.next witness_0.next input4.next input2.next input3.next))))

(assert (forall ((state259 (_ BitVec 1)) (state147 (_ BitVec 32)) (state72 (_ BitVec 1)) (state143 (_ BitVec 4)) (state105 (_ BitVec 1)) (state140 (_ BitVec 4)) (state5 (_ BitVec 1)) (state103 (_ BitVec 32)) (state120 (_ BitVec 16)) (witness_0 (_ BitVec 1)) (input4 (_ BitVec 1)) (input2 (_ BitVec 1)) (input3 (_ BitVec 1)) (state259.next (_ BitVec 1)) (state147.next (_ BitVec 32)) (state72.next (_ BitVec 1)) (state143.next (_ BitVec 4)) (state105.next (_ BitVec 1)) (state140.next (_ BitVec 4)) (state5.next (_ BitVec 1)) (state103.next (_ BitVec 32)) (state120.next (_ BitVec 16)) (witness_0.next (_ BitVec 1)) (input4.next (_ BitVec 1)) (input2.next (_ BitVec 1)) (input3.next (_ BitVec 1))) (=> (and (INV state259 state147 state72 state143 state105 state140 state5 state103 state120 witness_0 input4 input2 input3) (not (= witness_0 (_ bv1 1)))) false)))

(check-sat)
