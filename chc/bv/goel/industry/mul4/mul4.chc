

(set-logic HORN)
(declare-fun INV ((_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 64) (_ BitVec 64) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 32) (_ BitVec 1) (_ BitVec 1) (_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1)) Bool)

(assert (forall ((state92 (_ BitVec 1)) (state74 (_ BitVec 1)) (state44 (_ BitVec 1)) (state32 (_ BitVec 1)) (state69 (_ BitVec 1)) (state30 (_ BitVec 32)) (state42 (_ BitVec 32)) (state15 (_ BitVec 1)) (state37 (_ BitVec 32)) (state18 (_ BitVec 64)) (state12 (_ BitVec 64)) (state39 (_ BitVec 1)) (state20 (_ BitVec 1)) (state87 (_ BitVec 1)) (state25 (_ BitVec 32)) (state27 (_ BitVec 1)) (input9 (_ BitVec 1)) (input4 (_ BitVec 32)) (input2 (_ BitVec 1)) (input5 (_ BitVec 32)) (input6 (_ BitVec 1)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)) (state92.next (_ BitVec 1)) (state74.next (_ BitVec 1)) (state44.next (_ BitVec 1)) (state32.next (_ BitVec 1)) (state69.next (_ BitVec 1)) (state30.next (_ BitVec 32)) (state42.next (_ BitVec 32)) (state15.next (_ BitVec 1)) (state37.next (_ BitVec 32)) (state18.next (_ BitVec 64)) (state12.next (_ BitVec 64)) (state39.next (_ BitVec 1)) (state20.next (_ BitVec 1)) (state87.next (_ BitVec 1)) (state25.next (_ BitVec 32)) (state27.next (_ BitVec 1)) (input9.next (_ BitVec 1)) (input4.next (_ BitVec 32)) (input2.next (_ BitVec 1)) (input5.next (_ BitVec 32)) (input6.next (_ BitVec 1)) (input7.next (_ BitVec 1)) (input8.next (_ BitVec 1))) (=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= state12 (_ bv0 64)) (= state15 (_ bv0 1))) (= state18 (_ bv0 64))) (= state20 (_ bv0 1))) (= state25 (_ bv0 32))) (= state27 (_ bv0 1))) (= state30 (_ bv0 32))) (= state32 (_ bv0 1))) (= state37 (_ bv0 32))) (= state39 (_ bv0 1))) (= state42 (_ bv0 32))) (= state44 (_ bv0 1))) (= state69 (_ bv0 1))) (= state74 (_ bv0 1))) (= state87 (_ bv0 1))) (= state92 (_ bv0 1))) (INV state92 state74 state44 state32 state69 state30 state42 state15 state37 state18 state12 state39 state20 state87 state25 state27 input9 input4 input2 input5 input6 input7 input8))))

(assert (forall ((state92 (_ BitVec 1)) (state74 (_ BitVec 1)) (state44 (_ BitVec 1)) (state32 (_ BitVec 1)) (state69 (_ BitVec 1)) (state30 (_ BitVec 32)) (state42 (_ BitVec 32)) (state15 (_ BitVec 1)) (state37 (_ BitVec 32)) (state18 (_ BitVec 64)) (state12 (_ BitVec 64)) (state39 (_ BitVec 1)) (state20 (_ BitVec 1)) (state87 (_ BitVec 1)) (state25 (_ BitVec 32)) (state27 (_ BitVec 1)) (input9 (_ BitVec 1)) (input4 (_ BitVec 32)) (input2 (_ BitVec 1)) (input5 (_ BitVec 32)) (input6 (_ BitVec 1)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)) (state92.next (_ BitVec 1)) (state74.next (_ BitVec 1)) (state44.next (_ BitVec 1)) (state32.next (_ BitVec 1)) (state69.next (_ BitVec 1)) (state30.next (_ BitVec 32)) (state42.next (_ BitVec 32)) (state15.next (_ BitVec 1)) (state37.next (_ BitVec 32)) (state18.next (_ BitVec 64)) (state12.next (_ BitVec 64)) (state39.next (_ BitVec 1)) (state20.next (_ BitVec 1)) (state87.next (_ BitVec 1)) (state25.next (_ BitVec 32)) (state27.next (_ BitVec 1)) (input9.next (_ BitVec 1)) (input4.next (_ BitVec 32)) (input2.next (_ BitVec 1)) (input5.next (_ BitVec 32)) (input6.next (_ BitVec 1)) (input7.next (_ BitVec 1)) (input8.next (_ BitVec 1))) (=> (and (INV state92 state74 state44 state32 state69 state30 state42 state15 state37 state18 state12 state39 state20 state87 state25 state27 input9 input4 input2 input5 input6 input7 input8) (let ((.def_120 (bvand input6 input7))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= state12.next (ite (= state69 (_ bv1 1)) (concat (_ bv0 4) ((_ extract 61 2) (bvmul ((_ zero_extend 32) state25) ((_ zero_extend 32) state37)))) (_ bv0 64))) (= state15.next state74)) (= state18.next (ite (= state92 (_ bv1 1)) (ite (= state87 (_ bv1 1)) (concat (_ bv0 4) ((_ extract 61 2) (bvmul ((_ zero_extend 32) state30) ((_ zero_extend 32) state42)))) (_ bv0 64)) state18))) (= state20.next state92)) (= input4 state25.next)) (= input8 state27.next)) (= state30.next (ite (= (bvor input8 .def_120) (_ bv1 1)) input4 state30))) (= input8 state32.next)) (= input5 state37.next)) (= input9 state39.next)) (= state42.next (ite (= (bvor input9 .def_120) (_ bv1 1)) input5 state42))) (= input9 state44.next)) (= input6 state69.next)) (= input7 state74.next)) (= input6 state87.next)) (= input7 state92.next)))) (INV state92.next state74.next state44.next state32.next state69.next state30.next state42.next state15.next state37.next state18.next state12.next state39.next state20.next state87.next state25.next state27.next input9.next input4.next input2.next input5.next input6.next input7.next input8.next))))

(assert (forall ((state92 (_ BitVec 1)) (state74 (_ BitVec 1)) (state44 (_ BitVec 1)) (state32 (_ BitVec 1)) (state69 (_ BitVec 1)) (state30 (_ BitVec 32)) (state42 (_ BitVec 32)) (state15 (_ BitVec 1)) (state37 (_ BitVec 32)) (state18 (_ BitVec 64)) (state12 (_ BitVec 64)) (state39 (_ BitVec 1)) (state20 (_ BitVec 1)) (state87 (_ BitVec 1)) (state25 (_ BitVec 32)) (state27 (_ BitVec 1)) (input9 (_ BitVec 1)) (input4 (_ BitVec 32)) (input2 (_ BitVec 1)) (input5 (_ BitVec 32)) (input6 (_ BitVec 1)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)) (state92.next (_ BitVec 1)) (state74.next (_ BitVec 1)) (state44.next (_ BitVec 1)) (state32.next (_ BitVec 1)) (state69.next (_ BitVec 1)) (state30.next (_ BitVec 32)) (state42.next (_ BitVec 32)) (state15.next (_ BitVec 1)) (state37.next (_ BitVec 32)) (state18.next (_ BitVec 64)) (state12.next (_ BitVec 64)) (state39.next (_ BitVec 1)) (state20.next (_ BitVec 1)) (state87.next (_ BitVec 1)) (state25.next (_ BitVec 32)) (state27.next (_ BitVec 1)) (input9.next (_ BitVec 1)) (input4.next (_ BitVec 32)) (input2.next (_ BitVec 1)) (input5.next (_ BitVec 32)) (input6.next (_ BitVec 1)) (input7.next (_ BitVec 1)) (input8.next (_ BitVec 1))) (=> (and (INV state92 state74 state44 state32 state69 state30 state42 state15 state37 state18 state12 state39 state20 state87 state25 state27 input9 input4 input2 input5 input6 input7 input8) (not (not (= (bvand (bvand (bvcomp (ite (= state15 (_ bv1 1)) state12 (_ bv0 64)) (ite (= state20 (_ bv1 1)) state18 (_ bv0 64))) (bvcomp (ite (= state27 (_ bv1 1)) state25 (_ bv0 32)) (ite (= state32 (_ bv1 1)) state30 (_ bv0 32)))) (bvcomp (ite (= state39 (_ bv1 1)) state37 (_ bv0 32)) (ite (= state44 (_ bv1 1)) state42 (_ bv0 32)))) (_ bv0 1))))) false)))

(check-sat)
