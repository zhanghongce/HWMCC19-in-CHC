

(set-logic HORN)
(declare-fun INV ((_ BitVec 512) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 279) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 2) (_ BitVec 1)) Bool)

(assert (forall ((state38 (_ BitVec 512)) (state35 (_ BitVec 1)) (state32 (_ BitVec 1)) (state29 (_ BitVec 1)) (state18 (_ BitVec 1)) (state19 (_ BitVec 1)) (input16 (_ BitVec 1)) (input15 (_ BitVec 1)) (input14 (_ BitVec 1)) (input13 (_ BitVec 1)) (input12 (_ BitVec 279)) (input10 (_ BitVec 1)) (input9 (_ BitVec 1)) (input3 (_ BitVec 1)) (input2 (_ BitVec 1)) (input4 (_ BitVec 1)) (input5 (_ BitVec 1)) (input7 (_ BitVec 2)) (input8 (_ BitVec 1)) (state38.next (_ BitVec 512)) (state35.next (_ BitVec 1)) (state32.next (_ BitVec 1)) (state29.next (_ BitVec 1)) (state18.next (_ BitVec 1)) (state19.next (_ BitVec 1)) (input16.next (_ BitVec 1)) (input15.next (_ BitVec 1)) (input14.next (_ BitVec 1)) (input13.next (_ BitVec 1)) (input12.next (_ BitVec 279)) (input10.next (_ BitVec 1)) (input9.next (_ BitVec 1)) (input3.next (_ BitVec 1)) (input2.next (_ BitVec 1)) (input4.next (_ BitVec 1)) (input5.next (_ BitVec 1)) (input7.next (_ BitVec 2)) (input8.next (_ BitVec 1))) (=> (and (and (= state19 (_ bv0 1)) (= state29 (_ bv0 1))) (= state32 (_ bv0 1))) (INV state38 state35 state32 state29 state18 state19 input16 input15 input14 input13 input12 input10 input9 input3 input2 input4 input5 input7 input8))))

(assert (forall ((state38 (_ BitVec 512)) (state35 (_ BitVec 1)) (state32 (_ BitVec 1)) (state29 (_ BitVec 1)) (state18 (_ BitVec 1)) (state19 (_ BitVec 1)) (input16 (_ BitVec 1)) (input15 (_ BitVec 1)) (input14 (_ BitVec 1)) (input13 (_ BitVec 1)) (input12 (_ BitVec 279)) (input10 (_ BitVec 1)) (input9 (_ BitVec 1)) (input3 (_ BitVec 1)) (input2 (_ BitVec 1)) (input4 (_ BitVec 1)) (input5 (_ BitVec 1)) (input7 (_ BitVec 2)) (input8 (_ BitVec 1)) (state38.next (_ BitVec 512)) (state35.next (_ BitVec 1)) (state32.next (_ BitVec 1)) (state29.next (_ BitVec 1)) (state18.next (_ BitVec 1)) (state19.next (_ BitVec 1)) (input16.next (_ BitVec 1)) (input15.next (_ BitVec 1)) (input14.next (_ BitVec 1)) (input13.next (_ BitVec 1)) (input12.next (_ BitVec 279)) (input10.next (_ BitVec 1)) (input9.next (_ BitVec 1)) (input3.next (_ BitVec 1)) (input2.next (_ BitVec 1)) (input4.next (_ BitVec 1)) (input5.next (_ BitVec 1)) (input7.next (_ BitVec 2)) (input8.next (_ BitVec 1))) (=> (and (INV state38 state35 state32 state29 state18 state19 input16 input15 input14 input13 input12 input10 input9 input3 input2 input4 input5 input7 input8) (let ((.def_53 (bvnot input2))) (let ((.def_64 ((_ extract 282 282) state38))) (let ((.def_65 ((_ extract 283 283) state38))) (let ((.def_67 ((_ extract 284 284) state38))) (let ((.def_71 (bvor (bvor (bvand .def_64 .def_65) (bvand .def_64 .def_67)) (bvand .def_65 .def_67)))) (let ((.def_75 (bvnot input8))) (let ((.def_76 (bvand (bvnot input4) .def_75))) (let ((.def_84 (bvand .def_76 (bvnot .def_71)))) (let ((.def_85 (= input10 (_ bv1 1)))) (let ((.def_88 (bvcomp input7 (_ bv3 2)))) (let ((.def_89 (= .def_88 (_ bv1 1)))) (let ((.def_95 (= (bvor .def_88 (bvcomp input7 (_ bv2 2))) (_ bv1 1)))) (let ((.def_96 (ite .def_95 (ite .def_89 (ite .def_85 (_ bv0 1) .def_84) .def_84) (ite (= (bvcomp input7 (_ bv1 2)) (_ bv1 1)) .def_76 (ite (= .def_76 (_ bv1 1)) (ite (= .def_71 (_ bv1 1)) (_ bv1 1) (bvand input9 state35)) (_ bv0 1)))))) (let ((.def_111 (bvor .def_96 (ite .def_95 (ite .def_89 (ite .def_85 (ite (= (bvand (bvnot input14) (bvnot input15)) (_ bv1 1)) (_ bv0 1) .def_75) (_ bv0 1)) (ite (= .def_84 (_ bv1 1)) (_ bv0 1) (bvand input14 (bvand input9 .def_75)))) (_ bv0 1))))) (let ((.def_113 (= (bvor input2 .def_111) (_ bv1 1)))) (let ((.def_115 (= input3 (_ bv1 1)))) (let ((.def_123 (bvnot input5))) (let ((.def_124 (bvand input4 .def_123))) (let ((.def_143 (= .def_111 (_ bv1 1)))) (let ((.def_146 (= input2 (_ bv1 1)))) (let ((.def_164 (bvnot input13))) (let ((.def_169 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 .def_164))))))) (let ((.def_171 (concat .def_164 (concat .def_164 .def_169)))) (let ((.def_500 (concat (bvand .def_171 ((_ extract 278 271) input12)) (concat (_ bv0 2) (concat (bvand .def_169 ((_ extract 270 265) input12)) (concat (_ bv0 7) (bvand (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 (concat .def_164 .def_171))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ((_ extract 264 0) input12)))))))) (and (and (and (and (and (= state18.next (ite .def_115 (ite .def_146 (_ bv0 1) (ite .def_143 state35 state18)) state18)) (= state19.next (ite .def_115 (ite .def_113 (bvand state29 .def_53) state19) state19))) (= state29.next (ite .def_115 (ite .def_113 (bvand .def_53 state32) state29) state29))) (= state32.next (ite .def_115 (ite (= (bvor .def_96 (bvor input2 .def_124)) (_ bv1 1)) (bvnot (bvor .def_124 (bvor input2 .def_123))) state32) state32))) (= state35.next (ite .def_115 (ite .def_146 (_ bv0 1) (ite .def_143 .def_71 state35)) state35))) (= state38.next (ite .def_115 (ite .def_146 (_ bv0 512) (ite (= .def_124 (_ bv1 1)) (concat (_ bv0 224) .def_500) (ite (= .def_96 (_ bv1 1)) (concat (_ bv0 224) (ite (= input5 (_ bv1 1)) (_ bv0 288) .def_500)) state38))) state38)))))))))))))))))))))))))))) (INV state38.next state35.next state32.next state29.next state18.next state19.next input16.next input15.next input14.next input13.next input12.next input10.next input9.next input3.next input2.next input4.next input5.next input7.next input8.next))))

(assert (forall ((state38 (_ BitVec 512)) (state35 (_ BitVec 1)) (state32 (_ BitVec 1)) (state29 (_ BitVec 1)) (state18 (_ BitVec 1)) (state19 (_ BitVec 1)) (input16 (_ BitVec 1)) (input15 (_ BitVec 1)) (input14 (_ BitVec 1)) (input13 (_ BitVec 1)) (input12 (_ BitVec 279)) (input10 (_ BitVec 1)) (input9 (_ BitVec 1)) (input3 (_ BitVec 1)) (input2 (_ BitVec 1)) (input4 (_ BitVec 1)) (input5 (_ BitVec 1)) (input7 (_ BitVec 2)) (input8 (_ BitVec 1)) (state38.next (_ BitVec 512)) (state35.next (_ BitVec 1)) (state32.next (_ BitVec 1)) (state29.next (_ BitVec 1)) (state18.next (_ BitVec 1)) (state19.next (_ BitVec 1)) (input16.next (_ BitVec 1)) (input15.next (_ BitVec 1)) (input14.next (_ BitVec 1)) (input13.next (_ BitVec 1)) (input12.next (_ BitVec 279)) (input10.next (_ BitVec 1)) (input9.next (_ BitVec 1)) (input3.next (_ BitVec 1)) (input2.next (_ BitVec 1)) (input4.next (_ BitVec 1)) (input5.next (_ BitVec 1)) (input7.next (_ BitVec 2)) (input8.next (_ BitVec 1))) (=> (and (INV state38 state35 state32 state29 state18 state19 input16 input15 input14 input13 input12 input10 input9 input3 input2 input4 input5 input7 input8) (not (not (= (bvcomp (ite (= state19 (_ bv1 1)) state18 (_ bv0 1)) (_ bv0 1)) (_ bv0 1))))) false)))

(check-sat)
