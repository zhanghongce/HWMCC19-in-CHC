

;----------------------------------------
;  CHC generated from BTOR
;  Generated by COSA2 (Pono)
;----------------------------------------

(set-option :fp.engine spacer)

(define-fun Init 
    ((state338 (_ BitVec 1)) (state337 (_ BitVec 1)) (state336 (_ BitVec 1)) (state335 (_ BitVec 1)) (state334 (_ BitVec 1)) (state333 (_ BitVec 1)) (state332 (_ BitVec 1)) (state31 (_ BitVec 1)) (state48 (_ BitVec 4)) (state331 (_ BitVec 1)) (state103 (_ BitVec 8)) (state44 (Array (_ BitVec 3) (_ BitVec 8))) (witness_0 (_ BitVec 1)) (state26 (_ BitVec 8)) (state84 (_ BitVec 1)) (state14 (Array (_ BitVec 3) (_ BitVec 8))) (state45 (_ BitVec 4)) (state87 (_ BitVec 4)) (state55 (_ BitVec 8)) (state19 (_ BitVec 4)) (state83 (_ BitVec 1)) (state16 (_ BitVec 4)) (state109 (_ BitVec 1)) (input10 (_ BitVec 1)) (input4 (_ BitVec 16)) (input2 (_ BitVec 1)) (input6 (_ BitVec 2)) (input7 (_ BitVec 16)) (input8 (_ BitVec 2)) (input9 (_ BitVec 1)))
     Bool
     (let ((.def_33 (bvcomp state19 state16))) (let ((.def_68 (bvcomp state48 state45))) (and (and (and (and (and (and (= state109 (_ bv1 1)) (= witness_0 (_ bv1 1))) (= (bvor (bvnot .def_68) (bvnot ((_ extract 0 0) input8))) (_ bv1 1))) (= (bvor (bvnot .def_33) (bvnot ((_ extract 1 1) input8))) (_ bv1 1))) (= (bvor (bvnot (bvand .def_68 (ite (not (= ((_ extract 3 3) state48) ((_ extract 3 3) state45))) (_ bv1 1) (_ bv0 1)))) (bvnot ((_ extract 0 0) input6))) (_ bv1 1))) (= (bvor (bvnot (bvand .def_33 (ite (not (= ((_ extract 3 3) state19) ((_ extract 3 3) state16))) (_ bv1 1) (_ bv0 1)))) (bvnot ((_ extract 1 1) input6))) (_ bv1 1))) (= (bvcomp state109 input9) (_ bv1 1))))))
(define-fun Trans 
    ((state338 (_ BitVec 1)) (state337 (_ BitVec 1)) (state336 (_ BitVec 1)) (state335 (_ BitVec 1)) (state334 (_ BitVec 1)) (state333 (_ BitVec 1)) (state332 (_ BitVec 1)) (state31 (_ BitVec 1)) (state48 (_ BitVec 4)) (state331 (_ BitVec 1)) (state103 (_ BitVec 8)) (state44 (Array (_ BitVec 3) (_ BitVec 8))) (witness_0 (_ BitVec 1)) (state26 (_ BitVec 8)) (state84 (_ BitVec 1)) (state14 (Array (_ BitVec 3) (_ BitVec 8))) (state45 (_ BitVec 4)) (state87 (_ BitVec 4)) (state55 (_ BitVec 8)) (state19 (_ BitVec 4)) (state83 (_ BitVec 1)) (state16 (_ BitVec 4)) (state109 (_ BitVec 1)) (input10 (_ BitVec 1)) (input4 (_ BitVec 16)) (input2 (_ BitVec 1)) (input6 (_ BitVec 2)) (input7 (_ BitVec 16)) (input8 (_ BitVec 2)) (input9 (_ BitVec 1)) (state338.next (_ BitVec 1)) (state337.next (_ BitVec 1)) (state336.next (_ BitVec 1)) (state335.next (_ BitVec 1)) (state334.next (_ BitVec 1)) (state333.next (_ BitVec 1)) (state332.next (_ BitVec 1)) (state31.next (_ BitVec 1)) (state48.next (_ BitVec 4)) (state331.next (_ BitVec 1)) (state103.next (_ BitVec 8)) (state44.next (Array (_ BitVec 3) (_ BitVec 8))) (witness_0.next (_ BitVec 1)) (state26.next (_ BitVec 8)) (state84.next (_ BitVec 1)) (state14.next (Array (_ BitVec 3) (_ BitVec 8))) (state45.next (_ BitVec 4)) (state87.next (_ BitVec 4)) (state55.next (_ BitVec 8)) (state19.next (_ BitVec 4)) (state83.next (_ BitVec 1)) (state16.next (_ BitVec 4)) (state109.next (_ BitVec 1)) (input10.next (_ BitVec 1)) (input4.next (_ BitVec 16)) (input2.next (_ BitVec 1)) (input6.next (_ BitVec 2)) (input7.next (_ BitVec 16)) (input8.next (_ BitVec 2)) (input9.next (_ BitVec 1)))
    Bool
     (let ((.def_26 ((_ extract 2 0) state16))) (let ((.def_32 ((_ extract 1 1) input8))) (let ((.def_33 (bvcomp state19 state16))) (let ((.def_34 (bvnot .def_33))) (let ((.def_35 (bvand .def_32 .def_34))) (let ((.def_48 (bvand (bvand .def_35 (ite (not (bvult state26 (_ bv8 8))) (_ bv1 1) (_ bv0 1))) state31))) (let ((.def_61 ((_ extract 2 0) state45))) (let ((.def_67 ((_ extract 0 0) input8))) (let ((.def_68 (bvcomp state48 state45))) (let ((.def_69 (bvnot .def_68))) (let ((.def_70 (bvand .def_67 .def_69))) (let ((.def_77 (bvnot state31))) (let ((.def_78 (bvand (bvand .def_70 (ite (not (bvult state55 (_ bv8 8))) (_ bv1 1) (_ bv0 1))) .def_77))) (let ((.def_115 ((_ extract 0 0) input6))) (let ((.def_116 (bvnot state83))) (let ((.def_124 (= input9 (_ bv1 1)))) (let ((.def_125 (ite .def_124 (_ bv0 4) (bvadd (bvadd state87 ((_ zero_extend 3) (bvand .def_115 .def_116))) (bvneg ((_ zero_extend 3) .def_78)))))) (let ((.def_129 (bvand (bvand (bvand state83 (bvnot state84)) (ite (not (= state87 (_ bv0 4))) (_ bv1 1) (_ bv0 1))) (ite (= .def_125 (_ bv0 4)) (_ bv1 1) (_ bv0 1))))) (let ((.def_158 (bvcomp state48.next state45.next))) (let ((.def_174 (bvcomp state19.next state16.next))) (let ((.def_206 ((_ extract 1 1) input6))) (let ((.def_251 ((_ extract 0 0) (bvadd (_ bv1 3) ((_ zero_extend 2) state31))))) (let ((.def_252 (concat .def_35 .def_70))) (let ((.def_255 ((_ extract 0 0) (bvlshr .def_252 ((_ zero_extend 1) .def_251))))) (let ((.def_265 ((_ extract 0 0) (bvadd (_ bv1 3) ((_ zero_extend 1) (bvadd (_ bv1 2) ((_ zero_extend 1) state31))))))) (let ((.def_272 (ite (= (bvand ((_ extract 0 0) (bvlshr .def_252 ((_ zero_extend 1) .def_265))) (bvnot .def_255)) (_ bv1 1)) .def_265 (ite (= .def_255 (_ bv1 1)) .def_251 state31)))) (let ((.def_273 (= .def_272 (_ bv1 1)))) (let ((.def_274 (ite .def_273 state55 (bvadd state55 ((_ extract 7 0) input7))))) (let ((.def_282 (bvnot .def_70))) (let ((.def_287 (ite .def_124 (_ bv0 8) (ite (= (bvand .def_77 .def_282) (_ bv1 1)) state55 (ite (= .def_78 (_ bv1 1)) (bvadd (_ bv248 8) .def_274) .def_274))))) (let ((.def_296 (ite .def_273 (bvadd state26 ((_ extract 15 8) input7)) state26))) (let ((.def_303 (bvnot .def_35))) (let ((.def_307 (ite .def_124 (_ bv0 8) (ite (= (bvand state31 .def_303) (_ bv1 1)) state26 (ite (= .def_48 (_ bv1 1)) (bvadd (_ bv248 8) .def_296) .def_296))))) (let ((.def_351 ((_ extract 7 0) input4))) (let ((.def_366 (bvor input9 (bvor .def_78 .def_115)))) (let ((.def_432 (bvand input10 .def_115))) (let ((.def_451 (= (bvor input9 (bvor .def_48 .def_206)) (_ bv1 1)))) (let ((.def_479 (= .def_366 (_ bv1 1)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= witness_0.next (bvnot (ite (= (bvand (ite (= state109 (_ bv1 1)) (_ bv0 1) (_ bv1 1)) (bvnot (bvor (bvnot .def_129) (bvcomp state103 (bvor (bvand (select state14 ((_ extract 2 0) state19)) (concat .def_48 (concat .def_48 (concat .def_48 (concat .def_48 (concat .def_48 (concat .def_48 (concat .def_48 .def_48)))))))) (bvand (select state44 ((_ extract 2 0) state48)) (concat .def_78 (concat .def_78 (concat .def_78 (concat .def_78 (concat .def_78 (concat .def_78 (concat .def_78 .def_78))))))))))))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)))) (= (bvor .def_69 (bvnot .def_67)) (_ bv1 1))) (= (bvor (bvnot ((_ extract 0 0) input8.next)) (bvnot .def_158)) (_ bv1 1))) (= (bvor .def_34 (bvnot .def_32)) (_ bv1 1))) (= (bvor (bvnot ((_ extract 1 1) input8.next)) (bvnot .def_174)) (_ bv1 1))) (= (bvor (bvnot (bvand .def_68 (ite (not (= ((_ extract 3 3) state48) ((_ extract 3 3) state45))) (_ bv1 1) (_ bv0 1)))) (bvnot .def_115)) (_ bv1 1))) (= (bvor (bvnot ((_ extract 0 0) input6.next)) (bvnot (bvand .def_158 (ite (not (= ((_ extract 3 3) state45.next) ((_ extract 3 3) state48.next))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1))) (= (bvor (bvnot (bvand .def_33 (ite (not (= ((_ extract 3 3) state19) ((_ extract 3 3) state16))) (_ bv1 1) (_ bv0 1)))) (bvnot .def_206)) (_ bv1 1))) (= (bvor (bvnot ((_ extract 1 1) input6.next)) (bvnot (bvand .def_174 (ite (not (= ((_ extract 3 3) state16.next) ((_ extract 3 3) state19.next))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1))) (= (bvcomp state109 input9) (_ bv1 1))) (= (bvcomp state109.next input9.next) (_ bv1 1))) (= state16.next (ite .def_124 (_ bv0 4) (ite .def_451 (bvadd state16 ((_ zero_extend 3) .def_206)) state16)))) (= state19.next (ite .def_124 (_ bv0 4) (ite .def_451 (bvadd state19 ((_ zero_extend 3) .def_48)) state19)))) (= state14.next (store state14 .def_26 (ite (= .def_206 (_ bv1 1)) ((_ extract 15 8) input4) (select state14 .def_26))))) (= state26.next (ite .def_124 (_ bv0 8) (ite (= (bvor state31 .def_272) (_ bv1 1)) .def_307 state26)))) (= state31.next (ite .def_124 (_ bv0 1) (ite (not (= (concat (bvand .def_78 (bvand .def_77 (bvor .def_282 (ite (bvult .def_287 (_ bv8 8)) (_ bv1 1) (_ bv0 1))))) (bvand .def_48 (bvand state31 (bvor .def_303 (ite (bvult .def_307 (_ bv8 8)) (_ bv1 1) (_ bv0 1)))))) (_ bv0 2))) .def_272 state31)))) (= state45.next (ite .def_124 (_ bv0 4) (ite .def_479 (bvadd state45 ((_ zero_extend 3) .def_115)) state45)))) (= state48.next (ite .def_124 (_ bv0 4) (ite .def_479 (bvadd state48 ((_ zero_extend 3) .def_78)) state48)))) (= state44.next (store state44 .def_61 (ite (= .def_115 (_ bv1 1)) .def_351 (select state44 .def_61))))) (= state55.next (ite .def_124 (_ bv0 8) (ite (= (bvor .def_77 (bvnot .def_272)) (_ bv1 1)) .def_287 state55)))) (= state83.next (ite .def_124 (_ bv0 1) (ite (= state83 (_ bv1 1)) (_ bv1 1) (bvor state83 .def_432))))) (= state84.next (ite .def_124 (_ bv0 1) (bvor state84 .def_129)))) (= state87.next (ite .def_124 (_ bv0 4) (ite (= (bvor state83 .def_366) (_ bv1 1)) .def_125 state87)))) (= state103.next (ite .def_124 (_ bv0 8) (ite (= (bvand .def_116 .def_432) (_ bv1 1)) .def_351 state103)))) (= state109.next (_ bv0 1))))))))))))))))))))))))))))))))))))))))))
(define-fun P 
   ((state338 (_ BitVec 1)) (state337 (_ BitVec 1)) (state336 (_ BitVec 1)) (state335 (_ BitVec 1)) (state334 (_ BitVec 1)) (state333 (_ BitVec 1)) (state332 (_ BitVec 1)) (state31 (_ BitVec 1)) (state48 (_ BitVec 4)) (state331 (_ BitVec 1)) (state103 (_ BitVec 8)) (state44 (Array (_ BitVec 3) (_ BitVec 8))) (witness_0 (_ BitVec 1)) (state26 (_ BitVec 8)) (state84 (_ BitVec 1)) (state14 (Array (_ BitVec 3) (_ BitVec 8))) (state45 (_ BitVec 4)) (state87 (_ BitVec 4)) (state55 (_ BitVec 8)) (state19 (_ BitVec 4)) (state83 (_ BitVec 1)) (state16 (_ BitVec 4)) (state109 (_ BitVec 1)) (input10 (_ BitVec 1)) (input4 (_ BitVec 16)) (input2 (_ BitVec 1)) (input6 (_ BitVec 2)) (input7 (_ BitVec 16)) (input8 (_ BitVec 2)) (input9 (_ BitVec 1)))
    Bool
     (= witness_0 (_ bv1 1)))

(declare-var state338 (_ BitVec 1))
(declare-var state337 (_ BitVec 1))
(declare-var state336 (_ BitVec 1))
(declare-var state335 (_ BitVec 1))
(declare-var state334 (_ BitVec 1))
(declare-var state333 (_ BitVec 1))
(declare-var state332 (_ BitVec 1))
(declare-var state31 (_ BitVec 1))
(declare-var state48 (_ BitVec 4))
(declare-var state331 (_ BitVec 1))
(declare-var state103 (_ BitVec 8))
(declare-var state44 (Array (_ BitVec 3) (_ BitVec 8)))
(declare-var witness_0 (_ BitVec 1))
(declare-var state26 (_ BitVec 8))
(declare-var state84 (_ BitVec 1))
(declare-var state14 (Array (_ BitVec 3) (_ BitVec 8)))
(declare-var state45 (_ BitVec 4))
(declare-var state87 (_ BitVec 4))
(declare-var state55 (_ BitVec 8))
(declare-var state19 (_ BitVec 4))
(declare-var state83 (_ BitVec 1))
(declare-var state16 (_ BitVec 4))
(declare-var state109 (_ BitVec 1))

(declare-var state338.next (_ BitVec 1))
(declare-var state337.next (_ BitVec 1))
(declare-var state336.next (_ BitVec 1))
(declare-var state335.next (_ BitVec 1))
(declare-var state334.next (_ BitVec 1))
(declare-var state333.next (_ BitVec 1))
(declare-var state332.next (_ BitVec 1))
(declare-var state31.next (_ BitVec 1))
(declare-var state48.next (_ BitVec 4))
(declare-var state331.next (_ BitVec 1))
(declare-var state103.next (_ BitVec 8))
(declare-var state44.next (Array (_ BitVec 3) (_ BitVec 8)))
(declare-var witness_0.next (_ BitVec 1))
(declare-var state26.next (_ BitVec 8))
(declare-var state84.next (_ BitVec 1))
(declare-var state14.next (Array (_ BitVec 3) (_ BitVec 8)))
(declare-var state45.next (_ BitVec 4))
(declare-var state87.next (_ BitVec 4))
(declare-var state55.next (_ BitVec 8))
(declare-var state19.next (_ BitVec 4))
(declare-var state83.next (_ BitVec 1))
(declare-var state16.next (_ BitVec 4))
(declare-var state109.next (_ BitVec 1))

(declare-var input10 (_ BitVec 1))
(declare-var input4 (_ BitVec 16))
(declare-var input2 (_ BitVec 1))
(declare-var input6 (_ BitVec 2))
(declare-var input7 (_ BitVec 16))
(declare-var input8 (_ BitVec 2))
(declare-var input9 (_ BitVec 1))
(declare-var input10.next (_ BitVec 1))
(declare-var input4.next (_ BitVec 16))
(declare-var input2.next (_ BitVec 1))
(declare-var input6.next (_ BitVec 2))
(declare-var input7.next (_ BitVec 16))
(declare-var input8.next (_ BitVec 2))
(declare-var input9.next (_ BitVec 1))


(declare-rel INV ((_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 4) (_ BitVec 1) (_ BitVec 8) (Array (_ BitVec 3) (_ BitVec 8)) (_ BitVec 1) (_ BitVec 8) (_ BitVec 1) (Array (_ BitVec 3) (_ BitVec 8)) (_ BitVec 4) (_ BitVec 4) (_ BitVec 8) (_ BitVec 4) (_ BitVec 1) (_ BitVec 4) (_ BitVec 1) (_ BitVec 1) (_ BitVec 16) (_ BitVec 1) (_ BitVec 2) (_ BitVec 16) (_ BitVec 2) (_ BitVec 1)))
(declare-rel fail ())

(rule (=> 
  (Init state338 state337 state336 state335 state334 state333 state332 state31 state48 state331 state103 state44 witness_0 state26 state84 state14 state45 state87 state55 state19 state83 state16 state109 input10 input4 input2 input6 input7 input8 input9)
  (INV  state338 state337 state336 state335 state334 state333 state332 state31 state48 state331 state103 state44 witness_0 state26 state84 state14 state45 state87 state55 state19 state83 state16 state109 input10 input4 input2 input6 input7 input8 input9)))

(rule (=> (and
  (INV  state338 state337 state336 state335 state334 state333 state332 state31 state48 state331 state103 state44 witness_0 state26 state84 state14 state45 state87 state55 state19 state83 state16 state109 input10 input4 input2 input6 input7 input8 input9)
  (Trans state338 state337 state336 state335 state334 state333 state332 state31 state48 state331 state103 state44 witness_0 state26 state84 state14 state45 state87 state55 state19 state83 state16 state109 input10 input4 input2 input6 input7 input8 input9 state338.next state337.next state336.next state335.next state334.next state333.next state332.next state31.next state48.next state331.next state103.next state44.next witness_0.next state26.next state84.next state14.next state45.next state87.next state55.next state19.next state83.next state16.next state109.next input10.next input4.next input2.next input6.next input7.next input8.next input9.next))
  (INV  state338.next state337.next state336.next state335.next state334.next state333.next state332.next state31.next state48.next state331.next state103.next state44.next witness_0.next state26.next state84.next state14.next state45.next state87.next state55.next state19.next state83.next state16.next state109.next input10.next input4.next input2.next input6.next input7.next input8.next input9.next)))

(rule (=> (and
  (INV state338 state337 state336 state335 state334 state333 state332 state31 state48 state331 state103 state44 witness_0 state26 state84 state14 state45 state87 state55 state19 state83 state16 state109 input10 input4 input2 input6 input7 input8 input9) 
  (not (P state338 state337 state336 state335 state334 state333 state332 state31 state48 state331 state103 state44 witness_0 state26 state84 state14 state45 state87 state55 state19 state83 state16 state109 input10 input4 input2 input6 input7 input8 input9)))
  fail))

(query fail :print-certificate true)

