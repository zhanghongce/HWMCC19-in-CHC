

;----------------------------------------
;  CHC generated from BTOR
;  Generated by COSA2 (Pono)
;----------------------------------------

(set-option :fp.engine spacer)

(define-fun Init 
    ((state339 (_ BitVec 1)) (state338 (_ BitVec 1)) (state337 (_ BitVec 1)) (state336 (_ BitVec 1)) (state335 (_ BitVec 1)) (state334 (_ BitVec 1)) (state31 (_ BitVec 1)) (state19 (_ BitVec 4)) (state340 (_ BitVec 1)) (state44 (Array (_ BitVec 3) (_ BitVec 8))) (state85 (_ BitVec 1)) (state333 (_ BitVec 1)) (state16 (_ BitVec 4)) (state26 (_ BitVec 8)) (state89 (_ BitVec 4)) (witness_0 (_ BitVec 1)) (state55 (_ BitVec 8)) (state86 (_ BitVec 1)) (state14 (Array (_ BitVec 3) (_ BitVec 8))) (state45 (_ BitVec 4)) (state105 (_ BitVec 8)) (state48 (_ BitVec 4)) (state111 (_ BitVec 1)) (input10 (_ BitVec 1)) (input4 (_ BitVec 16)) (input2 (_ BitVec 1)) (input6 (_ BitVec 2)) (input7 (_ BitVec 16)) (input8 (_ BitVec 2)) (input9 (_ BitVec 1)))
     Bool
     (and (and (and (and (and (and (= state111 (_ bv1 1)) (= witness_0 (_ bv1 1))) (= (bvor (bvnot (bvcomp state48 state45)) (bvnot ((_ extract 0 0) input8))) (_ bv1 1))) (= (bvor (bvnot (bvcomp state19 state16)) (bvnot ((_ extract 1 1) input8))) (_ bv1 1))) (= (bvor (bvnot (bvand (bvcomp ((_ extract 2 0) state48) ((_ extract 2 0) state45)) (ite (not (= ((_ extract 3 3) state48) ((_ extract 3 3) state45))) (_ bv1 1) (_ bv0 1)))) (bvnot ((_ extract 0 0) input6))) (_ bv1 1))) (= (bvor (bvnot (bvand (bvcomp ((_ extract 2 0) state19) ((_ extract 2 0) state16)) (ite (not (= ((_ extract 3 3) state19) ((_ extract 3 3) state16))) (_ bv1 1) (_ bv0 1)))) (bvnot ((_ extract 1 1) input6))) (_ bv1 1))) (= (bvcomp state111 input9) (_ bv1 1))))
(define-fun Trans 
    ((state339 (_ BitVec 1)) (state338 (_ BitVec 1)) (state337 (_ BitVec 1)) (state336 (_ BitVec 1)) (state335 (_ BitVec 1)) (state334 (_ BitVec 1)) (state31 (_ BitVec 1)) (state19 (_ BitVec 4)) (state340 (_ BitVec 1)) (state44 (Array (_ BitVec 3) (_ BitVec 8))) (state85 (_ BitVec 1)) (state333 (_ BitVec 1)) (state16 (_ BitVec 4)) (state26 (_ BitVec 8)) (state89 (_ BitVec 4)) (witness_0 (_ BitVec 1)) (state55 (_ BitVec 8)) (state86 (_ BitVec 1)) (state14 (Array (_ BitVec 3) (_ BitVec 8))) (state45 (_ BitVec 4)) (state105 (_ BitVec 8)) (state48 (_ BitVec 4)) (state111 (_ BitVec 1)) (input10 (_ BitVec 1)) (input4 (_ BitVec 16)) (input2 (_ BitVec 1)) (input6 (_ BitVec 2)) (input7 (_ BitVec 16)) (input8 (_ BitVec 2)) (input9 (_ BitVec 1)) (state339.next (_ BitVec 1)) (state338.next (_ BitVec 1)) (state337.next (_ BitVec 1)) (state336.next (_ BitVec 1)) (state335.next (_ BitVec 1)) (state334.next (_ BitVec 1)) (state31.next (_ BitVec 1)) (state19.next (_ BitVec 4)) (state340.next (_ BitVec 1)) (state44.next (Array (_ BitVec 3) (_ BitVec 8))) (state85.next (_ BitVec 1)) (state333.next (_ BitVec 1)) (state16.next (_ BitVec 4)) (state26.next (_ BitVec 8)) (state89.next (_ BitVec 4)) (witness_0.next (_ BitVec 1)) (state55.next (_ BitVec 8)) (state86.next (_ BitVec 1)) (state14.next (Array (_ BitVec 3) (_ BitVec 8))) (state45.next (_ BitVec 4)) (state105.next (_ BitVec 8)) (state48.next (_ BitVec 4)) (state111.next (_ BitVec 1)) (input10.next (_ BitVec 1)) (input4.next (_ BitVec 16)) (input2.next (_ BitVec 1)) (input6.next (_ BitVec 2)) (input7.next (_ BitVec 16)) (input8.next (_ BitVec 2)) (input9.next (_ BitVec 1)))
    Bool
     (let ((.def_26 ((_ extract 2 0) state16))) (let ((.def_30 ((_ extract 2 0) state19))) (let ((.def_32 ((_ extract 1 1) input8))) (let ((.def_34 (bvnot (bvcomp state19 state16)))) (let ((.def_35 (bvand .def_32 .def_34))) (let ((.def_48 (bvand (bvand .def_35 (ite (not (bvult state26 (_ bv8 8))) (_ bv1 1) (_ bv0 1))) state31))) (let ((.def_61 ((_ extract 2 0) state45))) (let ((.def_65 ((_ extract 2 0) state48))) (let ((.def_67 ((_ extract 0 0) input8))) (let ((.def_69 (bvnot (bvcomp state48 state45)))) (let ((.def_70 (bvand .def_67 .def_69))) (let ((.def_77 (bvnot state31))) (let ((.def_78 (bvand (bvand .def_70 (ite (not (bvult state55 (_ bv8 8))) (_ bv1 1) (_ bv0 1))) .def_77))) (let ((.def_117 ((_ extract 0 0) input6))) (let ((.def_118 (bvnot state85))) (let ((.def_126 (= input9 (_ bv1 1)))) (let ((.def_127 (ite .def_126 (_ bv0 4) (bvadd (bvadd state89 ((_ zero_extend 3) (bvand .def_117 .def_118))) (bvneg ((_ zero_extend 3) .def_78)))))) (let ((.def_131 (bvand (bvand (bvand state85 (bvnot state86)) (ite (not (= state89 (_ bv0 4))) (_ bv1 1) (_ bv0 1))) (ite (= .def_127 (_ bv0 4)) (_ bv1 1) (_ bv0 1))))) (let ((.def_212 ((_ extract 1 1) input6))) (let ((.def_261 ((_ extract 0 0) (bvadd (_ bv1 3) ((_ zero_extend 2) state31))))) (let ((.def_262 (concat .def_35 .def_70))) (let ((.def_265 ((_ extract 0 0) (bvlshr .def_262 ((_ zero_extend 1) .def_261))))) (let ((.def_275 ((_ extract 0 0) (bvadd (_ bv1 3) ((_ zero_extend 1) (bvadd (_ bv1 2) ((_ zero_extend 1) state31))))))) (let ((.def_282 (ite (= (bvand ((_ extract 0 0) (bvlshr .def_262 ((_ zero_extend 1) .def_275))) (bvnot .def_265)) (_ bv1 1)) .def_275 (ite (= .def_265 (_ bv1 1)) .def_261 state31)))) (let ((.def_283 (= .def_282 (_ bv1 1)))) (let ((.def_284 (ite .def_283 state55 (bvadd state55 ((_ extract 7 0) input7))))) (let ((.def_292 (bvnot .def_70))) (let ((.def_297 (ite .def_126 (_ bv0 8) (ite (= (bvand .def_77 .def_292) (_ bv1 1)) state55 (ite (= .def_78 (_ bv1 1)) (bvadd (_ bv248 8) .def_284) .def_284))))) (let ((.def_306 (ite .def_283 (bvadd state26 ((_ extract 15 8) input7)) state26))) (let ((.def_313 (bvnot .def_35))) (let ((.def_317 (ite .def_126 (_ bv0 8) (ite (= (bvand state31 .def_313) (_ bv1 1)) state26 (ite (= .def_48 (_ bv1 1)) (bvadd (_ bv248 8) .def_306) .def_306))))) (let ((.def_361 ((_ extract 7 0) input4))) (let ((.def_376 (bvor input9 (bvor .def_78 .def_117)))) (let ((.def_442 (bvand input10 .def_117))) (let ((.def_461 (= (bvor input9 (bvor .def_48 .def_212)) (_ bv1 1)))) (let ((.def_489 (= .def_376 (_ bv1 1)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= witness_0.next (bvnot (ite (= (bvand (ite (= state111 (_ bv1 1)) (_ bv0 1) (_ bv1 1)) (bvnot (bvor (bvnot .def_131) (bvcomp state105 (bvor (bvand (select state14 .def_30) (concat .def_48 (concat .def_48 (concat .def_48 (concat .def_48 (concat .def_48 (concat .def_48 (concat .def_48 .def_48)))))))) (bvand (select state44 .def_65) (concat .def_78 (concat .def_78 (concat .def_78 (concat .def_78 (concat .def_78 (concat .def_78 (concat .def_78 .def_78))))))))))))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)))) (= (bvor .def_69 (bvnot .def_67)) (_ bv1 1))) (= (bvor (bvnot ((_ extract 0 0) input8.next)) (bvnot (bvcomp state48.next state45.next))) (_ bv1 1))) (= (bvor .def_34 (bvnot .def_32)) (_ bv1 1))) (= (bvor (bvnot ((_ extract 1 1) input8.next)) (bvnot (bvcomp state19.next state16.next))) (_ bv1 1))) (= (bvor (bvnot (bvand (bvcomp .def_65 .def_61) (ite (not (= ((_ extract 3 3) state48) ((_ extract 3 3) state45))) (_ bv1 1) (_ bv0 1)))) (bvnot .def_117)) (_ bv1 1))) (= (bvor (bvnot ((_ extract 0 0) input6.next)) (bvnot (bvand (ite (not (= ((_ extract 3 3) state45.next) ((_ extract 3 3) state48.next))) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ extract 2 0) state48.next) ((_ extract 2 0) state45.next))))) (_ bv1 1))) (= (bvor (bvnot (bvand (bvcomp .def_30 .def_26) (ite (not (= ((_ extract 3 3) state19) ((_ extract 3 3) state16))) (_ bv1 1) (_ bv0 1)))) (bvnot .def_212)) (_ bv1 1))) (= (bvor (bvnot ((_ extract 1 1) input6.next)) (bvnot (bvand (ite (not (= ((_ extract 3 3) state16.next) ((_ extract 3 3) state19.next))) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ extract 2 0) state19.next) ((_ extract 2 0) state16.next))))) (_ bv1 1))) (= (bvcomp state111 input9) (_ bv1 1))) (= (bvcomp state111.next input9.next) (_ bv1 1))) (= state16.next (ite .def_126 (_ bv0 4) (ite .def_461 (bvadd state16 ((_ zero_extend 3) .def_212)) state16)))) (= state19.next (ite .def_126 (_ bv0 4) (ite .def_461 (bvadd state19 ((_ zero_extend 3) .def_48)) state19)))) (= state14.next (store state14 .def_26 (ite (= .def_212 (_ bv1 1)) ((_ extract 15 8) input4) (select state14 .def_26))))) (= state26.next (ite .def_126 (_ bv0 8) (ite (= (bvor state31 .def_282) (_ bv1 1)) .def_317 state26)))) (= state31.next (ite .def_126 (_ bv0 1) (ite (not (= (concat (bvand .def_78 (bvand .def_77 (bvor .def_292 (ite (bvult .def_297 (_ bv8 8)) (_ bv1 1) (_ bv0 1))))) (bvand .def_48 (bvand state31 (bvor .def_313 (ite (bvult .def_317 (_ bv8 8)) (_ bv1 1) (_ bv0 1)))))) (_ bv0 2))) .def_282 state31)))) (= state45.next (ite .def_126 (_ bv0 4) (ite .def_489 (bvadd state45 ((_ zero_extend 3) .def_117)) state45)))) (= state48.next (ite .def_126 (_ bv0 4) (ite .def_489 (bvadd state48 ((_ zero_extend 3) .def_78)) state48)))) (= state44.next (store state44 .def_61 (ite (= .def_117 (_ bv1 1)) .def_361 (select state44 .def_61))))) (= state55.next (ite .def_126 (_ bv0 8) (ite (= (bvor .def_77 (bvnot .def_282)) (_ bv1 1)) .def_297 state55)))) (= state85.next (ite .def_126 (_ bv0 1) (ite (= state85 (_ bv1 1)) (_ bv1 1) (bvor state85 .def_442))))) (= state86.next (ite .def_126 (_ bv0 1) (bvor state86 .def_131)))) (= state89.next (ite .def_126 (_ bv0 4) (ite (= (bvor state85 .def_376) (_ bv1 1)) .def_127 state89)))) (= state105.next (ite .def_126 (_ bv0 8) (ite (= (bvand .def_118 .def_442) (_ bv1 1)) .def_361 state105)))) (= state111.next (_ bv0 1))))))))))))))))))))))))))))))))))))))))
(define-fun P 
   ((state339 (_ BitVec 1)) (state338 (_ BitVec 1)) (state337 (_ BitVec 1)) (state336 (_ BitVec 1)) (state335 (_ BitVec 1)) (state334 (_ BitVec 1)) (state31 (_ BitVec 1)) (state19 (_ BitVec 4)) (state340 (_ BitVec 1)) (state44 (Array (_ BitVec 3) (_ BitVec 8))) (state85 (_ BitVec 1)) (state333 (_ BitVec 1)) (state16 (_ BitVec 4)) (state26 (_ BitVec 8)) (state89 (_ BitVec 4)) (witness_0 (_ BitVec 1)) (state55 (_ BitVec 8)) (state86 (_ BitVec 1)) (state14 (Array (_ BitVec 3) (_ BitVec 8))) (state45 (_ BitVec 4)) (state105 (_ BitVec 8)) (state48 (_ BitVec 4)) (state111 (_ BitVec 1)) (input10 (_ BitVec 1)) (input4 (_ BitVec 16)) (input2 (_ BitVec 1)) (input6 (_ BitVec 2)) (input7 (_ BitVec 16)) (input8 (_ BitVec 2)) (input9 (_ BitVec 1)))
    Bool
     (= witness_0 (_ bv1 1)))

(declare-var state339 (_ BitVec 1))
(declare-var state338 (_ BitVec 1))
(declare-var state337 (_ BitVec 1))
(declare-var state336 (_ BitVec 1))
(declare-var state335 (_ BitVec 1))
(declare-var state334 (_ BitVec 1))
(declare-var state31 (_ BitVec 1))
(declare-var state19 (_ BitVec 4))
(declare-var state340 (_ BitVec 1))
(declare-var state44 (Array (_ BitVec 3) (_ BitVec 8)))
(declare-var state85 (_ BitVec 1))
(declare-var state333 (_ BitVec 1))
(declare-var state16 (_ BitVec 4))
(declare-var state26 (_ BitVec 8))
(declare-var state89 (_ BitVec 4))
(declare-var witness_0 (_ BitVec 1))
(declare-var state55 (_ BitVec 8))
(declare-var state86 (_ BitVec 1))
(declare-var state14 (Array (_ BitVec 3) (_ BitVec 8)))
(declare-var state45 (_ BitVec 4))
(declare-var state105 (_ BitVec 8))
(declare-var state48 (_ BitVec 4))
(declare-var state111 (_ BitVec 1))

(declare-var state339.next (_ BitVec 1))
(declare-var state338.next (_ BitVec 1))
(declare-var state337.next (_ BitVec 1))
(declare-var state336.next (_ BitVec 1))
(declare-var state335.next (_ BitVec 1))
(declare-var state334.next (_ BitVec 1))
(declare-var state31.next (_ BitVec 1))
(declare-var state19.next (_ BitVec 4))
(declare-var state340.next (_ BitVec 1))
(declare-var state44.next (Array (_ BitVec 3) (_ BitVec 8)))
(declare-var state85.next (_ BitVec 1))
(declare-var state333.next (_ BitVec 1))
(declare-var state16.next (_ BitVec 4))
(declare-var state26.next (_ BitVec 8))
(declare-var state89.next (_ BitVec 4))
(declare-var witness_0.next (_ BitVec 1))
(declare-var state55.next (_ BitVec 8))
(declare-var state86.next (_ BitVec 1))
(declare-var state14.next (Array (_ BitVec 3) (_ BitVec 8)))
(declare-var state45.next (_ BitVec 4))
(declare-var state105.next (_ BitVec 8))
(declare-var state48.next (_ BitVec 4))
(declare-var state111.next (_ BitVec 1))

(declare-var input10 (_ BitVec 1))
(declare-var input4 (_ BitVec 16))
(declare-var input2 (_ BitVec 1))
(declare-var input6 (_ BitVec 2))
(declare-var input7 (_ BitVec 16))
(declare-var input8 (_ BitVec 2))
(declare-var input9 (_ BitVec 1))
(declare-var input10.next (_ BitVec 1))
(declare-var input4.next (_ BitVec 16))
(declare-var input2.next (_ BitVec 1))
(declare-var input6.next (_ BitVec 2))
(declare-var input7.next (_ BitVec 16))
(declare-var input8.next (_ BitVec 2))
(declare-var input9.next (_ BitVec 1))


(declare-rel INV ((_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 4) (_ BitVec 1) (Array (_ BitVec 3) (_ BitVec 8)) (_ BitVec 1) (_ BitVec 1) (_ BitVec 4) (_ BitVec 8) (_ BitVec 4) (_ BitVec 1) (_ BitVec 8) (_ BitVec 1) (Array (_ BitVec 3) (_ BitVec 8)) (_ BitVec 4) (_ BitVec 8) (_ BitVec 4) (_ BitVec 1) (_ BitVec 1) (_ BitVec 16) (_ BitVec 1) (_ BitVec 2) (_ BitVec 16) (_ BitVec 2) (_ BitVec 1)))
(declare-rel fail ())

(rule (=> 
  (Init state339 state338 state337 state336 state335 state334 state31 state19 state340 state44 state85 state333 state16 state26 state89 witness_0 state55 state86 state14 state45 state105 state48 state111 input10 input4 input2 input6 input7 input8 input9)
  (INV  state339 state338 state337 state336 state335 state334 state31 state19 state340 state44 state85 state333 state16 state26 state89 witness_0 state55 state86 state14 state45 state105 state48 state111 input10 input4 input2 input6 input7 input8 input9)))

(rule (=> (and
  (INV  state339 state338 state337 state336 state335 state334 state31 state19 state340 state44 state85 state333 state16 state26 state89 witness_0 state55 state86 state14 state45 state105 state48 state111 input10 input4 input2 input6 input7 input8 input9)
  (Trans state339 state338 state337 state336 state335 state334 state31 state19 state340 state44 state85 state333 state16 state26 state89 witness_0 state55 state86 state14 state45 state105 state48 state111 input10 input4 input2 input6 input7 input8 input9 state339.next state338.next state337.next state336.next state335.next state334.next state31.next state19.next state340.next state44.next state85.next state333.next state16.next state26.next state89.next witness_0.next state55.next state86.next state14.next state45.next state105.next state48.next state111.next input10.next input4.next input2.next input6.next input7.next input8.next input9.next))
  (INV  state339.next state338.next state337.next state336.next state335.next state334.next state31.next state19.next state340.next state44.next state85.next state333.next state16.next state26.next state89.next witness_0.next state55.next state86.next state14.next state45.next state105.next state48.next state111.next input10.next input4.next input2.next input6.next input7.next input8.next input9.next)))

(rule (=> (and
  (INV state339 state338 state337 state336 state335 state334 state31 state19 state340 state44 state85 state333 state16 state26 state89 witness_0 state55 state86 state14 state45 state105 state48 state111 input10 input4 input2 input6 input7 input8 input9) 
  (not (P state339 state338 state337 state336 state335 state334 state31 state19 state340 state44 state85 state333 state16 state26 state89 witness_0 state55 state86 state14 state45 state105 state48 state111 input10 input4 input2 input6 input7 input8 input9)))
  fail))

(query fail :print-certificate true)

