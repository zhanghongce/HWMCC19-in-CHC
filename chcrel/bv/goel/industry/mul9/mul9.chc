

;----------------------------------------
;  CHC generated from BTOR
;  Generated by COSA2 (Pono)
;----------------------------------------

(set-option :fp.engine spacer)

(define-fun Init 
    ((state269 (_ BitVec 1)) (state264 (_ BitVec 1)) (state251 (_ BitVec 1)) (state81 (_ BitVec 1)) (state79 (_ BitVec 1)) (state77 (_ BitVec 1)) (state75 (_ BitVec 1)) (state73 (_ BitVec 1)) (state71 (_ BitVec 1)) (state69 (_ BitVec 1)) (state27 (_ BitVec 1)) (state25 (_ BitVec 32)) (state85 (_ BitVec 1)) (state20 (_ BitVec 1)) (state83 (_ BitVec 1)) (state18 (_ BitVec 64)) (state61 (_ BitVec 1)) (state15 (_ BitVec 1)) (state220 (_ BitVec 1)) (state42 (_ BitVec 32)) (state30 (_ BitVec 32)) (state12 (_ BitVec 64)) (state32 (_ BitVec 1)) (state44 (_ BitVec 1)) (state37 (_ BitVec 32)) (state63 (_ BitVec 1)) (state39 (_ BitVec 1)) (state65 (_ BitVec 1)) (state67 (_ BitVec 1)) (input9 (_ BitVec 1)) (input4 (_ BitVec 32)) (input2 (_ BitVec 1)) (input5 (_ BitVec 32)) (input6 (_ BitVec 1)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)))
     Bool
     (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= state12 (_ bv0 64)) (= state15 (_ bv0 1))) (= state18 (_ bv0 64))) (= state20 (_ bv0 1))) (= state25 (_ bv0 32))) (= state27 (_ bv0 1))) (= state30 (_ bv0 32))) (= state32 (_ bv0 1))) (= state37 (_ bv0 32))) (= state39 (_ bv0 1))) (= state42 (_ bv0 32))) (= state44 (_ bv0 1))) (= state61 (_ bv0 1))) (= state63 (_ bv0 1))) (= state65 (_ bv0 1))) (= state67 (_ bv0 1))) (= state69 (_ bv0 1))) (= state71 (_ bv0 1))) (= state73 (_ bv0 1))) (= state75 (_ bv0 1))) (= state77 (_ bv0 1))) (= state79 (_ bv0 1))) (= state81 (_ bv0 1))) (= state83 (_ bv0 1))) (= state85 (_ bv0 1))) (= state220 (_ bv0 1))) (= state251 (_ bv0 1))) (= state264 (_ bv0 1))) (= state269 (_ bv0 1))))
(define-fun Trans 
    ((state269 (_ BitVec 1)) (state264 (_ BitVec 1)) (state251 (_ BitVec 1)) (state81 (_ BitVec 1)) (state79 (_ BitVec 1)) (state77 (_ BitVec 1)) (state75 (_ BitVec 1)) (state73 (_ BitVec 1)) (state71 (_ BitVec 1)) (state69 (_ BitVec 1)) (state27 (_ BitVec 1)) (state25 (_ BitVec 32)) (state85 (_ BitVec 1)) (state20 (_ BitVec 1)) (state83 (_ BitVec 1)) (state18 (_ BitVec 64)) (state61 (_ BitVec 1)) (state15 (_ BitVec 1)) (state220 (_ BitVec 1)) (state42 (_ BitVec 32)) (state30 (_ BitVec 32)) (state12 (_ BitVec 64)) (state32 (_ BitVec 1)) (state44 (_ BitVec 1)) (state37 (_ BitVec 32)) (state63 (_ BitVec 1)) (state39 (_ BitVec 1)) (state65 (_ BitVec 1)) (state67 (_ BitVec 1)) (input9 (_ BitVec 1)) (input4 (_ BitVec 32)) (input2 (_ BitVec 1)) (input5 (_ BitVec 32)) (input6 (_ BitVec 1)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)) (state269.next (_ BitVec 1)) (state264.next (_ BitVec 1)) (state251.next (_ BitVec 1)) (state81.next (_ BitVec 1)) (state79.next (_ BitVec 1)) (state77.next (_ BitVec 1)) (state75.next (_ BitVec 1)) (state73.next (_ BitVec 1)) (state71.next (_ BitVec 1)) (state69.next (_ BitVec 1)) (state27.next (_ BitVec 1)) (state25.next (_ BitVec 32)) (state85.next (_ BitVec 1)) (state20.next (_ BitVec 1)) (state83.next (_ BitVec 1)) (state18.next (_ BitVec 64)) (state61.next (_ BitVec 1)) (state15.next (_ BitVec 1)) (state220.next (_ BitVec 1)) (state42.next (_ BitVec 32)) (state30.next (_ BitVec 32)) (state12.next (_ BitVec 64)) (state32.next (_ BitVec 1)) (state44.next (_ BitVec 1)) (state37.next (_ BitVec 32)) (state63.next (_ BitVec 1)) (state39.next (_ BitVec 1)) (state65.next (_ BitVec 1)) (state67.next (_ BitVec 1)) (input9.next (_ BitVec 1)) (input4.next (_ BitVec 32)) (input2.next (_ BitVec 1)) (input5.next (_ BitVec 32)) (input6.next (_ BitVec 1)) (input7.next (_ BitVec 1)) (input8.next (_ BitVec 1)))
    Bool
     (let ((.def_123 (= state71 (_ bv0 1)))) (let ((.def_135 (= state77 (_ bv0 1)))) (let ((.def_139 (= state79 (_ bv0 1)))) (let ((.def_153 (= state61 (_ bv1 1)))) (let ((.def_207 (ite .def_153 state63 (_ bv0 1)))) (let ((.def_209 (ite (= .def_207 (_ bv1 1)) state71 (_ bv0 1)))) (let ((.def_211 (ite (= .def_209 (_ bv1 1)) state73 (_ bv0 1)))) (let ((.def_213 (ite (= .def_211 (_ bv1 1)) state75 (_ bv0 1)))) (let ((.def_215 (ite (= .def_213 (_ bv1 1)) state77 (_ bv0 1)))) (let ((.def_217 (ite (= .def_215 (_ bv1 1)) state79 (_ bv0 1)))) (let ((.def_219 (ite (= .def_217 (_ bv1 1)) state81 (_ bv0 1)))) (let ((.def_221 (ite (= .def_219 (_ bv1 1)) state83 (_ bv0 1)))) (let ((.def_223 (ite (= .def_221 (_ bv1 1)) state85 (_ bv0 1)))) (let ((.def_235 (ite (= .def_223 (_ bv1 1)) state65 (_ bv0 1)))) (let ((.def_412 (bvand input6 input7))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= state12.next (ite (= state220 (_ bv1 1)) (concat (_ bv0 4) ((_ extract 61 2) (ite (= (bvand (bvand (bvcomp (ite (= state69 (_ bv1 1)) state69 (ite (= state67 (_ bv1 1)) state67 (ite (= state65 (_ bv1 1)) state65 (ite (= state85 (_ bv1 1)) state85 (ite (= state83 (_ bv1 1)) state83 (ite (= state81 (_ bv1 1)) state81 (ite .def_139 state79 (ite .def_135 state77 (ite (= state75 (_ bv1 1)) state75 (ite (= state73 (_ bv1 1)) state73 (ite .def_123 state71 (ite (= state63 (_ bv1 1)) state63 (ite .def_153 state61 (_ bv0 1)))))))))))))) (_ bv1 1)) (bvcomp input4 (_ bv3735928559 32))) (bvcomp input5 (_ bv12245771 32))) (_ bv1 1)) (bvadd (_ bv1 64) (bvmul ((_ zero_extend 32) state25) ((_ zero_extend 32) state37))) (bvmul ((_ zero_extend 32) state25) ((_ zero_extend 32) state37))))) (_ bv0 64))) (= state15.next state251)) (= state18.next (ite (= state269 (_ bv1 1)) (ite (= state264 (_ bv1 1)) (concat (_ bv0 4) ((_ extract 61 2) (bvmul ((_ zero_extend 32) state30) ((_ zero_extend 32) state42)))) (_ bv0 64)) state18))) (= state20.next state269)) (= input4 state25.next)) (= input8 state27.next)) (= state30.next (ite (= (bvor input8 .def_412) (_ bv1 1)) input4 state30))) (= input8 state32.next)) (= input5 state37.next)) (= input9 state39.next)) (= state42.next (ite (= (bvor input9 .def_412) (_ bv1 1)) input5 state42))) (= input9 state44.next)) (= state61.next (ite (not (= (ite (not .def_153) (_ bv1 1) (_ bv0 1)) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= state63.next (ite (not (= state61 (ite (not (= state63 (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= state65.next (ite (not (= .def_223 (ite (not (= state65 (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= state67.next (ite (not (= .def_235 (ite (not (= state67 (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= state69.next (ite (not (= (ite (= .def_235 (_ bv1 1)) state67 (_ bv0 1)) (ite (not (= state69 (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= state71.next (ite (not (= .def_207 (ite (not .def_123) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= state73.next (ite (not (= .def_209 (ite (not (= state73 (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= state75.next (ite (not (= .def_211 (ite (not (= state75 (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= state77.next (ite (not (= .def_213 (ite (not .def_135) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= state79.next (ite (not (= .def_215 (ite (not .def_139) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= state81.next (ite (not (= .def_217 (ite (not (= state81 (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= state83.next (ite (not (= .def_219 (ite (not (= state83 (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= state85.next (ite (not (= .def_221 (ite (not (= state85 (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= input6 state220.next)) (= input7 state251.next)) (= input6 state264.next)) (= input7 state269.next))))))))))))))))))
(define-fun P 
   ((state269 (_ BitVec 1)) (state264 (_ BitVec 1)) (state251 (_ BitVec 1)) (state81 (_ BitVec 1)) (state79 (_ BitVec 1)) (state77 (_ BitVec 1)) (state75 (_ BitVec 1)) (state73 (_ BitVec 1)) (state71 (_ BitVec 1)) (state69 (_ BitVec 1)) (state27 (_ BitVec 1)) (state25 (_ BitVec 32)) (state85 (_ BitVec 1)) (state20 (_ BitVec 1)) (state83 (_ BitVec 1)) (state18 (_ BitVec 64)) (state61 (_ BitVec 1)) (state15 (_ BitVec 1)) (state220 (_ BitVec 1)) (state42 (_ BitVec 32)) (state30 (_ BitVec 32)) (state12 (_ BitVec 64)) (state32 (_ BitVec 1)) (state44 (_ BitVec 1)) (state37 (_ BitVec 32)) (state63 (_ BitVec 1)) (state39 (_ BitVec 1)) (state65 (_ BitVec 1)) (state67 (_ BitVec 1)) (input9 (_ BitVec 1)) (input4 (_ BitVec 32)) (input2 (_ BitVec 1)) (input5 (_ BitVec 32)) (input6 (_ BitVec 1)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)))
    Bool
     (not (= (bvand (bvand (bvcomp (ite (= state15 (_ bv1 1)) state12 (_ bv0 64)) (ite (= state20 (_ bv1 1)) state18 (_ bv0 64))) (bvcomp (ite (= state27 (_ bv1 1)) state25 (_ bv0 32)) (ite (= state32 (_ bv1 1)) state30 (_ bv0 32)))) (bvcomp (ite (= state39 (_ bv1 1)) state37 (_ bv0 32)) (ite (= state44 (_ bv1 1)) state42 (_ bv0 32)))) (_ bv0 1))))

(declare-var state269 (_ BitVec 1))
(declare-var state264 (_ BitVec 1))
(declare-var state251 (_ BitVec 1))
(declare-var state81 (_ BitVec 1))
(declare-var state79 (_ BitVec 1))
(declare-var state77 (_ BitVec 1))
(declare-var state75 (_ BitVec 1))
(declare-var state73 (_ BitVec 1))
(declare-var state71 (_ BitVec 1))
(declare-var state69 (_ BitVec 1))
(declare-var state27 (_ BitVec 1))
(declare-var state25 (_ BitVec 32))
(declare-var state85 (_ BitVec 1))
(declare-var state20 (_ BitVec 1))
(declare-var state83 (_ BitVec 1))
(declare-var state18 (_ BitVec 64))
(declare-var state61 (_ BitVec 1))
(declare-var state15 (_ BitVec 1))
(declare-var state220 (_ BitVec 1))
(declare-var state42 (_ BitVec 32))
(declare-var state30 (_ BitVec 32))
(declare-var state12 (_ BitVec 64))
(declare-var state32 (_ BitVec 1))
(declare-var state44 (_ BitVec 1))
(declare-var state37 (_ BitVec 32))
(declare-var state63 (_ BitVec 1))
(declare-var state39 (_ BitVec 1))
(declare-var state65 (_ BitVec 1))
(declare-var state67 (_ BitVec 1))

(declare-var state269.next (_ BitVec 1))
(declare-var state264.next (_ BitVec 1))
(declare-var state251.next (_ BitVec 1))
(declare-var state81.next (_ BitVec 1))
(declare-var state79.next (_ BitVec 1))
(declare-var state77.next (_ BitVec 1))
(declare-var state75.next (_ BitVec 1))
(declare-var state73.next (_ BitVec 1))
(declare-var state71.next (_ BitVec 1))
(declare-var state69.next (_ BitVec 1))
(declare-var state27.next (_ BitVec 1))
(declare-var state25.next (_ BitVec 32))
(declare-var state85.next (_ BitVec 1))
(declare-var state20.next (_ BitVec 1))
(declare-var state83.next (_ BitVec 1))
(declare-var state18.next (_ BitVec 64))
(declare-var state61.next (_ BitVec 1))
(declare-var state15.next (_ BitVec 1))
(declare-var state220.next (_ BitVec 1))
(declare-var state42.next (_ BitVec 32))
(declare-var state30.next (_ BitVec 32))
(declare-var state12.next (_ BitVec 64))
(declare-var state32.next (_ BitVec 1))
(declare-var state44.next (_ BitVec 1))
(declare-var state37.next (_ BitVec 32))
(declare-var state63.next (_ BitVec 1))
(declare-var state39.next (_ BitVec 1))
(declare-var state65.next (_ BitVec 1))
(declare-var state67.next (_ BitVec 1))

(declare-var input9 (_ BitVec 1))
(declare-var input4 (_ BitVec 32))
(declare-var input2 (_ BitVec 1))
(declare-var input5 (_ BitVec 32))
(declare-var input6 (_ BitVec 1))
(declare-var input7 (_ BitVec 1))
(declare-var input8 (_ BitVec 1))
(declare-var input9.next (_ BitVec 1))
(declare-var input4.next (_ BitVec 32))
(declare-var input2.next (_ BitVec 1))
(declare-var input5.next (_ BitVec 32))
(declare-var input6.next (_ BitVec 1))
(declare-var input7.next (_ BitVec 1))
(declare-var input8.next (_ BitVec 1))


(declare-rel INV ((_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 32) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 64) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) (_ BitVec 1) (_ BitVec 1) (_ BitVec 32) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1)))
(declare-rel fail ())

(rule (=> 
  (Init state269 state264 state251 state81 state79 state77 state75 state73 state71 state69 state27 state25 state85 state20 state83 state18 state61 state15 state220 state42 state30 state12 state32 state44 state37 state63 state39 state65 state67 input9 input4 input2 input5 input6 input7 input8)
  (INV  state269 state264 state251 state81 state79 state77 state75 state73 state71 state69 state27 state25 state85 state20 state83 state18 state61 state15 state220 state42 state30 state12 state32 state44 state37 state63 state39 state65 state67 input9 input4 input2 input5 input6 input7 input8)))

(rule (=> (and
  (INV  state269 state264 state251 state81 state79 state77 state75 state73 state71 state69 state27 state25 state85 state20 state83 state18 state61 state15 state220 state42 state30 state12 state32 state44 state37 state63 state39 state65 state67 input9 input4 input2 input5 input6 input7 input8)
  (Trans state269 state264 state251 state81 state79 state77 state75 state73 state71 state69 state27 state25 state85 state20 state83 state18 state61 state15 state220 state42 state30 state12 state32 state44 state37 state63 state39 state65 state67 input9 input4 input2 input5 input6 input7 input8 state269.next state264.next state251.next state81.next state79.next state77.next state75.next state73.next state71.next state69.next state27.next state25.next state85.next state20.next state83.next state18.next state61.next state15.next state220.next state42.next state30.next state12.next state32.next state44.next state37.next state63.next state39.next state65.next state67.next input9.next input4.next input2.next input5.next input6.next input7.next input8.next))
  (INV  state269.next state264.next state251.next state81.next state79.next state77.next state75.next state73.next state71.next state69.next state27.next state25.next state85.next state20.next state83.next state18.next state61.next state15.next state220.next state42.next state30.next state12.next state32.next state44.next state37.next state63.next state39.next state65.next state67.next input9.next input4.next input2.next input5.next input6.next input7.next input8.next)))

(rule (=> (and
  (INV state269 state264 state251 state81 state79 state77 state75 state73 state71 state69 state27 state25 state85 state20 state83 state18 state61 state15 state220 state42 state30 state12 state32 state44 state37 state63 state39 state65 state67 input9 input4 input2 input5 input6 input7 input8) 
  (not (P state269 state264 state251 state81 state79 state77 state75 state73 state71 state69 state27 state25 state85 state20 state83 state18 state61 state15 state220 state42 state30 state12 state32 state44 state37 state63 state39 state65 state67 input9 input4 input2 input5 input6 input7 input8)))
  fail))

(query fail :print-certificate true)

