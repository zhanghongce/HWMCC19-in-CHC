

;----------------------------------------
;  CHC generated from BTOR
;  Generated by COSA2 (Pono)
;----------------------------------------

(set-option :fp.engine spacer)

(define-fun Init 
    ((state94 (_ BitVec 1)) (state97 (_ BitVec 1)) (state25 (_ BitVec 1)) (state39 (_ BitVec 512)) (state22 (_ BitVec 256)) (witness_0 (_ BitVec 1)) (state69 (_ BitVec 1)) (state92 (_ BitVec 1)) (input20 (_ BitVec 1)) (input19 (_ BitVec 287)) (input17 (_ BitVec 1)) (input16 (_ BitVec 1)) (input15 (_ BitVec 1)) (input14 (_ BitVec 1)) (input13 (_ BitVec 279)) (input11 (_ BitVec 1)) (input10 (_ BitVec 1)) (input9 (_ BitVec 1)) (input3 (_ BitVec 1)) (input2 (_ BitVec 1)) (input4 (_ BitVec 1)) (input5 (_ BitVec 1)) (input6 (_ BitVec 1)) (input8 (_ BitVec 2)))
     Bool
     (and (and (and (and (= state25 (_ bv0 1)) (= state69 (_ bv0 1))) (= witness_0 (_ bv1 1))) (= state92 (_ bv0 1))) (= state94 (_ bv0 1))))
(define-fun Trans 
    ((state94 (_ BitVec 1)) (state97 (_ BitVec 1)) (state25 (_ BitVec 1)) (state39 (_ BitVec 512)) (state22 (_ BitVec 256)) (witness_0 (_ BitVec 1)) (state69 (_ BitVec 1)) (state92 (_ BitVec 1)) (input20 (_ BitVec 1)) (input19 (_ BitVec 287)) (input17 (_ BitVec 1)) (input16 (_ BitVec 1)) (input15 (_ BitVec 1)) (input14 (_ BitVec 1)) (input13 (_ BitVec 279)) (input11 (_ BitVec 1)) (input10 (_ BitVec 1)) (input9 (_ BitVec 1)) (input3 (_ BitVec 1)) (input2 (_ BitVec 1)) (input4 (_ BitVec 1)) (input5 (_ BitVec 1)) (input6 (_ BitVec 1)) (input8 (_ BitVec 2)) (state94.next (_ BitVec 1)) (state97.next (_ BitVec 1)) (state25.next (_ BitVec 1)) (state39.next (_ BitVec 512)) (state22.next (_ BitVec 256)) (witness_0.next (_ BitVec 1)) (state69.next (_ BitVec 1)) (state92.next (_ BitVec 1)) (input20.next (_ BitVec 1)) (input19.next (_ BitVec 287)) (input17.next (_ BitVec 1)) (input16.next (_ BitVec 1)) (input15.next (_ BitVec 1)) (input14.next (_ BitVec 1)) (input13.next (_ BitVec 279)) (input11.next (_ BitVec 1)) (input10.next (_ BitVec 1)) (input9.next (_ BitVec 1)) (input3.next (_ BitVec 1)) (input2.next (_ BitVec 1)) (input4.next (_ BitVec 1)) (input5.next (_ BitVec 1)) (input6.next (_ BitVec 1)) (input8.next (_ BitVec 2)))
    Bool
     (let ((.def_50 ((_ extract 255 0) (ite (= state25 (_ bv1 1)) (_ bv0 287) input19)))) (let ((.def_52 (bvnot input9))) (let ((.def_53 (bvand (bvnot input5) .def_52))) (let ((.def_57 (= (bvcomp input8 (_ bv1 2)) (_ bv1 1)))) (let ((.def_62 (bvand input15 (bvand input10 .def_52)))) (let ((.def_65 ((_ extract 282 282) state39))) (let ((.def_66 ((_ extract 283 283) state39))) (let ((.def_68 ((_ extract 284 284) state39))) (let ((.def_72 (bvor (bvor (bvand .def_65 .def_66) (bvand .def_65 .def_68)) (bvand .def_66 .def_68)))) (let ((.def_74 (bvand .def_53 (bvnot .def_72)))) (let ((.def_75 (= .def_74 (_ bv1 1)))) (let ((.def_82 (= (bvand (bvnot input15) (bvnot input16)) (_ bv1 1)))) (let ((.def_84 (= input11 (_ bv1 1)))) (let ((.def_87 (bvcomp input8 (_ bv3 2)))) (let ((.def_88 (= .def_87 (_ bv1 1)))) (let ((.def_94 (= (bvor .def_87 (bvcomp input8 (_ bv2 2))) (_ bv1 1)))) (let ((.def_95 (ite .def_94 (ite .def_88 (ite .def_84 (ite .def_82 (_ bv0 1) (bvand input17 .def_52)) (bvand input17 .def_74)) (ite .def_75 input17 .def_62)) (ite .def_57 (bvand input17 .def_53) (_ bv0 1))))) (let ((.def_99 (= input2 (_ bv1 1)))) (let ((.def_101 (= input3 (_ bv1 1)))) (let ((.def_102 (ite .def_101 (ite .def_99 (_ bv0 256) (ite (= .def_95 (_ bv1 1)) .def_50 state22)) state22))) (let ((.def_107 (bvnot input2))) (let ((.def_109 (bvand state25 .def_107))) (let ((.def_112 (bvor input4 (bvnot (bvand state69 .def_109))))) (let ((.def_156 (ite .def_94 (ite .def_88 (ite .def_84 (_ bv0 1) .def_74) .def_74) (ite .def_57 .def_53 (ite (= .def_53 (_ bv1 1)) (ite (= .def_72 (_ bv1 1)) (_ bv1 1) (bvand input10 state97)) (_ bv0 1)))))) (let ((.def_162 (bvor .def_156 (ite .def_94 (ite .def_88 (ite .def_84 (ite .def_82 (_ bv0 1) .def_52) (_ bv0 1)) (ite .def_75 (_ bv0 1) .def_62)) (_ bv0 1))))) (let ((.def_164 (= (bvor input2 .def_162) (_ bv1 1)))) (let ((.def_172 (bvnot input6))) (let ((.def_173 (bvand input5 .def_172))) (let ((.def_228 (bvnot input14))) (let ((.def_233 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 .def_228))))))) (let ((.def_235 (concat .def_228 (concat .def_228 .def_233)))) (let ((.def_564 (concat (bvand .def_235 ((_ extract 278 271) input13)) (concat (_ bv0 2) (concat (bvand .def_233 ((_ extract 270 265) input13)) (concat (_ bv0 7) (bvand (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 (concat .def_228 .def_235))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ((_ extract 264 0) input13)))))))) (and (and (and (and (and (and (and (= witness_0.next (bvnot (ite (= (bvcomp .def_102 (ite .def_101 (ite .def_99 (ite (= .def_112 (_ bv1 1)) (_ bv0 256) state22) (ite (= (bvand .def_95 .def_112) (_ bv1 1)) .def_50 state22)) state22)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)))) (= state22.next .def_102)) (= state25.next (ite .def_101 (ite .def_164 (bvand .def_107 state92) state25) state25))) (= state39.next (ite .def_101 (ite .def_99 (_ bv0 512) (ite (= .def_173 (_ bv1 1)) (concat (_ bv0 224) .def_564) (ite (= .def_156 (_ bv1 1)) (concat (_ bv0 224) (ite (= input6 (_ bv1 1)) (_ bv0 288) .def_564)) state39))) state39))) (= state69.next (ite .def_101 (ite (= (bvor input2 .def_95) (_ bv1 1)) .def_109 state69) state69))) (= state92.next (ite .def_101 (ite .def_164 (bvand .def_107 state94) state92) state92))) (= state94.next (ite .def_101 (ite (= (bvor .def_156 (bvor input2 .def_173)) (_ bv1 1)) (bvnot (bvor .def_173 (bvor input2 .def_172))) state94) state94))) (= state97.next (ite .def_101 (ite .def_99 (_ bv0 1) (ite (= .def_162 (_ bv1 1)) .def_72 state97)) state97))))))))))))))))))))))))))))))))))))
(define-fun P 
   ((state94 (_ BitVec 1)) (state97 (_ BitVec 1)) (state25 (_ BitVec 1)) (state39 (_ BitVec 512)) (state22 (_ BitVec 256)) (witness_0 (_ BitVec 1)) (state69 (_ BitVec 1)) (state92 (_ BitVec 1)) (input20 (_ BitVec 1)) (input19 (_ BitVec 287)) (input17 (_ BitVec 1)) (input16 (_ BitVec 1)) (input15 (_ BitVec 1)) (input14 (_ BitVec 1)) (input13 (_ BitVec 279)) (input11 (_ BitVec 1)) (input10 (_ BitVec 1)) (input9 (_ BitVec 1)) (input3 (_ BitVec 1)) (input2 (_ BitVec 1)) (input4 (_ BitVec 1)) (input5 (_ BitVec 1)) (input6 (_ BitVec 1)) (input8 (_ BitVec 2)))
    Bool
     (= witness_0 (_ bv1 1)))

(declare-var state94 (_ BitVec 1))
(declare-var state97 (_ BitVec 1))
(declare-var state25 (_ BitVec 1))
(declare-var state39 (_ BitVec 512))
(declare-var state22 (_ BitVec 256))
(declare-var witness_0 (_ BitVec 1))
(declare-var state69 (_ BitVec 1))
(declare-var state92 (_ BitVec 1))

(declare-var state94.next (_ BitVec 1))
(declare-var state97.next (_ BitVec 1))
(declare-var state25.next (_ BitVec 1))
(declare-var state39.next (_ BitVec 512))
(declare-var state22.next (_ BitVec 256))
(declare-var witness_0.next (_ BitVec 1))
(declare-var state69.next (_ BitVec 1))
(declare-var state92.next (_ BitVec 1))

(declare-var input20 (_ BitVec 1))
(declare-var input19 (_ BitVec 287))
(declare-var input17 (_ BitVec 1))
(declare-var input16 (_ BitVec 1))
(declare-var input15 (_ BitVec 1))
(declare-var input14 (_ BitVec 1))
(declare-var input13 (_ BitVec 279))
(declare-var input11 (_ BitVec 1))
(declare-var input10 (_ BitVec 1))
(declare-var input9 (_ BitVec 1))
(declare-var input3 (_ BitVec 1))
(declare-var input2 (_ BitVec 1))
(declare-var input4 (_ BitVec 1))
(declare-var input5 (_ BitVec 1))
(declare-var input6 (_ BitVec 1))
(declare-var input8 (_ BitVec 2))
(declare-var input20.next (_ BitVec 1))
(declare-var input19.next (_ BitVec 287))
(declare-var input17.next (_ BitVec 1))
(declare-var input16.next (_ BitVec 1))
(declare-var input15.next (_ BitVec 1))
(declare-var input14.next (_ BitVec 1))
(declare-var input13.next (_ BitVec 279))
(declare-var input11.next (_ BitVec 1))
(declare-var input10.next (_ BitVec 1))
(declare-var input9.next (_ BitVec 1))
(declare-var input3.next (_ BitVec 1))
(declare-var input2.next (_ BitVec 1))
(declare-var input4.next (_ BitVec 1))
(declare-var input5.next (_ BitVec 1))
(declare-var input6.next (_ BitVec 1))
(declare-var input8.next (_ BitVec 2))


(declare-rel INV ((_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 512) (_ BitVec 256) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 287) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 279) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 2)))
(declare-rel fail ())

(rule (=> 
  (Init state94 state97 state25 state39 state22 witness_0 state69 state92 input20 input19 input17 input16 input15 input14 input13 input11 input10 input9 input3 input2 input4 input5 input6 input8)
  (INV  state94 state97 state25 state39 state22 witness_0 state69 state92 input20 input19 input17 input16 input15 input14 input13 input11 input10 input9 input3 input2 input4 input5 input6 input8)))

(rule (=> (and
  (INV  state94 state97 state25 state39 state22 witness_0 state69 state92 input20 input19 input17 input16 input15 input14 input13 input11 input10 input9 input3 input2 input4 input5 input6 input8)
  (Trans state94 state97 state25 state39 state22 witness_0 state69 state92 input20 input19 input17 input16 input15 input14 input13 input11 input10 input9 input3 input2 input4 input5 input6 input8 state94.next state97.next state25.next state39.next state22.next witness_0.next state69.next state92.next input20.next input19.next input17.next input16.next input15.next input14.next input13.next input11.next input10.next input9.next input3.next input2.next input4.next input5.next input6.next input8.next))
  (INV  state94.next state97.next state25.next state39.next state22.next witness_0.next state69.next state92.next input20.next input19.next input17.next input16.next input15.next input14.next input13.next input11.next input10.next input9.next input3.next input2.next input4.next input5.next input6.next input8.next)))

(rule (=> (and
  (INV state94 state97 state25 state39 state22 witness_0 state69 state92 input20 input19 input17 input16 input15 input14 input13 input11 input10 input9 input3 input2 input4 input5 input6 input8) 
  (not (P state94 state97 state25 state39 state22 witness_0 state69 state92 input20 input19 input17 input16 input15 input14 input13 input11 input10 input9 input3 input2 input4 input5 input6 input8)))
  fail))

(query fail :print-certificate true)

