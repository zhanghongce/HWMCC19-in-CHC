

;----------------------------------------
;  CHC generated from BTOR
;  Generated by COSA2 (Pono)
;----------------------------------------

(set-option :fp.engine spacer)

(define-fun Init 
    ((state134 (_ BitVec 1)) (witness_0 (_ BitVec 1)) (state56 (_ BitVec 1)) (state19 (_ BitVec 16)) (state33 (_ BitVec 512)) (input17 (_ BitVec 1)) (input16 (_ BitVec 1)) (input15 (_ BitVec 1)) (input14 (_ BitVec 1)) (input13 (_ BitVec 279)) (input11 (_ BitVec 1)) (input10 (_ BitVec 1)) (input9 (_ BitVec 1)) (input3 (_ BitVec 1)) (input2 (_ BitVec 1)) (input4 (_ BitVec 1)) (input5 (_ BitVec 1)) (input6 (_ BitVec 1)) (input8 (_ BitVec 2)))
     Bool
     (and (= state56 (_ bv0 1)) (= witness_0 (_ bv1 1))))
(define-fun Trans 
    ((state134 (_ BitVec 1)) (witness_0 (_ BitVec 1)) (state56 (_ BitVec 1)) (state19 (_ BitVec 16)) (state33 (_ BitVec 512)) (input17 (_ BitVec 1)) (input16 (_ BitVec 1)) (input15 (_ BitVec 1)) (input14 (_ BitVec 1)) (input13 (_ BitVec 279)) (input11 (_ BitVec 1)) (input10 (_ BitVec 1)) (input9 (_ BitVec 1)) (input3 (_ BitVec 1)) (input2 (_ BitVec 1)) (input4 (_ BitVec 1)) (input5 (_ BitVec 1)) (input6 (_ BitVec 1)) (input8 (_ BitVec 2)) (state134.next (_ BitVec 1)) (witness_0.next (_ BitVec 1)) (state56.next (_ BitVec 1)) (state19.next (_ BitVec 16)) (state33.next (_ BitVec 512)) (input17.next (_ BitVec 1)) (input16.next (_ BitVec 1)) (input15.next (_ BitVec 1)) (input14.next (_ BitVec 1)) (input13.next (_ BitVec 279)) (input11.next (_ BitVec 1)) (input10.next (_ BitVec 1)) (input9.next (_ BitVec 1)) (input3.next (_ BitVec 1)) (input2.next (_ BitVec 1)) (input4.next (_ BitVec 1)) (input5.next (_ BitVec 1)) (input6.next (_ BitVec 1)) (input8.next (_ BitVec 2)))
    Bool
     (let ((.def_44 (bvnot input9))) (let ((.def_45 (bvand (bvnot input5) .def_44))) (let ((.def_47 (= .def_45 (_ bv1 1)))) (let ((.def_51 (= (bvcomp input8 (_ bv1 2)) (_ bv1 1)))) (let ((.def_55 ((_ extract 282 282) state33))) (let ((.def_56 ((_ extract 283 283) state33))) (let ((.def_58 ((_ extract 284 284) state33))) (let ((.def_62 (bvor (bvor (bvand .def_55 .def_56) (bvand .def_55 .def_58)) (bvand .def_56 .def_58)))) (let ((.def_64 (bvand .def_45 (bvnot .def_62)))) (let ((.def_65 (= .def_64 (_ bv1 1)))) (let ((.def_66 (ite .def_65 (bvadd (_ bv32 16) state19) state19))) (let ((.def_67 (= input11 (_ bv1 1)))) (let ((.def_70 (bvcomp input8 (_ bv3 2)))) (let ((.def_71 (= .def_70 (_ bv1 1)))) (let ((.def_77 (= (bvor .def_70 (bvcomp input8 (_ bv2 2))) (_ bv1 1)))) (let ((.def_78 (ite .def_77 (ite .def_71 (ite .def_67 state19 .def_66) .def_66) (ite .def_51 (ite .def_47 (bvadd (_ bv32 16) state19) state19) (_ bv0 16))))) (let ((.def_79 (= input2 (_ bv1 1)))) (let ((.def_81 (= input3 (_ bv1 1)))) (let ((.def_82 (ite .def_81 (ite .def_79 (_ bv0 16) .def_78) state19))) (let ((.def_96 (bvnot (bvor input2 ((_ extract 6 6) (ite .def_77 (ite .def_71 (_ bv84 7) (_ bv106 7)) (ite .def_51 (_ bv65 7) (_ bv0 7)))))))) (let ((.def_100 (= (bvor input4 (bvnot (bvand state56 .def_96))) (_ bv1 1)))) (let ((.def_126 (bvor input2 (ite (not (= input8 (_ bv3 2))) (_ bv1 1) (_ bv0 1))))) (let ((.def_183 (ite .def_77 (ite .def_71 (ite .def_67 (_ bv0 1) .def_64) .def_64) (ite .def_51 .def_45 (ite .def_47 (ite (= .def_62 (_ bv1 1)) (_ bv1 1) (bvand input10 state134)) (_ bv0 1)))))) (let ((.def_213 (bvnot input14))) (let ((.def_218 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 .def_213))))))) (let ((.def_220 (concat .def_213 (concat .def_213 .def_218)))) (let ((.def_548 (concat (bvand .def_220 ((_ extract 278 271) input13)) (concat (_ bv0 2) (concat (bvand .def_218 ((_ extract 270 265) input13)) (concat (_ bv0 7) (bvand (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 (concat .def_213 .def_220))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ((_ extract 264 0) input13)))))))) (and (and (and (and (= witness_0.next (bvnot (ite (= (bvcomp .def_82 (ite .def_81 (ite .def_79 (ite .def_100 (_ bv0 16) state19) (ite .def_100 .def_78 state19)) state19)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)))) (= state19.next .def_82)) (= state33.next (ite .def_81 (ite .def_79 (_ bv0 512) (ite (= (bvand input5 (bvnot input6)) (_ bv1 1)) (concat (_ bv0 224) .def_548) (ite (= .def_183 (_ bv1 1)) (concat (_ bv0 224) (ite (= input6 (_ bv1 1)) (_ bv0 288) .def_548)) state33))) state33))) (= state56.next (ite .def_81 (ite (= (bvand (bvor .def_45 (bvor input2 (ite (not (= input8 (_ bv1 2))) (_ bv1 1) (_ bv0 1)))) (bvand (bvor .def_126 (bvnot input11)) (bvor .def_64 (bvand (bvor input11 .def_126) (bvor input2 (ite (not (= input8 (_ bv2 2))) (_ bv1 1) (_ bv0 1))))))) (_ bv1 1)) .def_96 state56) state56))) (= state134.next (ite .def_81 (ite .def_79 (_ bv0 1) (ite (= (bvor .def_183 (ite .def_77 (ite .def_71 (ite .def_67 (ite (= (bvand (bvnot input15) (bvnot input16)) (_ bv1 1)) (_ bv0 1) .def_44) (_ bv0 1)) (ite .def_65 (_ bv0 1) (bvand input15 (bvand input10 .def_44)))) (_ bv0 1))) (_ bv1 1)) .def_62 state134)) state134)))))))))))))))))))))))))))))))
(define-fun P 
   ((state134 (_ BitVec 1)) (witness_0 (_ BitVec 1)) (state56 (_ BitVec 1)) (state19 (_ BitVec 16)) (state33 (_ BitVec 512)) (input17 (_ BitVec 1)) (input16 (_ BitVec 1)) (input15 (_ BitVec 1)) (input14 (_ BitVec 1)) (input13 (_ BitVec 279)) (input11 (_ BitVec 1)) (input10 (_ BitVec 1)) (input9 (_ BitVec 1)) (input3 (_ BitVec 1)) (input2 (_ BitVec 1)) (input4 (_ BitVec 1)) (input5 (_ BitVec 1)) (input6 (_ BitVec 1)) (input8 (_ BitVec 2)))
    Bool
     (= witness_0 (_ bv1 1)))

(declare-var state134 (_ BitVec 1))
(declare-var witness_0 (_ BitVec 1))
(declare-var state56 (_ BitVec 1))
(declare-var state19 (_ BitVec 16))
(declare-var state33 (_ BitVec 512))

(declare-var state134.next (_ BitVec 1))
(declare-var witness_0.next (_ BitVec 1))
(declare-var state56.next (_ BitVec 1))
(declare-var state19.next (_ BitVec 16))
(declare-var state33.next (_ BitVec 512))

(declare-var input17 (_ BitVec 1))
(declare-var input16 (_ BitVec 1))
(declare-var input15 (_ BitVec 1))
(declare-var input14 (_ BitVec 1))
(declare-var input13 (_ BitVec 279))
(declare-var input11 (_ BitVec 1))
(declare-var input10 (_ BitVec 1))
(declare-var input9 (_ BitVec 1))
(declare-var input3 (_ BitVec 1))
(declare-var input2 (_ BitVec 1))
(declare-var input4 (_ BitVec 1))
(declare-var input5 (_ BitVec 1))
(declare-var input6 (_ BitVec 1))
(declare-var input8 (_ BitVec 2))
(declare-var input17.next (_ BitVec 1))
(declare-var input16.next (_ BitVec 1))
(declare-var input15.next (_ BitVec 1))
(declare-var input14.next (_ BitVec 1))
(declare-var input13.next (_ BitVec 279))
(declare-var input11.next (_ BitVec 1))
(declare-var input10.next (_ BitVec 1))
(declare-var input9.next (_ BitVec 1))
(declare-var input3.next (_ BitVec 1))
(declare-var input2.next (_ BitVec 1))
(declare-var input4.next (_ BitVec 1))
(declare-var input5.next (_ BitVec 1))
(declare-var input6.next (_ BitVec 1))
(declare-var input8.next (_ BitVec 2))


(declare-rel INV ((_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 16) (_ BitVec 512) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 279) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 2)))
(declare-rel fail ())

(rule (=> 
  (Init state134 witness_0 state56 state19 state33 input17 input16 input15 input14 input13 input11 input10 input9 input3 input2 input4 input5 input6 input8)
  (INV  state134 witness_0 state56 state19 state33 input17 input16 input15 input14 input13 input11 input10 input9 input3 input2 input4 input5 input6 input8)))

(rule (=> (and
  (INV  state134 witness_0 state56 state19 state33 input17 input16 input15 input14 input13 input11 input10 input9 input3 input2 input4 input5 input6 input8)
  (Trans state134 witness_0 state56 state19 state33 input17 input16 input15 input14 input13 input11 input10 input9 input3 input2 input4 input5 input6 input8 state134.next witness_0.next state56.next state19.next state33.next input17.next input16.next input15.next input14.next input13.next input11.next input10.next input9.next input3.next input2.next input4.next input5.next input6.next input8.next))
  (INV  state134.next witness_0.next state56.next state19.next state33.next input17.next input16.next input15.next input14.next input13.next input11.next input10.next input9.next input3.next input2.next input4.next input5.next input6.next input8.next)))

(rule (=> (and
  (INV state134 witness_0 state56 state19 state33 input17 input16 input15 input14 input13 input11 input10 input9 input3 input2 input4 input5 input6 input8) 
  (not (P state134 witness_0 state56 state19 state33 input17 input16 input15 input14 input13 input11 input10 input9 input3 input2 input4 input5 input6 input8)))
  fail))

(query fail :print-certificate true)

