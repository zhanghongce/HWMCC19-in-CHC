

;----------------------------------------
;  CHC generated from BTOR
;  Generated by COSA2 (Pono)
;----------------------------------------

(set-option :fp.engine spacer)

(define-fun Init 
    ((state33 (_ BitVec 3)) (state112 (_ BitVec 3)) (state30 (_ BitVec 3)) (state15 (_ BitVec 3)) (state7 (_ BitVec 3)) (state10 (_ BitVec 3)) (state23 (_ BitVec 3)) (state18 (_ BitVec 3)) (state109 (_ BitVec 3)) (state26 (_ BitVec 3)) (input192 (_ BitVec 3)) (input4 (_ BitVec 3)) (input2 (_ BitVec 1)) (input164 (_ BitVec 3)) (input175 (_ BitVec 3)) (input5 (_ BitVec 3)) (input189 (_ BitVec 3)))
     Bool
     (and (and (and (and (and (and (and (and (and (= state7 (_ bv7 3)) (= state10 (_ bv6 3))) (= state15 (_ bv5 3))) (= state18 (_ bv4 3))) (= state23 (_ bv3 3))) (= state26 (_ bv2 3))) (= state30 (_ bv1 3))) (= state33 (_ bv0 3))) (= state109 (_ bv0 3))) (= state112 (_ bv0 3))))
(define-fun Trans 
    ((state33 (_ BitVec 3)) (state112 (_ BitVec 3)) (state30 (_ BitVec 3)) (state15 (_ BitVec 3)) (state7 (_ BitVec 3)) (state10 (_ BitVec 3)) (state23 (_ BitVec 3)) (state18 (_ BitVec 3)) (state109 (_ BitVec 3)) (state26 (_ BitVec 3)) (input192 (_ BitVec 3)) (input4 (_ BitVec 3)) (input2 (_ BitVec 1)) (input164 (_ BitVec 3)) (input175 (_ BitVec 3)) (input5 (_ BitVec 3)) (input189 (_ BitVec 3)) (state33.next (_ BitVec 3)) (state112.next (_ BitVec 3)) (state30.next (_ BitVec 3)) (state15.next (_ BitVec 3)) (state7.next (_ BitVec 3)) (state10.next (_ BitVec 3)) (state23.next (_ BitVec 3)) (state18.next (_ BitVec 3)) (state109.next (_ BitVec 3)) (state26.next (_ BitVec 3)) (input192.next (_ BitVec 3)) (input4.next (_ BitVec 3)) (input2.next (_ BitVec 1)) (input164.next (_ BitVec 3)) (input175.next (_ BitVec 3)) (input5.next (_ BitVec 3)) (input189.next (_ BitVec 3)))
    Bool
     (let ((.def_85 (= ((_ extract 0 0) state112) (_ bv1 1)))) (let ((.def_89 (= ((_ extract 1 1) state112) (_ bv1 1)))) (let ((.def_94 ((_ extract 2 2) state112))) (let ((.def_98 ((_ extract 1 0) state112))) (let ((.def_99 ((_ extract 1 0) state109))) (let ((.def_101 ((_ extract 2 2) state109))) (let ((.def_102 (bvcomp .def_94 .def_101))) (let ((.def_111 ((_ extract 0 0) state109))) (let ((.def_135 (= .def_111 (_ bv1 1)))) (let ((.def_139 (= ((_ extract 1 1) state109) (_ bv1 1)))) (let ((.def_146 (= (bvand (bvcomp (ite (= .def_94 (_ bv1 1)) (ite .def_89 (ite .def_85 state33 state30) (ite .def_85 state26 state23)) (ite .def_89 (ite .def_85 state18 state15) (ite .def_85 state10 state7))) (_ bv0 3)) (bvor (bvand (bvcomp .def_98 .def_99) (bvnot .def_102)) (bvand .def_102 (bvor (bvor (bvor (bvand (bvcomp .def_98 (_ bv0 2)) (bvcomp .def_99 (_ bv1 2))) (bvand (bvcomp .def_98 (_ bv1 2)) (bvcomp ((_ zero_extend 31) .def_111) (_ bv0 32)))) (bvand (bvcomp .def_98 (_ bv2 2)) (bvcomp ((_ zero_extend 31) .def_111) (_ bv1 32)))) (bvand (bvcomp .def_98 (_ bv3 2)) (bvcomp .def_99 (_ bv2 2))))))) (_ bv1 1)))) (let ((.def_147 (ite .def_146 (ite (= .def_101 (_ bv1 1)) (ite .def_139 (ite .def_135 state33 state30) (ite .def_135 state26 state23)) (ite .def_139 (ite .def_135 state18 state15) (ite .def_135 state10 state7))) input164))) (let ((.def_148 ((_ extract 0 0) .def_147))) (let ((.def_151 (ite .def_146 state112 input175))) (let ((.def_152 ((_ extract 0 0) .def_151))) (let ((.def_153 (bvcomp .def_152 (_ bv0 1)))) (let ((.def_154 ((_ extract 1 1) .def_151))) (let ((.def_155 (bvcomp .def_154 (_ bv0 1)))) (let ((.def_156 ((_ extract 2 2) .def_151))) (let ((.def_157 (bvcomp .def_156 (_ bv0 1)))) (let ((.def_158 (bvand .def_155 .def_157))) (let ((.def_159 (bvand .def_153 .def_158))) (let ((.def_160 (ite .def_146 (_ bv7 3) (_ bv0 3)))) (let ((.def_161 ((_ extract 0 0) .def_160))) (let ((.def_167 (ite .def_146 (_ bv0 3) input189))) (let ((.def_168 ((_ extract 0 0) .def_167))) (let ((.def_171 (ite .def_146 state109 input192))) (let ((.def_172 ((_ extract 0 0) .def_171))) (let ((.def_173 (bvcomp .def_172 (_ bv0 1)))) (let ((.def_174 ((_ extract 1 1) .def_171))) (let ((.def_175 (bvcomp .def_174 (_ bv0 1)))) (let ((.def_176 ((_ extract 2 2) .def_171))) (let ((.def_177 (bvcomp .def_176 (_ bv0 1)))) (let ((.def_178 (bvand .def_175 .def_177))) (let ((.def_179 (bvand .def_173 .def_178))) (let ((.def_185 ((_ extract 1 1) .def_147))) (let ((.def_186 ((_ extract 1 1) .def_160))) (let ((.def_190 ((_ extract 1 1) .def_167))) (let ((.def_195 ((_ extract 2 2) .def_147))) (let ((.def_196 ((_ extract 2 2) .def_160))) (let ((.def_200 ((_ extract 2 2) .def_167))) (let ((.def_208 (bvcomp .def_152 (_ bv1 1)))) (let ((.def_210 (bvand .def_158 .def_208))) (let ((.def_215 (bvcomp .def_172 (_ bv1 1)))) (let ((.def_217 (bvand .def_178 .def_215))) (let ((.def_245 (bvcomp .def_154 (_ bv1 1)))) (let ((.def_247 (bvand .def_157 .def_245))) (let ((.def_248 (bvand .def_153 .def_247))) (let ((.def_253 (bvcomp .def_174 (_ bv1 1)))) (let ((.def_255 (bvand .def_177 .def_253))) (let ((.def_256 (bvand .def_173 .def_255))) (let ((.def_284 (bvand .def_208 .def_247))) (let ((.def_289 (bvand .def_215 .def_255))) (let ((.def_317 (bvcomp .def_156 (_ bv1 1)))) (let ((.def_318 (bvand .def_155 .def_317))) (let ((.def_319 (bvand .def_153 .def_318))) (let ((.def_324 (bvcomp .def_176 (_ bv1 1)))) (let ((.def_325 (bvand .def_175 .def_324))) (let ((.def_326 (bvand .def_173 .def_325))) (let ((.def_354 (bvand .def_208 .def_318))) (let ((.def_359 (bvand .def_215 .def_325))) (let ((.def_387 (bvand .def_245 .def_317))) (let ((.def_388 (bvand .def_153 .def_387))) (let ((.def_393 (bvand .def_253 .def_324))) (let ((.def_394 (bvand .def_173 .def_393))) (let ((.def_422 (bvand .def_208 .def_387))) (let ((.def_427 (bvand .def_215 .def_393))) (and (and (and (and (and (and (and (and (and (= state7.next (concat (ite (= (bvand .def_179 .def_196) (_ bv1 1)) .def_200 (ite (= (bvand .def_159 .def_196) (_ bv1 1)) .def_195 ((_ extract 2 2) state7))) (concat (ite (= (bvand .def_179 .def_186) (_ bv1 1)) .def_190 (ite (= (bvand .def_159 .def_186) (_ bv1 1)) .def_185 ((_ extract 1 1) state7))) (ite (= (bvand .def_161 .def_179) (_ bv1 1)) .def_168 (ite (= (bvand .def_159 .def_161) (_ bv1 1)) .def_148 ((_ extract 0 0) state7)))))) (= state10.next (concat (ite (= (bvand .def_196 .def_217) (_ bv1 1)) .def_200 (ite (= (bvand .def_196 .def_210) (_ bv1 1)) .def_195 ((_ extract 2 2) state10))) (concat (ite (= (bvand .def_186 .def_217) (_ bv1 1)) .def_190 (ite (= (bvand .def_186 .def_210) (_ bv1 1)) .def_185 ((_ extract 1 1) state10))) (ite (= (bvand .def_161 .def_217) (_ bv1 1)) .def_168 (ite (= (bvand .def_161 .def_210) (_ bv1 1)) .def_148 ((_ extract 0 0) state10))))))) (= state15.next (concat (ite (= (bvand .def_196 .def_256) (_ bv1 1)) .def_200 (ite (= (bvand .def_196 .def_248) (_ bv1 1)) .def_195 ((_ extract 2 2) state15))) (concat (ite (= (bvand .def_186 .def_256) (_ bv1 1)) .def_190 (ite (= (bvand .def_186 .def_248) (_ bv1 1)) .def_185 ((_ extract 1 1) state15))) (ite (= (bvand .def_161 .def_256) (_ bv1 1)) .def_168 (ite (= (bvand .def_161 .def_248) (_ bv1 1)) .def_148 ((_ extract 0 0) state15))))))) (= state18.next (concat (ite (= (bvand .def_196 .def_289) (_ bv1 1)) .def_200 (ite (= (bvand .def_196 .def_284) (_ bv1 1)) .def_195 ((_ extract 2 2) state18))) (concat (ite (= (bvand .def_186 .def_289) (_ bv1 1)) .def_190 (ite (= (bvand .def_186 .def_284) (_ bv1 1)) .def_185 ((_ extract 1 1) state18))) (ite (= (bvand .def_161 .def_289) (_ bv1 1)) .def_168 (ite (= (bvand .def_161 .def_284) (_ bv1 1)) .def_148 ((_ extract 0 0) state18))))))) (= state23.next (concat (ite (= (bvand .def_196 .def_326) (_ bv1 1)) .def_200 (ite (= (bvand .def_196 .def_319) (_ bv1 1)) .def_195 ((_ extract 2 2) state23))) (concat (ite (= (bvand .def_186 .def_326) (_ bv1 1)) .def_190 (ite (= (bvand .def_186 .def_319) (_ bv1 1)) .def_185 ((_ extract 1 1) state23))) (ite (= (bvand .def_161 .def_326) (_ bv1 1)) .def_168 (ite (= (bvand .def_161 .def_319) (_ bv1 1)) .def_148 ((_ extract 0 0) state23))))))) (= state26.next (concat (ite (= (bvand .def_196 .def_359) (_ bv1 1)) .def_200 (ite (= (bvand .def_196 .def_354) (_ bv1 1)) .def_195 ((_ extract 2 2) state26))) (concat (ite (= (bvand .def_186 .def_359) (_ bv1 1)) .def_190 (ite (= (bvand .def_186 .def_354) (_ bv1 1)) .def_185 ((_ extract 1 1) state26))) (ite (= (bvand .def_161 .def_359) (_ bv1 1)) .def_168 (ite (= (bvand .def_161 .def_354) (_ bv1 1)) .def_148 ((_ extract 0 0) state26))))))) (= state30.next (concat (ite (= (bvand .def_196 .def_394) (_ bv1 1)) .def_200 (ite (= (bvand .def_196 .def_388) (_ bv1 1)) .def_195 ((_ extract 2 2) state30))) (concat (ite (= (bvand .def_186 .def_394) (_ bv1 1)) .def_190 (ite (= (bvand .def_186 .def_388) (_ bv1 1)) .def_185 ((_ extract 1 1) state30))) (ite (= (bvand .def_161 .def_394) (_ bv1 1)) .def_168 (ite (= (bvand .def_161 .def_388) (_ bv1 1)) .def_148 ((_ extract 0 0) state30))))))) (= state33.next (concat (ite (= (bvand .def_196 .def_427) (_ bv1 1)) .def_200 (ite (= (bvand .def_196 .def_422) (_ bv1 1)) .def_195 ((_ extract 2 2) state33))) (concat (ite (= (bvand .def_186 .def_427) (_ bv1 1)) .def_190 (ite (= (bvand .def_186 .def_422) (_ bv1 1)) .def_185 ((_ extract 1 1) state33))) (ite (= (bvand .def_161 .def_427) (_ bv1 1)) .def_168 (ite (= (bvand .def_161 .def_422) (_ bv1 1)) .def_148 ((_ extract 0 0) state33))))))) (= input4 state109.next)) (= input5 state112.next))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun P 
   ((state33 (_ BitVec 3)) (state112 (_ BitVec 3)) (state30 (_ BitVec 3)) (state15 (_ BitVec 3)) (state7 (_ BitVec 3)) (state10 (_ BitVec 3)) (state23 (_ BitVec 3)) (state18 (_ BitVec 3)) (state109 (_ BitVec 3)) (state26 (_ BitVec 3)) (input192 (_ BitVec 3)) (input4 (_ BitVec 3)) (input2 (_ BitVec 1)) (input164 (_ BitVec 3)) (input175 (_ BitVec 3)) (input5 (_ BitVec 3)) (input189 (_ BitVec 3)))
    Bool
     (not (= (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvcomp state7 (_ bv0 3)) (bvcomp state10 (_ bv1 3))) (bvcomp state15 (_ bv2 3))) (bvcomp state18 (_ bv3 3))) (bvcomp state23 (_ bv4 3))) (bvcomp state26 (_ bv5 3))) (bvcomp state30 (_ bv6 3))) (bvcomp state33 (_ bv7 3))) (_ bv1 1))))

(declare-var state33 (_ BitVec 3))
(declare-var state112 (_ BitVec 3))
(declare-var state30 (_ BitVec 3))
(declare-var state15 (_ BitVec 3))
(declare-var state7 (_ BitVec 3))
(declare-var state10 (_ BitVec 3))
(declare-var state23 (_ BitVec 3))
(declare-var state18 (_ BitVec 3))
(declare-var state109 (_ BitVec 3))
(declare-var state26 (_ BitVec 3))

(declare-var state33.next (_ BitVec 3))
(declare-var state112.next (_ BitVec 3))
(declare-var state30.next (_ BitVec 3))
(declare-var state15.next (_ BitVec 3))
(declare-var state7.next (_ BitVec 3))
(declare-var state10.next (_ BitVec 3))
(declare-var state23.next (_ BitVec 3))
(declare-var state18.next (_ BitVec 3))
(declare-var state109.next (_ BitVec 3))
(declare-var state26.next (_ BitVec 3))

(declare-var input192 (_ BitVec 3))
(declare-var input4 (_ BitVec 3))
(declare-var input2 (_ BitVec 1))
(declare-var input164 (_ BitVec 3))
(declare-var input175 (_ BitVec 3))
(declare-var input5 (_ BitVec 3))
(declare-var input189 (_ BitVec 3))
(declare-var input192.next (_ BitVec 3))
(declare-var input4.next (_ BitVec 3))
(declare-var input2.next (_ BitVec 1))
(declare-var input164.next (_ BitVec 3))
(declare-var input175.next (_ BitVec 3))
(declare-var input5.next (_ BitVec 3))
(declare-var input189.next (_ BitVec 3))


(declare-rel INV ((_ BitVec 3) (_ BitVec 3) (_ BitVec 3) (_ BitVec 3) (_ BitVec 3) (_ BitVec 3) (_ BitVec 3) (_ BitVec 3) (_ BitVec 3) (_ BitVec 3) (_ BitVec 3) (_ BitVec 3) (_ BitVec 1) (_ BitVec 3) (_ BitVec 3) (_ BitVec 3) (_ BitVec 3)))
(declare-rel fail ())

(rule (=> 
  (Init state33 state112 state30 state15 state7 state10 state23 state18 state109 state26 input192 input4 input2 input164 input175 input5 input189)
  (INV  state33 state112 state30 state15 state7 state10 state23 state18 state109 state26 input192 input4 input2 input164 input175 input5 input189)))

(rule (=> (and
  (INV  state33 state112 state30 state15 state7 state10 state23 state18 state109 state26 input192 input4 input2 input164 input175 input5 input189)
  (Trans state33 state112 state30 state15 state7 state10 state23 state18 state109 state26 input192 input4 input2 input164 input175 input5 input189 state33.next state112.next state30.next state15.next state7.next state10.next state23.next state18.next state109.next state26.next input192.next input4.next input2.next input164.next input175.next input5.next input189.next))
  (INV  state33.next state112.next state30.next state15.next state7.next state10.next state23.next state18.next state109.next state26.next input192.next input4.next input2.next input164.next input175.next input5.next input189.next)))

(rule (=> (and
  (INV state33 state112 state30 state15 state7 state10 state23 state18 state109 state26 input192 input4 input2 input164 input175 input5 input189) 
  (not (P state33 state112 state30 state15 state7 state10 state23 state18 state109 state26 input192 input4 input2 input164 input175 input5 input189)))
  fail))

(query fail :print-certificate true)

