

;----------------------------------------
;  CHC generated from BTOR
;  Generated by COSA2 (Pono)
;----------------------------------------

(set-option :fp.engine spacer)

(define-fun Init 
    ((state125 (_ BitVec 12)) (state59 (_ BitVec 12)) (state43 (_ BitVec 3)) (state19 (_ BitVec 12)) (state29 (_ BitVec 12)) (state17 (_ BitVec 12)) (state31 (_ BitVec 12)) (state23 (_ BitVec 12)) (state25 (_ BitVec 12)) (input15 (_ BitVec 1)) (input216 (_ BitVec 12)) (input14 (_ BitVec 1)) (input13 (_ BitVec 1)) (input12 (_ BitVec 4)) (input10 (_ BitVec 12)) (input9 (_ BitVec 1)) (input3 (_ BitVec 12)) (input2 (_ BitVec 12)) (input4 (_ BitVec 12)) (input5 (_ BitVec 12)) (input219 (_ BitVec 3)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)))
     Bool
     (and (and (and (and (and (and (and (and (= state17 (_ bv0 12)) (= state19 (_ bv0 12))) (= state23 (_ bv0 12))) (= state25 (_ bv0 12))) (= state29 (_ bv0 12))) (= state31 (_ bv0 12))) (= state43 (_ bv0 3))) (= state59 (_ bv0 12))) (= state125 (_ bv0 12))))
(define-fun Trans 
    ((state125 (_ BitVec 12)) (state59 (_ BitVec 12)) (state43 (_ BitVec 3)) (state19 (_ BitVec 12)) (state29 (_ BitVec 12)) (state17 (_ BitVec 12)) (state31 (_ BitVec 12)) (state23 (_ BitVec 12)) (state25 (_ BitVec 12)) (input15 (_ BitVec 1)) (input216 (_ BitVec 12)) (input14 (_ BitVec 1)) (input13 (_ BitVec 1)) (input12 (_ BitVec 4)) (input10 (_ BitVec 12)) (input9 (_ BitVec 1)) (input3 (_ BitVec 12)) (input2 (_ BitVec 12)) (input4 (_ BitVec 12)) (input5 (_ BitVec 12)) (input219 (_ BitVec 3)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)) (state125.next (_ BitVec 12)) (state59.next (_ BitVec 12)) (state43.next (_ BitVec 3)) (state19.next (_ BitVec 12)) (state29.next (_ BitVec 12)) (state17.next (_ BitVec 12)) (state31.next (_ BitVec 12)) (state23.next (_ BitVec 12)) (state25.next (_ BitVec 12)) (input15.next (_ BitVec 1)) (input216.next (_ BitVec 12)) (input14.next (_ BitVec 1)) (input13.next (_ BitVec 1)) (input12.next (_ BitVec 4)) (input10.next (_ BitVec 12)) (input9.next (_ BitVec 1)) (input3.next (_ BitVec 12)) (input2.next (_ BitVec 12)) (input4.next (_ BitVec 12)) (input5.next (_ BitVec 12)) (input219.next (_ BitVec 3)) (input7.next (_ BitVec 1)) (input8.next (_ BitVec 1)))
    Bool
     (let ((.def_84 (= state59 (_ bv0 12)))) (let ((.def_88 (bvcomp input12 (_ bv9 4)))) (let ((.def_89 (ite (not .def_84) (_ bv1 1) (_ bv0 1)))) (let ((.def_94 (bvand input8 (bvnot input7)))) (let ((.def_95 (ite .def_84 (_ bv1 1) (_ bv0 1)))) (let ((.def_99 (bvcomp input12 (_ bv15 4)))) (let ((.def_102 (bvnot .def_94))) (let ((.def_104 (bvcomp input12 (_ bv1 4)))) (let ((.def_107 (bvor .def_104 (bvcomp input12 (_ bv3 4))))) (let ((.def_109 (bvcomp input12 (_ bv5 4)))) (let ((.def_112 (bvcomp input12 (_ bv7 4)))) (let ((.def_115 (bvcomp input12 (_ bv11 4)))) (let ((.def_125 (= ((_ extract 0 0) state43) (_ bv1 1)))) (let ((.def_129 (= ((_ extract 1 1) state43) (_ bv1 1)))) (let ((.def_138 (bvcomp input12 (_ bv8 4)))) (let ((.def_141 (bvcomp input12 (_ bv10 4)))) (let ((.def_145 (bvcomp input12 (_ bv13 4)))) (let ((.def_159 (bvcomp input12 (_ bv4 4)))) (let ((.def_161 (bvcomp input12 (_ bv12 4)))) (let ((.def_164 (bvcomp input12 (_ bv14 4)))) (let ((.def_178 (bvor .def_88 .def_138))) (let ((.def_219 (bvor .def_109 (bvor .def_159 (bvand .def_102 .def_104))))) (let ((.def_228 (not (= state43 (_ bv5 3))))) (let ((.def_234 (= .def_219 (_ bv1 1)))) (let ((.def_235 (ite .def_234 state125 input216))) (let ((.def_236 ((_ extract 0 0) .def_235))) (let ((.def_239 (ite .def_234 (ite .def_228 (bvadd (_ bv1 3) state43) state43) input219))) (let ((.def_240 ((_ extract 0 0) .def_239))) (let ((.def_241 (bvcomp .def_240 (_ bv0 1)))) (let ((.def_242 ((_ extract 1 1) .def_239))) (let ((.def_243 (bvcomp .def_242 (_ bv0 1)))) (let ((.def_244 ((_ extract 2 2) .def_239))) (let ((.def_245 (bvcomp .def_244 (_ bv0 1)))) (let ((.def_246 (bvand .def_243 .def_245))) (let ((.def_247 (bvand .def_241 .def_246))) (let ((.def_249 (ite .def_234 (_ bv4095 12) (_ bv0 12)))) (let ((.def_250 ((_ extract 0 0) .def_249))) (let ((.def_255 ((_ extract 1 1) .def_235))) (let ((.def_256 ((_ extract 1 1) .def_249))) (let ((.def_261 ((_ extract 2 2) .def_235))) (let ((.def_262 ((_ extract 2 2) .def_249))) (let ((.def_267 ((_ extract 3 3) .def_235))) (let ((.def_268 ((_ extract 3 3) .def_249))) (let ((.def_273 ((_ extract 4 4) .def_235))) (let ((.def_274 ((_ extract 4 4) .def_249))) (let ((.def_279 ((_ extract 5 5) .def_235))) (let ((.def_280 ((_ extract 5 5) .def_249))) (let ((.def_285 ((_ extract 6 6) .def_235))) (let ((.def_286 ((_ extract 6 6) .def_249))) (let ((.def_291 ((_ extract 7 7) .def_235))) (let ((.def_292 ((_ extract 7 7) .def_249))) (let ((.def_297 ((_ extract 8 8) .def_235))) (let ((.def_298 ((_ extract 8 8) .def_249))) (let ((.def_303 ((_ extract 9 9) .def_235))) (let ((.def_304 ((_ extract 9 9) .def_249))) (let ((.def_309 ((_ extract 10 10) .def_235))) (let ((.def_310 ((_ extract 10 10) .def_249))) (let ((.def_315 ((_ extract 11 11) .def_235))) (let ((.def_316 ((_ extract 11 11) .def_249))) (let ((.def_333 (bvcomp .def_240 (_ bv1 1)))) (let ((.def_335 (bvand .def_246 .def_333))) (let ((.def_411 (bvand .def_245 (bvcomp .def_242 (_ bv1 1))))) (let ((.def_412 (bvand .def_241 .def_411))) (let ((.def_486 (bvand .def_333 .def_411))) (let ((.def_561 (bvand .def_243 (bvcomp .def_244 (_ bv1 1))))) (let ((.def_562 (bvand .def_241 .def_561))) (let ((.def_636 (bvand .def_333 .def_561))) (let ((.def_709 (= (bvcomp input12 (_ bv0 4)) (_ bv1 1)))) (and (and (and (and (and (and (and (and (= state17.next (concat (ite (= (bvand .def_247 .def_316) (_ bv1 1)) .def_315 ((_ extract 11 11) state17)) (concat (ite (= (bvand .def_247 .def_310) (_ bv1 1)) .def_309 ((_ extract 10 10) state17)) (concat (ite (= (bvand .def_247 .def_304) (_ bv1 1)) .def_303 ((_ extract 9 9) state17)) (concat (ite (= (bvand .def_247 .def_298) (_ bv1 1)) .def_297 ((_ extract 8 8) state17)) (concat (ite (= (bvand .def_247 .def_292) (_ bv1 1)) .def_291 ((_ extract 7 7) state17)) (concat (ite (= (bvand .def_247 .def_286) (_ bv1 1)) .def_285 ((_ extract 6 6) state17)) (concat (ite (= (bvand .def_247 .def_280) (_ bv1 1)) .def_279 ((_ extract 5 5) state17)) (concat (ite (= (bvand .def_247 .def_274) (_ bv1 1)) .def_273 ((_ extract 4 4) state17)) (concat (ite (= (bvand .def_247 .def_268) (_ bv1 1)) .def_267 ((_ extract 3 3) state17)) (concat (ite (= (bvand .def_247 .def_262) (_ bv1 1)) .def_261 ((_ extract 2 2) state17)) (concat (ite (= (bvand .def_247 .def_256) (_ bv1 1)) .def_255 ((_ extract 1 1) state17)) (ite (= (bvand .def_247 .def_250) (_ bv1 1)) .def_236 ((_ extract 0 0) state17)))))))))))))) (= state19.next (concat (ite (= (bvand .def_316 .def_335) (_ bv1 1)) .def_315 ((_ extract 11 11) state19)) (concat (ite (= (bvand .def_310 .def_335) (_ bv1 1)) .def_309 ((_ extract 10 10) state19)) (concat (ite (= (bvand .def_304 .def_335) (_ bv1 1)) .def_303 ((_ extract 9 9) state19)) (concat (ite (= (bvand .def_298 .def_335) (_ bv1 1)) .def_297 ((_ extract 8 8) state19)) (concat (ite (= (bvand .def_292 .def_335) (_ bv1 1)) .def_291 ((_ extract 7 7) state19)) (concat (ite (= (bvand .def_286 .def_335) (_ bv1 1)) .def_285 ((_ extract 6 6) state19)) (concat (ite (= (bvand .def_280 .def_335) (_ bv1 1)) .def_279 ((_ extract 5 5) state19)) (concat (ite (= (bvand .def_274 .def_335) (_ bv1 1)) .def_273 ((_ extract 4 4) state19)) (concat (ite (= (bvand .def_268 .def_335) (_ bv1 1)) .def_267 ((_ extract 3 3) state19)) (concat (ite (= (bvand .def_262 .def_335) (_ bv1 1)) .def_261 ((_ extract 2 2) state19)) (concat (ite (= (bvand .def_256 .def_335) (_ bv1 1)) .def_255 ((_ extract 1 1) state19)) (ite (= (bvand .def_250 .def_335) (_ bv1 1)) .def_236 ((_ extract 0 0) state19))))))))))))))) (= state23.next (concat (ite (= (bvand .def_316 .def_412) (_ bv1 1)) .def_315 ((_ extract 11 11) state23)) (concat (ite (= (bvand .def_310 .def_412) (_ bv1 1)) .def_309 ((_ extract 10 10) state23)) (concat (ite (= (bvand .def_304 .def_412) (_ bv1 1)) .def_303 ((_ extract 9 9) state23)) (concat (ite (= (bvand .def_298 .def_412) (_ bv1 1)) .def_297 ((_ extract 8 8) state23)) (concat (ite (= (bvand .def_292 .def_412) (_ bv1 1)) .def_291 ((_ extract 7 7) state23)) (concat (ite (= (bvand .def_286 .def_412) (_ bv1 1)) .def_285 ((_ extract 6 6) state23)) (concat (ite (= (bvand .def_280 .def_412) (_ bv1 1)) .def_279 ((_ extract 5 5) state23)) (concat (ite (= (bvand .def_274 .def_412) (_ bv1 1)) .def_273 ((_ extract 4 4) state23)) (concat (ite (= (bvand .def_268 .def_412) (_ bv1 1)) .def_267 ((_ extract 3 3) state23)) (concat (ite (= (bvand .def_262 .def_412) (_ bv1 1)) .def_261 ((_ extract 2 2) state23)) (concat (ite (= (bvand .def_256 .def_412) (_ bv1 1)) .def_255 ((_ extract 1 1) state23)) (ite (= (bvand .def_250 .def_412) (_ bv1 1)) .def_236 ((_ extract 0 0) state23))))))))))))))) (= state25.next (concat (ite (= (bvand .def_316 .def_486) (_ bv1 1)) .def_315 ((_ extract 11 11) state25)) (concat (ite (= (bvand .def_310 .def_486) (_ bv1 1)) .def_309 ((_ extract 10 10) state25)) (concat (ite (= (bvand .def_304 .def_486) (_ bv1 1)) .def_303 ((_ extract 9 9) state25)) (concat (ite (= (bvand .def_298 .def_486) (_ bv1 1)) .def_297 ((_ extract 8 8) state25)) (concat (ite (= (bvand .def_292 .def_486) (_ bv1 1)) .def_291 ((_ extract 7 7) state25)) (concat (ite (= (bvand .def_286 .def_486) (_ bv1 1)) .def_285 ((_ extract 6 6) state25)) (concat (ite (= (bvand .def_280 .def_486) (_ bv1 1)) .def_279 ((_ extract 5 5) state25)) (concat (ite (= (bvand .def_274 .def_486) (_ bv1 1)) .def_273 ((_ extract 4 4) state25)) (concat (ite (= (bvand .def_268 .def_486) (_ bv1 1)) .def_267 ((_ extract 3 3) state25)) (concat (ite (= (bvand .def_262 .def_486) (_ bv1 1)) .def_261 ((_ extract 2 2) state25)) (concat (ite (= (bvand .def_256 .def_486) (_ bv1 1)) .def_255 ((_ extract 1 1) state25)) (ite (= (bvand .def_250 .def_486) (_ bv1 1)) .def_236 ((_ extract 0 0) state25))))))))))))))) (= state29.next (concat (ite (= (bvand .def_316 .def_562) (_ bv1 1)) .def_315 ((_ extract 11 11) state29)) (concat (ite (= (bvand .def_310 .def_562) (_ bv1 1)) .def_309 ((_ extract 10 10) state29)) (concat (ite (= (bvand .def_304 .def_562) (_ bv1 1)) .def_303 ((_ extract 9 9) state29)) (concat (ite (= (bvand .def_298 .def_562) (_ bv1 1)) .def_297 ((_ extract 8 8) state29)) (concat (ite (= (bvand .def_292 .def_562) (_ bv1 1)) .def_291 ((_ extract 7 7) state29)) (concat (ite (= (bvand .def_286 .def_562) (_ bv1 1)) .def_285 ((_ extract 6 6) state29)) (concat (ite (= (bvand .def_280 .def_562) (_ bv1 1)) .def_279 ((_ extract 5 5) state29)) (concat (ite (= (bvand .def_274 .def_562) (_ bv1 1)) .def_273 ((_ extract 4 4) state29)) (concat (ite (= (bvand .def_268 .def_562) (_ bv1 1)) .def_267 ((_ extract 3 3) state29)) (concat (ite (= (bvand .def_262 .def_562) (_ bv1 1)) .def_261 ((_ extract 2 2) state29)) (concat (ite (= (bvand .def_256 .def_562) (_ bv1 1)) .def_255 ((_ extract 1 1) state29)) (ite (= (bvand .def_250 .def_562) (_ bv1 1)) .def_236 ((_ extract 0 0) state29))))))))))))))) (= state31.next (concat (ite (= (bvand .def_316 .def_636) (_ bv1 1)) .def_315 ((_ extract 11 11) state31)) (concat (ite (= (bvand .def_310 .def_636) (_ bv1 1)) .def_309 ((_ extract 10 10) state31)) (concat (ite (= (bvand .def_304 .def_636) (_ bv1 1)) .def_303 ((_ extract 9 9) state31)) (concat (ite (= (bvand .def_298 .def_636) (_ bv1 1)) .def_297 ((_ extract 8 8) state31)) (concat (ite (= (bvand .def_292 .def_636) (_ bv1 1)) .def_291 ((_ extract 7 7) state31)) (concat (ite (= (bvand .def_286 .def_636) (_ bv1 1)) .def_285 ((_ extract 6 6) state31)) (concat (ite (= (bvand .def_280 .def_636) (_ bv1 1)) .def_279 ((_ extract 5 5) state31)) (concat (ite (= (bvand .def_274 .def_636) (_ bv1 1)) .def_273 ((_ extract 4 4) state31)) (concat (ite (= (bvand .def_268 .def_636) (_ bv1 1)) .def_267 ((_ extract 3 3) state31)) (concat (ite (= (bvand .def_262 .def_636) (_ bv1 1)) .def_261 ((_ extract 2 2) state31)) (concat (ite (= (bvand .def_256 .def_636) (_ bv1 1)) .def_255 ((_ extract 1 1) state31)) (ite (= (bvand .def_250 .def_636) (_ bv1 1)) .def_236 ((_ extract 0 0) state31))))))))))))))) (= state43.next (ite (= (bvand (bvor (bvand .def_102 (bvor .def_99 (bvor .def_145 (bvor .def_115 .def_141)))) (bvand .def_95 (bvor .def_99 .def_138))) (ite (not (= state43 (_ bv0 3))) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (bvadd (_ bv7 3) state43) (ite (= (bvand .def_219 (ite .def_228 (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (bvadd (_ bv1 3) state43) (ite .def_709 (_ bv0 3) state43))))) (= state59.next (ite (= (bvor (bvor .def_161 (bvand .def_102 .def_159)) (bvnot input14)) (_ bv1 1)) input10 (ite (= (bvand input14 (bvand .def_89 (bvor .def_99 .def_178))) (_ bv1 1)) (bvadd (_ bv4095 12) state59) state59)))) (= state125.next (ite .def_709 (_ bv0 12) (bvadd (ite (= (bvand .def_94 (bvor .def_109 .def_112)) (_ bv1 1)) state59 (ite (= (bvor (bvor (bvor (bvcomp input12 (_ bv2 4)) (bvand .def_88 .def_89)) (bvand (bvand .def_94 .def_95) .def_99)) (bvand .def_102 (bvor (bvor (bvor .def_107 .def_109) .def_112) .def_115))) (_ bv1 1)) input10 (ite (= (bvor (bvor (bvor (bvor (bvor .def_159 .def_161) .def_164) (bvand .def_94 (bvor .def_164 (bvor .def_115 (bvor .def_141 (bvor .def_107 (bvcomp input12 (_ bv6 4)))))))) (bvand .def_95 .def_178)) (bvand .def_102 (bvor .def_99 .def_145))) (_ bv1 1)) state125 (ite (= (bvor (bvor (bvor (bvand .def_89 .def_138) (bvand .def_102 .def_141)) (bvand .def_94 .def_145)) (bvand .def_99 (bvand .def_89 .def_94))) (_ bv1 1)) (ite (= ((_ extract 2 2) state43) (_ bv1 1)) (ite .def_129 (ite .def_125 input3 input2) (ite .def_125 state31 state29)) (ite .def_129 (ite .def_125 state25 state23) (ite .def_125 state19 state17))) (_ bv0 12))))) (concat (_ bv0 11) input9))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun P 
   ((state125 (_ BitVec 12)) (state59 (_ BitVec 12)) (state43 (_ BitVec 3)) (state19 (_ BitVec 12)) (state29 (_ BitVec 12)) (state17 (_ BitVec 12)) (state31 (_ BitVec 12)) (state23 (_ BitVec 12)) (state25 (_ BitVec 12)) (input15 (_ BitVec 1)) (input216 (_ BitVec 12)) (input14 (_ BitVec 1)) (input13 (_ BitVec 1)) (input12 (_ BitVec 4)) (input10 (_ BitVec 12)) (input9 (_ BitVec 1)) (input3 (_ BitVec 12)) (input2 (_ BitVec 12)) (input4 (_ BitVec 12)) (input5 (_ BitVec 12)) (input219 (_ BitVec 3)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)))
    Bool
     (not (= (bvand (bvcomp ((_ zero_extend 20) state17) (_ bv0 32)) (ite (or (not (= state43 (_ bv6 3))) (not (= state43 (_ bv7 3)))) (_ bv1 1) (_ bv0 1))) (_ bv0 1))))

(declare-var state125 (_ BitVec 12))
(declare-var state59 (_ BitVec 12))
(declare-var state43 (_ BitVec 3))
(declare-var state19 (_ BitVec 12))
(declare-var state29 (_ BitVec 12))
(declare-var state17 (_ BitVec 12))
(declare-var state31 (_ BitVec 12))
(declare-var state23 (_ BitVec 12))
(declare-var state25 (_ BitVec 12))

(declare-var state125.next (_ BitVec 12))
(declare-var state59.next (_ BitVec 12))
(declare-var state43.next (_ BitVec 3))
(declare-var state19.next (_ BitVec 12))
(declare-var state29.next (_ BitVec 12))
(declare-var state17.next (_ BitVec 12))
(declare-var state31.next (_ BitVec 12))
(declare-var state23.next (_ BitVec 12))
(declare-var state25.next (_ BitVec 12))

(declare-var input15 (_ BitVec 1))
(declare-var input216 (_ BitVec 12))
(declare-var input14 (_ BitVec 1))
(declare-var input13 (_ BitVec 1))
(declare-var input12 (_ BitVec 4))
(declare-var input10 (_ BitVec 12))
(declare-var input9 (_ BitVec 1))
(declare-var input3 (_ BitVec 12))
(declare-var input2 (_ BitVec 12))
(declare-var input4 (_ BitVec 12))
(declare-var input5 (_ BitVec 12))
(declare-var input219 (_ BitVec 3))
(declare-var input7 (_ BitVec 1))
(declare-var input8 (_ BitVec 1))
(declare-var input15.next (_ BitVec 1))
(declare-var input216.next (_ BitVec 12))
(declare-var input14.next (_ BitVec 1))
(declare-var input13.next (_ BitVec 1))
(declare-var input12.next (_ BitVec 4))
(declare-var input10.next (_ BitVec 12))
(declare-var input9.next (_ BitVec 1))
(declare-var input3.next (_ BitVec 12))
(declare-var input2.next (_ BitVec 12))
(declare-var input4.next (_ BitVec 12))
(declare-var input5.next (_ BitVec 12))
(declare-var input219.next (_ BitVec 3))
(declare-var input7.next (_ BitVec 1))
(declare-var input8.next (_ BitVec 1))


(declare-rel INV ((_ BitVec 12) (_ BitVec 12) (_ BitVec 3) (_ BitVec 12) (_ BitVec 12) (_ BitVec 12) (_ BitVec 12) (_ BitVec 12) (_ BitVec 12) (_ BitVec 1) (_ BitVec 12) (_ BitVec 1) (_ BitVec 1) (_ BitVec 4) (_ BitVec 12) (_ BitVec 1) (_ BitVec 12) (_ BitVec 12) (_ BitVec 12) (_ BitVec 12) (_ BitVec 3) (_ BitVec 1) (_ BitVec 1)))
(declare-rel fail ())

(rule (=> 
  (Init state125 state59 state43 state19 state29 state17 state31 state23 state25 input15 input216 input14 input13 input12 input10 input9 input3 input2 input4 input5 input219 input7 input8)
  (INV  state125 state59 state43 state19 state29 state17 state31 state23 state25 input15 input216 input14 input13 input12 input10 input9 input3 input2 input4 input5 input219 input7 input8)))

(rule (=> (and
  (INV  state125 state59 state43 state19 state29 state17 state31 state23 state25 input15 input216 input14 input13 input12 input10 input9 input3 input2 input4 input5 input219 input7 input8)
  (Trans state125 state59 state43 state19 state29 state17 state31 state23 state25 input15 input216 input14 input13 input12 input10 input9 input3 input2 input4 input5 input219 input7 input8 state125.next state59.next state43.next state19.next state29.next state17.next state31.next state23.next state25.next input15.next input216.next input14.next input13.next input12.next input10.next input9.next input3.next input2.next input4.next input5.next input219.next input7.next input8.next))
  (INV  state125.next state59.next state43.next state19.next state29.next state17.next state31.next state23.next state25.next input15.next input216.next input14.next input13.next input12.next input10.next input9.next input3.next input2.next input4.next input5.next input219.next input7.next input8.next)))

(rule (=> (and
  (INV state125 state59 state43 state19 state29 state17 state31 state23 state25 input15 input216 input14 input13 input12 input10 input9 input3 input2 input4 input5 input219 input7 input8) 
  (not (P state125 state59 state43 state19 state29 state17 state31 state23 state25 input15 input216 input14 input13 input12 input10 input9 input3 input2 input4 input5 input219 input7 input8)))
  fail))

(query fail :print-certificate true)

