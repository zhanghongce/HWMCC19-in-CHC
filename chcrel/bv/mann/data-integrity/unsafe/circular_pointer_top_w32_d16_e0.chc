

;----------------------------------------
;  CHC generated from BTOR
;  Generated by COSA2 (Pono)
;----------------------------------------

(set-option :fp.engine spacer)

(define-fun Init 
    ((state185 (_ BitVec 6)) (witness_0 (_ BitVec 1)) (state132 (_ BitVec 1)) (state113 (_ BitVec 6)) (state110 (_ BitVec 1)) (state101 (_ BitVec 6)) (state96 (_ BitVec 32)) (state91 (_ BitVec 32)) (state34 (_ BitVec 32)) (state29 (_ BitVec 32)) (state109 (_ BitVec 1)) (state24 (_ BitVec 32)) (state10 (_ BitVec 32)) (state18 (_ BitVec 32)) (state12 (_ BitVec 6)) (state75 (_ BitVec 32)) (state39 (_ BitVec 32)) (state128 (_ BitVec 32)) (state44 (_ BitVec 32)) (state49 (_ BitVec 32)) (state54 (_ BitVec 32)) (state59 (_ BitVec 32)) (state65 (_ BitVec 32)) (state70 (_ BitVec 32)) (state80 (_ BitVec 32)) (state86 (_ BitVec 32)) (input150 (_ BitVec 1)) (input9 (_ BitVec 32)) (input4 (_ BitVec 32)) (input2 (_ BitVec 1)) (input5 (_ BitVec 1)) (input6 (_ BitVec 1)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)))
     Bool
     (and (and (and (and (= state132 (_ bv1 1)) (= (bvcomp input7 state132) (_ bv1 1))) (= (bvor (bvnot (bvcomp state101 (_ bv17 6))) (bvnot input6)) (_ bv1 1))) (= (bvor (bvnot input5) (ite (not (= state101 (_ bv0 6))) (_ bv1 1) (_ bv0 1))) (_ bv1 1))) (= witness_0 (_ bv1 1))))
(define-fun Trans 
    ((state185 (_ BitVec 6)) (witness_0 (_ BitVec 1)) (state132 (_ BitVec 1)) (state113 (_ BitVec 6)) (state110 (_ BitVec 1)) (state101 (_ BitVec 6)) (state96 (_ BitVec 32)) (state91 (_ BitVec 32)) (state34 (_ BitVec 32)) (state29 (_ BitVec 32)) (state109 (_ BitVec 1)) (state24 (_ BitVec 32)) (state10 (_ BitVec 32)) (state18 (_ BitVec 32)) (state12 (_ BitVec 6)) (state75 (_ BitVec 32)) (state39 (_ BitVec 32)) (state128 (_ BitVec 32)) (state44 (_ BitVec 32)) (state49 (_ BitVec 32)) (state54 (_ BitVec 32)) (state59 (_ BitVec 32)) (state65 (_ BitVec 32)) (state70 (_ BitVec 32)) (state80 (_ BitVec 32)) (state86 (_ BitVec 32)) (input150 (_ BitVec 1)) (input9 (_ BitVec 32)) (input4 (_ BitVec 32)) (input2 (_ BitVec 1)) (input5 (_ BitVec 1)) (input6 (_ BitVec 1)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)) (state185.next (_ BitVec 6)) (witness_0.next (_ BitVec 1)) (state132.next (_ BitVec 1)) (state113.next (_ BitVec 6)) (state110.next (_ BitVec 1)) (state101.next (_ BitVec 6)) (state96.next (_ BitVec 32)) (state91.next (_ BitVec 32)) (state34.next (_ BitVec 32)) (state29.next (_ BitVec 32)) (state109.next (_ BitVec 1)) (state24.next (_ BitVec 32)) (state10.next (_ BitVec 32)) (state18.next (_ BitVec 32)) (state12.next (_ BitVec 6)) (state75.next (_ BitVec 32)) (state39.next (_ BitVec 32)) (state128.next (_ BitVec 32)) (state44.next (_ BitVec 32)) (state49.next (_ BitVec 32)) (state54.next (_ BitVec 32)) (state59.next (_ BitVec 32)) (state65.next (_ BitVec 32)) (state70.next (_ BitVec 32)) (state80.next (_ BitVec 32)) (state86.next (_ BitVec 32)) (input150.next (_ BitVec 1)) (input9.next (_ BitVec 32)) (input4.next (_ BitVec 32)) (input2.next (_ BitVec 1)) (input5.next (_ BitVec 1)) (input6.next (_ BitVec 1)) (input7.next (_ BitVec 1)) (input8.next (_ BitVec 1)))
    Bool
     (let ((.def_26 ((_ extract 4 0) state12))) (let ((.def_163 (bvnot state109))) (let ((.def_171 (= input7 (_ bv1 1)))) (let ((.def_172 (ite .def_171 (_ bv0 6) (bvadd (bvadd state113 ((_ zero_extend 5) (bvand input6 .def_163))) (bvneg ((_ zero_extend 5) input5)))))) (let ((.def_176 (bvand (bvand (bvand state109 (bvnot state110)) (ite (not (= state113 (_ bv0 6))) (_ bv1 1) (_ bv0 1))) (ite (= .def_172 (_ bv0 6)) (_ bv1 1) (_ bv0 1))))) (let ((.def_184 (= state132 (_ bv1 1)))) (let ((.def_246 (bvor input7 (bvor input5 input6)))) (let ((.def_271 ((_ extract 4 0) state185))) (let ((.def_338 (bvand input6 input8))) (let ((.def_363 (= .def_246 (_ bv1 1)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (bvcomp input7 state132) (_ bv1 1)) (= (bvcomp input7.next state132.next) (_ bv1 1))) (= (bvor (bvnot (bvcomp state101 (_ bv17 6))) (bvnot input6)) (_ bv1 1))) (= (bvor (bvnot input6.next) (bvnot (bvcomp state101.next (_ bv17 6)))) (_ bv1 1))) (= (bvor (bvnot input5) (ite (not (= state101 (_ bv0 6))) (_ bv1 1) (_ bv0 1))) (_ bv1 1))) (= (bvor (ite (not (= state101.next (_ bv0 6))) (_ bv1 1) (_ bv0 1)) (bvnot input5.next)) (_ bv1 1))) (= witness_0.next (bvnot (ite (= (bvand (ite .def_184 (_ bv0 1) (_ bv1 1)) (bvnot (ite .def_184 input150 (bvor (bvnot .def_176) (bvcomp state128 (ite (= .def_26 (_ bv0 5)) state96 (ite (= (bvcomp .def_26 (_ bv1 5)) (_ bv1 1)) state91 (ite (= (bvcomp .def_26 (_ bv2 5)) (_ bv1 1)) state86 (ite (= (bvcomp .def_26 (_ bv3 5)) (_ bv1 1)) state80 (ite (= (bvcomp .def_26 (_ bv4 5)) (_ bv1 1)) state75 (ite (= (bvcomp .def_26 (_ bv5 5)) (_ bv1 1)) state70 (ite (= (bvcomp .def_26 (_ bv6 5)) (_ bv1 1)) state65 (ite (= (bvcomp .def_26 (_ bv7 5)) (_ bv1 1)) state59 (ite (= (bvcomp .def_26 (_ bv8 5)) (_ bv1 1)) state54 (ite (= (bvcomp .def_26 (_ bv9 5)) (_ bv1 1)) state49 (ite (= (bvcomp .def_26 (_ bv10 5)) (_ bv1 1)) state44 (ite (= (bvcomp .def_26 (_ bv11 5)) (_ bv1 1)) state39 (ite (= (bvcomp .def_26 (_ bv12 5)) (_ bv1 1)) state34 (ite (= (bvcomp .def_26 (_ bv13 5)) (_ bv1 1)) state29 (ite (= (bvcomp .def_26 (_ bv14 5)) (_ bv1 1)) state24 (ite (= (bvcomp .def_26 (_ bv15 5)) (_ bv1 1)) state18 (ite (= (bvcomp .def_26 (_ bv16 5)) (_ bv1 1)) state10 input9)))))))))))))))))))))) (_ bv1 1)) (_ bv1 1) (_ bv0 1))))) (= state10.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv16 5))) (_ bv1 1)) input4 state10)))) (= state12.next (ite .def_171 (_ bv0 6) (ite .def_363 (bvadd state12 ((_ zero_extend 5) input5)) state12)))) (= state18.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv15 5))) (_ bv1 1)) input4 state18)))) (= state24.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv14 5))) (_ bv1 1)) input4 state24)))) (= state29.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv13 5))) (_ bv1 1)) input4 state29)))) (= state34.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv12 5))) (_ bv1 1)) input4 state34)))) (= state39.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv11 5))) (_ bv1 1)) input4 state39)))) (= state44.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv10 5))) (_ bv1 1)) input4 state44)))) (= state49.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv9 5))) (_ bv1 1)) input4 state49)))) (= state54.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv8 5))) (_ bv1 1)) input4 state54)))) (= state59.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv7 5))) (_ bv1 1)) input4 state59)))) (= state65.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv6 5))) (_ bv1 1)) input4 state65)))) (= state70.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv5 5))) (_ bv1 1)) input4 state70)))) (= state75.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv4 5))) (_ bv1 1)) input4 state75)))) (= state80.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv3 5))) (_ bv1 1)) input4 state80)))) (= state86.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv2 5))) (_ bv1 1)) input4 state86)))) (= state91.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (bvcomp .def_271 (_ bv1 5))) (_ bv1 1)) input4 state91)))) (= state96.next (ite .def_171 (_ bv0 32) (ite (= (bvand input6 (ite (= .def_271 (_ bv0 5)) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) input4 state96)))) (= state101.next (ite .def_171 (_ bv0 6) (bvadd (bvneg ((_ zero_extend 5) input5)) (bvadd state101 ((_ zero_extend 5) input6)))))) (= state109.next (ite .def_171 (_ bv0 1) (ite (= state109 (_ bv0 1)) (bvor state109 .def_338) state109)))) (= state110.next (ite .def_171 (_ bv0 1) (bvor state110 .def_176)))) (= state113.next (ite .def_171 (_ bv0 6) (ite (= (bvor state109 .def_246) (_ bv1 1)) .def_172 state113)))) (= state128.next (ite .def_171 (_ bv0 32) (ite (= (bvand .def_163 .def_338) (_ bv1 1)) input4 state128)))) (= state132.next (_ bv0 1))) (= state185.next (ite .def_171 (_ bv0 6) (ite .def_363 (bvadd state185 ((_ zero_extend 5) input6)) state185)))))))))))))))
(define-fun P 
   ((state185 (_ BitVec 6)) (witness_0 (_ BitVec 1)) (state132 (_ BitVec 1)) (state113 (_ BitVec 6)) (state110 (_ BitVec 1)) (state101 (_ BitVec 6)) (state96 (_ BitVec 32)) (state91 (_ BitVec 32)) (state34 (_ BitVec 32)) (state29 (_ BitVec 32)) (state109 (_ BitVec 1)) (state24 (_ BitVec 32)) (state10 (_ BitVec 32)) (state18 (_ BitVec 32)) (state12 (_ BitVec 6)) (state75 (_ BitVec 32)) (state39 (_ BitVec 32)) (state128 (_ BitVec 32)) (state44 (_ BitVec 32)) (state49 (_ BitVec 32)) (state54 (_ BitVec 32)) (state59 (_ BitVec 32)) (state65 (_ BitVec 32)) (state70 (_ BitVec 32)) (state80 (_ BitVec 32)) (state86 (_ BitVec 32)) (input150 (_ BitVec 1)) (input9 (_ BitVec 32)) (input4 (_ BitVec 32)) (input2 (_ BitVec 1)) (input5 (_ BitVec 1)) (input6 (_ BitVec 1)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)))
    Bool
     (= witness_0 (_ bv1 1)))

(declare-var state185 (_ BitVec 6))
(declare-var witness_0 (_ BitVec 1))
(declare-var state132 (_ BitVec 1))
(declare-var state113 (_ BitVec 6))
(declare-var state110 (_ BitVec 1))
(declare-var state101 (_ BitVec 6))
(declare-var state96 (_ BitVec 32))
(declare-var state91 (_ BitVec 32))
(declare-var state34 (_ BitVec 32))
(declare-var state29 (_ BitVec 32))
(declare-var state109 (_ BitVec 1))
(declare-var state24 (_ BitVec 32))
(declare-var state10 (_ BitVec 32))
(declare-var state18 (_ BitVec 32))
(declare-var state12 (_ BitVec 6))
(declare-var state75 (_ BitVec 32))
(declare-var state39 (_ BitVec 32))
(declare-var state128 (_ BitVec 32))
(declare-var state44 (_ BitVec 32))
(declare-var state49 (_ BitVec 32))
(declare-var state54 (_ BitVec 32))
(declare-var state59 (_ BitVec 32))
(declare-var state65 (_ BitVec 32))
(declare-var state70 (_ BitVec 32))
(declare-var state80 (_ BitVec 32))
(declare-var state86 (_ BitVec 32))

(declare-var state185.next (_ BitVec 6))
(declare-var witness_0.next (_ BitVec 1))
(declare-var state132.next (_ BitVec 1))
(declare-var state113.next (_ BitVec 6))
(declare-var state110.next (_ BitVec 1))
(declare-var state101.next (_ BitVec 6))
(declare-var state96.next (_ BitVec 32))
(declare-var state91.next (_ BitVec 32))
(declare-var state34.next (_ BitVec 32))
(declare-var state29.next (_ BitVec 32))
(declare-var state109.next (_ BitVec 1))
(declare-var state24.next (_ BitVec 32))
(declare-var state10.next (_ BitVec 32))
(declare-var state18.next (_ BitVec 32))
(declare-var state12.next (_ BitVec 6))
(declare-var state75.next (_ BitVec 32))
(declare-var state39.next (_ BitVec 32))
(declare-var state128.next (_ BitVec 32))
(declare-var state44.next (_ BitVec 32))
(declare-var state49.next (_ BitVec 32))
(declare-var state54.next (_ BitVec 32))
(declare-var state59.next (_ BitVec 32))
(declare-var state65.next (_ BitVec 32))
(declare-var state70.next (_ BitVec 32))
(declare-var state80.next (_ BitVec 32))
(declare-var state86.next (_ BitVec 32))

(declare-var input150 (_ BitVec 1))
(declare-var input9 (_ BitVec 32))
(declare-var input4 (_ BitVec 32))
(declare-var input2 (_ BitVec 1))
(declare-var input5 (_ BitVec 1))
(declare-var input6 (_ BitVec 1))
(declare-var input7 (_ BitVec 1))
(declare-var input8 (_ BitVec 1))
(declare-var input150.next (_ BitVec 1))
(declare-var input9.next (_ BitVec 32))
(declare-var input4.next (_ BitVec 32))
(declare-var input2.next (_ BitVec 1))
(declare-var input5.next (_ BitVec 1))
(declare-var input6.next (_ BitVec 1))
(declare-var input7.next (_ BitVec 1))
(declare-var input8.next (_ BitVec 1))


(declare-rel INV ((_ BitVec 6) (_ BitVec 1) (_ BitVec 1) (_ BitVec 6) (_ BitVec 1) (_ BitVec 6) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 6) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1)))
(declare-rel fail ())

(rule (=> 
  (Init state185 witness_0 state132 state113 state110 state101 state96 state91 state34 state29 state109 state24 state10 state18 state12 state75 state39 state128 state44 state49 state54 state59 state65 state70 state80 state86 input150 input9 input4 input2 input5 input6 input7 input8)
  (INV  state185 witness_0 state132 state113 state110 state101 state96 state91 state34 state29 state109 state24 state10 state18 state12 state75 state39 state128 state44 state49 state54 state59 state65 state70 state80 state86 input150 input9 input4 input2 input5 input6 input7 input8)))

(rule (=> (and
  (INV  state185 witness_0 state132 state113 state110 state101 state96 state91 state34 state29 state109 state24 state10 state18 state12 state75 state39 state128 state44 state49 state54 state59 state65 state70 state80 state86 input150 input9 input4 input2 input5 input6 input7 input8)
  (Trans state185 witness_0 state132 state113 state110 state101 state96 state91 state34 state29 state109 state24 state10 state18 state12 state75 state39 state128 state44 state49 state54 state59 state65 state70 state80 state86 input150 input9 input4 input2 input5 input6 input7 input8 state185.next witness_0.next state132.next state113.next state110.next state101.next state96.next state91.next state34.next state29.next state109.next state24.next state10.next state18.next state12.next state75.next state39.next state128.next state44.next state49.next state54.next state59.next state65.next state70.next state80.next state86.next input150.next input9.next input4.next input2.next input5.next input6.next input7.next input8.next))
  (INV  state185.next witness_0.next state132.next state113.next state110.next state101.next state96.next state91.next state34.next state29.next state109.next state24.next state10.next state18.next state12.next state75.next state39.next state128.next state44.next state49.next state54.next state59.next state65.next state70.next state80.next state86.next input150.next input9.next input4.next input2.next input5.next input6.next input7.next input8.next)))

(rule (=> (and
  (INV state185 witness_0 state132 state113 state110 state101 state96 state91 state34 state29 state109 state24 state10 state18 state12 state75 state39 state128 state44 state49 state54 state59 state65 state70 state80 state86 input150 input9 input4 input2 input5 input6 input7 input8) 
  (not (P state185 witness_0 state132 state113 state110 state101 state96 state91 state34 state29 state109 state24 state10 state18 state12 state75 state39 state128 state44 state49 state54 state59 state65 state70 state80 state86 input150 input9 input4 input2 input5 input6 input7 input8)))
  fail))

(query fail :print-certificate true)

