

;----------------------------------------
;  CHC generated from BTOR
;  Generated by COSA2 (Pono)
;----------------------------------------

(set-option :fp.engine spacer)

(define-fun Init 
    ((state115 (_ BitVec 64)) (state113 (_ BitVec 64)) (state109 (_ BitVec 64)) (state107 (_ BitVec 64)) (state105 (_ BitVec 64)) (state103 (_ BitVec 64)) (state87 (_ BitVec 64)) (state20 (_ BitVec 1)) (state97 (_ BitVec 64)) (state24 (_ BitVec 5)) (state101 (_ BitVec 64)) (state111 (_ BitVec 64)) (state39 (_ BitVec 64)) (state13 (_ BitVec 5)) (state10 (_ BitVec 64)) (state56 (_ BitVec 1)) (witness_0 (_ BitVec 1)) (state89 (_ BitVec 64)) (state91 (_ BitVec 64)) (state21 (_ BitVec 1)) (state93 (_ BitVec 64)) (state95 (_ BitVec 64)) (state99 (_ BitVec 64)) (input74 (_ BitVec 1)) (input9 (_ BitVec 1)) (input4 (_ BitVec 64)) (input2 (_ BitVec 1)) (input5 (_ BitVec 64)) (input6 (_ BitVec 1)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)))
     Bool
     (let ((.def_71 (= (bvor (bvnot input6) (ite (not (= state13 (_ bv0 5))) (_ bv1 1) (_ bv0 1))) (_ bv1 1)))) (let ((.def_86 (= (bvor (bvnot input7) (ite (bvult state13 (_ bv16 5)) (_ bv1 1) (_ bv0 1))) (_ bv1 1)))) (and (and .def_71 (and .def_86 (and (and (and .def_71 .def_86) (= state56 (_ bv1 1))) (= (bvcomp input8 state56) (_ bv1 1))))) (= witness_0 (_ bv1 1))))))
(define-fun Trans 
    ((state115 (_ BitVec 64)) (state113 (_ BitVec 64)) (state109 (_ BitVec 64)) (state107 (_ BitVec 64)) (state105 (_ BitVec 64)) (state103 (_ BitVec 64)) (state87 (_ BitVec 64)) (state20 (_ BitVec 1)) (state97 (_ BitVec 64)) (state24 (_ BitVec 5)) (state101 (_ BitVec 64)) (state111 (_ BitVec 64)) (state39 (_ BitVec 64)) (state13 (_ BitVec 5)) (state10 (_ BitVec 64)) (state56 (_ BitVec 1)) (witness_0 (_ BitVec 1)) (state89 (_ BitVec 64)) (state91 (_ BitVec 64)) (state21 (_ BitVec 1)) (state93 (_ BitVec 64)) (state95 (_ BitVec 64)) (state99 (_ BitVec 64)) (input74 (_ BitVec 1)) (input9 (_ BitVec 1)) (input4 (_ BitVec 64)) (input2 (_ BitVec 1)) (input5 (_ BitVec 64)) (input6 (_ BitVec 1)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)) (state115.next (_ BitVec 64)) (state113.next (_ BitVec 64)) (state109.next (_ BitVec 64)) (state107.next (_ BitVec 64)) (state105.next (_ BitVec 64)) (state103.next (_ BitVec 64)) (state87.next (_ BitVec 64)) (state20.next (_ BitVec 1)) (state97.next (_ BitVec 64)) (state24.next (_ BitVec 5)) (state101.next (_ BitVec 64)) (state111.next (_ BitVec 64)) (state39.next (_ BitVec 64)) (state13.next (_ BitVec 5)) (state10.next (_ BitVec 64)) (state56.next (_ BitVec 1)) (witness_0.next (_ BitVec 1)) (state89.next (_ BitVec 64)) (state91.next (_ BitVec 64)) (state21.next (_ BitVec 1)) (state93.next (_ BitVec 64)) (state95.next (_ BitVec 64)) (state99.next (_ BitVec 64)) (input74.next (_ BitVec 1)) (input9.next (_ BitVec 1)) (input4.next (_ BitVec 64)) (input2.next (_ BitVec 1)) (input5.next (_ BitVec 64)) (input6.next (_ BitVec 1)) (input7.next (_ BitVec 1)) (input8.next (_ BitVec 1)))
    Bool
     (let ((.def_27 (= state13 (_ bv0 5)))) (let ((.def_46 (bvnot state20))) (let ((.def_54 (= input8 (_ bv1 1)))) (let ((.def_55 (ite .def_54 (_ bv0 5) (bvadd (bvadd state24 ((_ zero_extend 4) (bvand input7 .def_46))) (bvneg ((_ zero_extend 4) input6)))))) (let ((.def_59 (bvand (bvand (bvand state20 (bvnot state21)) (ite (not (= state24 (_ bv0 5))) (_ bv1 1) (_ bv0 1))) (ite (= .def_55 (_ bv0 5)) (_ bv1 1) (_ bv0 1))))) (let ((.def_71 (= (bvor (bvnot input6) (ite (not .def_27) (_ bv1 1) (_ bv0 1))) (_ bv1 1)))) (let ((.def_78 (= (bvor (ite (not (= state13.next (_ bv0 5))) (_ bv1 1) (_ bv0 1)) (bvnot input6.next)) (_ bv1 1)))) (let ((.def_86 (= (bvor (bvnot input7) (ite (bvult state13 (_ bv16 5)) (_ bv1 1) (_ bv0 1))) (_ bv1 1)))) (let ((.def_94 (= (bvor (ite (bvult state13.next (_ bv16 5)) (_ bv1 1) (_ bv0 1)) (bvnot input7.next)) (_ bv1 1)))) (let ((.def_98 (= state56 (_ bv1 1)))) (let ((.def_184 (= input6 (_ bv1 1)))) (let ((.def_190 (bvadd ((_ zero_extend 27) state13) (bvneg ((_ zero_extend 31) input6))))) (let ((.def_414 (bvand input7 input9))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and .def_78 (and .def_71 (and .def_94 (and .def_86 (and (and (and (and (and .def_71 .def_78) .def_86) .def_94) (= (bvcomp input8 state56) (_ bv1 1))) (= (bvcomp input8.next state56.next) (_ bv1 1))))))) (= witness_0.next (bvnot (ite (= (bvand (ite .def_98 (_ bv0 1) (_ bv1 1)) (bvnot (ite .def_98 input74 (bvor (bvnot .def_59) (bvcomp state39 state10))))) (_ bv1 1)) (_ bv1 1) (_ bv0 1))))) (= state10.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (ite .def_27 (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (ite (= (bvand input7 (ite (= ((_ zero_extend 27) state13) ((_ zero_extend 31) input6)) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) input4 (ite .def_184 state99 (_ bv0 64))) state10)))) (= state13.next (ite .def_54 (_ bv0 5) (bvadd (bvneg ((_ zero_extend 4) input6)) (bvadd state13 ((_ zero_extend 4) input7)))))) (= state20.next (ite .def_54 (_ bv0 1) (ite (= state20 (_ bv0 1)) (bvor state20 .def_414) state20)))) (= state21.next (ite .def_54 (_ bv0 1) (bvor state21 .def_59)))) (= state24.next (ite .def_54 (_ bv0 5) (ite (= (bvor state20 (bvor input8 (bvor input6 input7))) (_ bv1 1)) .def_55 state24)))) (= state39.next (ite .def_54 (_ bv0 64) (ite (= (bvand .def_46 .def_414) (_ bv1 1)) input4 state39)))) (= state56.next (_ bv0 1))) (= state87.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv10 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv10 32))) (_ bv1 1)) input4 (ite .def_184 state89 (_ bv0 64))) state87)))) (= state89.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv11 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv11 32))) (_ bv1 1)) input4 (ite .def_184 state91 (_ bv0 64))) state89)))) (= state91.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv12 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv12 32))) (_ bv1 1)) input4 (ite .def_184 state93 (_ bv0 64))) state91)))) (= state93.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv13 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv13 32))) (_ bv1 1)) input4 (ite .def_184 state95 (_ bv0 64))) state93)))) (= state95.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv14 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv14 32))) (_ bv1 1)) input4 (ite .def_184 state97 (_ bv0 64))) state95)))) (= state97.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv15 5)))) (_ bv1 1)) input5 state97)))) (= state99.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv1 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv1 32))) (_ bv1 1)) input4 (ite .def_184 state101 (_ bv0 64))) state99)))) (= state101.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv2 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv2 32))) (_ bv1 1)) input4 (ite .def_184 state103 (_ bv0 64))) state101)))) (= state103.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv3 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv3 32))) (_ bv1 1)) input4 (ite .def_184 state105 (_ bv0 64))) state103)))) (= state105.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv4 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv4 32))) (_ bv1 1)) input4 (ite .def_184 state107 (_ bv0 64))) state105)))) (= state107.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv5 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv5 32))) (_ bv1 1)) input4 (ite .def_184 state109 (_ bv0 64))) state107)))) (= state109.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv6 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv6 32))) (_ bv1 1)) input4 (ite .def_184 state111 (_ bv0 64))) state109)))) (= state111.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv7 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv7 32))) (_ bv1 1)) input4 (ite .def_184 state113 (_ bv0 64))) state111)))) (= state113.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv8 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv8 32))) (_ bv1 1)) input4 (ite .def_184 state115 (_ bv0 64))) state113)))) (= state115.next (ite .def_54 (_ bv0 64) (ite (= (bvor input6 (bvand input7 (bvcomp state13 (_ bv9 5)))) (_ bv1 1)) (ite (= (bvand input7 (bvcomp .def_190 (_ bv9 32))) (_ bv1 1)) input4 (ite .def_184 state87 (_ bv0 64))) state115))))))))))))))))))
(define-fun P 
   ((state115 (_ BitVec 64)) (state113 (_ BitVec 64)) (state109 (_ BitVec 64)) (state107 (_ BitVec 64)) (state105 (_ BitVec 64)) (state103 (_ BitVec 64)) (state87 (_ BitVec 64)) (state20 (_ BitVec 1)) (state97 (_ BitVec 64)) (state24 (_ BitVec 5)) (state101 (_ BitVec 64)) (state111 (_ BitVec 64)) (state39 (_ BitVec 64)) (state13 (_ BitVec 5)) (state10 (_ BitVec 64)) (state56 (_ BitVec 1)) (witness_0 (_ BitVec 1)) (state89 (_ BitVec 64)) (state91 (_ BitVec 64)) (state21 (_ BitVec 1)) (state93 (_ BitVec 64)) (state95 (_ BitVec 64)) (state99 (_ BitVec 64)) (input74 (_ BitVec 1)) (input9 (_ BitVec 1)) (input4 (_ BitVec 64)) (input2 (_ BitVec 1)) (input5 (_ BitVec 64)) (input6 (_ BitVec 1)) (input7 (_ BitVec 1)) (input8 (_ BitVec 1)))
    Bool
     (= witness_0 (_ bv1 1)))

(declare-var state115 (_ BitVec 64))
(declare-var state113 (_ BitVec 64))
(declare-var state109 (_ BitVec 64))
(declare-var state107 (_ BitVec 64))
(declare-var state105 (_ BitVec 64))
(declare-var state103 (_ BitVec 64))
(declare-var state87 (_ BitVec 64))
(declare-var state20 (_ BitVec 1))
(declare-var state97 (_ BitVec 64))
(declare-var state24 (_ BitVec 5))
(declare-var state101 (_ BitVec 64))
(declare-var state111 (_ BitVec 64))
(declare-var state39 (_ BitVec 64))
(declare-var state13 (_ BitVec 5))
(declare-var state10 (_ BitVec 64))
(declare-var state56 (_ BitVec 1))
(declare-var witness_0 (_ BitVec 1))
(declare-var state89 (_ BitVec 64))
(declare-var state91 (_ BitVec 64))
(declare-var state21 (_ BitVec 1))
(declare-var state93 (_ BitVec 64))
(declare-var state95 (_ BitVec 64))
(declare-var state99 (_ BitVec 64))

(declare-var state115.next (_ BitVec 64))
(declare-var state113.next (_ BitVec 64))
(declare-var state109.next (_ BitVec 64))
(declare-var state107.next (_ BitVec 64))
(declare-var state105.next (_ BitVec 64))
(declare-var state103.next (_ BitVec 64))
(declare-var state87.next (_ BitVec 64))
(declare-var state20.next (_ BitVec 1))
(declare-var state97.next (_ BitVec 64))
(declare-var state24.next (_ BitVec 5))
(declare-var state101.next (_ BitVec 64))
(declare-var state111.next (_ BitVec 64))
(declare-var state39.next (_ BitVec 64))
(declare-var state13.next (_ BitVec 5))
(declare-var state10.next (_ BitVec 64))
(declare-var state56.next (_ BitVec 1))
(declare-var witness_0.next (_ BitVec 1))
(declare-var state89.next (_ BitVec 64))
(declare-var state91.next (_ BitVec 64))
(declare-var state21.next (_ BitVec 1))
(declare-var state93.next (_ BitVec 64))
(declare-var state95.next (_ BitVec 64))
(declare-var state99.next (_ BitVec 64))

(declare-var input74 (_ BitVec 1))
(declare-var input9 (_ BitVec 1))
(declare-var input4 (_ BitVec 64))
(declare-var input2 (_ BitVec 1))
(declare-var input5 (_ BitVec 64))
(declare-var input6 (_ BitVec 1))
(declare-var input7 (_ BitVec 1))
(declare-var input8 (_ BitVec 1))
(declare-var input74.next (_ BitVec 1))
(declare-var input9.next (_ BitVec 1))
(declare-var input4.next (_ BitVec 64))
(declare-var input2.next (_ BitVec 1))
(declare-var input5.next (_ BitVec 64))
(declare-var input6.next (_ BitVec 1))
(declare-var input7.next (_ BitVec 1))
(declare-var input8.next (_ BitVec 1))


(declare-rel INV ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 1) (_ BitVec 64) (_ BitVec 5) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 5) (_ BitVec 64) (_ BitVec 1) (_ BitVec 1) (_ BitVec 64) (_ BitVec 64) (_ BitVec 1) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 1) (_ BitVec 1) (_ BitVec 64) (_ BitVec 1) (_ BitVec 64) (_ BitVec 1) (_ BitVec 1) (_ BitVec 1)))
(declare-rel fail ())

(rule (=> 
  (Init state115 state113 state109 state107 state105 state103 state87 state20 state97 state24 state101 state111 state39 state13 state10 state56 witness_0 state89 state91 state21 state93 state95 state99 input74 input9 input4 input2 input5 input6 input7 input8)
  (INV  state115 state113 state109 state107 state105 state103 state87 state20 state97 state24 state101 state111 state39 state13 state10 state56 witness_0 state89 state91 state21 state93 state95 state99 input74 input9 input4 input2 input5 input6 input7 input8)))

(rule (=> (and
  (INV  state115 state113 state109 state107 state105 state103 state87 state20 state97 state24 state101 state111 state39 state13 state10 state56 witness_0 state89 state91 state21 state93 state95 state99 input74 input9 input4 input2 input5 input6 input7 input8)
  (Trans state115 state113 state109 state107 state105 state103 state87 state20 state97 state24 state101 state111 state39 state13 state10 state56 witness_0 state89 state91 state21 state93 state95 state99 input74 input9 input4 input2 input5 input6 input7 input8 state115.next state113.next state109.next state107.next state105.next state103.next state87.next state20.next state97.next state24.next state101.next state111.next state39.next state13.next state10.next state56.next witness_0.next state89.next state91.next state21.next state93.next state95.next state99.next input74.next input9.next input4.next input2.next input5.next input6.next input7.next input8.next))
  (INV  state115.next state113.next state109.next state107.next state105.next state103.next state87.next state20.next state97.next state24.next state101.next state111.next state39.next state13.next state10.next state56.next witness_0.next state89.next state91.next state21.next state93.next state95.next state99.next input74.next input9.next input4.next input2.next input5.next input6.next input7.next input8.next)))

(rule (=> (and
  (INV state115 state113 state109 state107 state105 state103 state87 state20 state97 state24 state101 state111 state39 state13 state10 state56 witness_0 state89 state91 state21 state93 state95 state99 input74 input9 input4 input2 input5 input6 input7 input8) 
  (not (P state115 state113 state109 state107 state105 state103 state87 state20 state97 state24 state101 state111 state39 state13 state10 state56 witness_0 state89 state91 state21 state93 state95 state99 input74 input9 input4 input2 input5 input6 input7 input8)))
  fail))

(query fail :print-certificate true)

